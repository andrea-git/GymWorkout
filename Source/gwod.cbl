      *{TOTEM}PRG-COMMENT
      * gwod.Cbl
      * gwod.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          gwod.
       AUTHOR.              andre.
       DATE-WRITTEN.        martedì 19 settembre 2023 19:49:52.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:gwod, INIT:gwod, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "exercises.sl".
           COPY "groups.sl".
           COPY "macrogroups.sl".
           COPY "duration.sl".
           COPY "tmp-exe-effort.sl".
           COPY "wodbook.sl".
           COPY "wodmap.sl".
           COPY "tmp-wod-exe.sl".
           COPY "tmp-exe.sl".
           COPY "intexe.sl".
           COPY "tmp-exe-dupl.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "exercises.fd".
           COPY "groups.fd".
           COPY "macrogroups.fd".
           COPY "duration.fd".
           COPY "tmp-exe-effort.fd".
           COPY "wodbook.fd".
           COPY "wodmap.fd".
           COPY "tmp-wod-exe.fd".
           COPY "tmp-exe.fd".
           COPY "intexe.fd".
           COPY "tmp-exe-dupl.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "comune.def".
               COPY "custom.def".
               COPY "UTYDATA.DEF".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Gestione WOD". 
       77 num-param        PIC  9
                  USAGE IS COMP-1
                  VALUE IS 0.
       77 RigaCambiata     PIC  9(5)
                  VALUE IS 0.
       77 ColonnaCambiata  PIC  9(5)
                  VALUE IS 0.
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 val-ini          PIC  99/99/9999.
       77 store-ini        PIC  9(8).
       77 store-codice     PIC  9(5).
       77 data-oggi        PIC  9(8).
       77 effort-xx        PIC  xx.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-NUOVO          PIC  9
                  VALUE IS 1.
       77 E-CANCELLA       PIC  9
                  VALUE IS 1.
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       77 E-ANTEPRIMA      PIC  9
                  VALUE IS 1.
       77 E-MODIFICA       PIC  9
                  VALUE IS 1.
       77 E-STAMPA         PIC  9
                  VALUE IS 0.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 E-SELEZIONA      PIC  9
                  VALUE IS 1.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Form1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 como-qta         PIC  9(6).
       77 link-stampante   PIC  x(200).
       77 como-effort      PIC  99.
       77 como-giorno      PIC  99.
       77 save-day         PIC  9.
       77 s-int-buf        PIC  x(100).
       77 s-dur-desc       PIC  x(100).
       77 como-mm          PIC  xx.
       77 como-hh          PIC  xx.
       77 como-durata      PIC  x(100).
       77 s-gio-buf        PIC  x(100).
       77 como-nome        PIC  x(100).
       77 tot-subst        PIC  999.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0,00.
       77 como-minuto-i    PIC  x(6).
       77 como-ora-e       PIC  x(3).
       77 como-dupl        PIC  x(100).
       77 colore           PIC  999.
       77 BOTTONE-annulla-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       01 rec-schema.
           05 sigle-effort.
               10 sigle-effort-1   PIC  x(7).
               10 sigle-effort-2   PIC  x(7).
               10 sigle-effort-3   PIC  x(7).
               10 sigle-effort-4   PIC  x(7).
               10 sigle-effort-5   PIC  x(7).
               10 sigle-effort-6   PIC  x(7).
               10 sigle-effort-7   PIC  x(7).
               10 sigle-effort-8   PIC  x(7).
               10 sigle-effort-9   PIC  x(7).
               10 sigle-effort-10  PIC  x(7).
           05 mcg.
               10 mcg-1            PIC  x(5).
               10 mcg-2            PIC  x(5).
               10 mcg-3            PIC  x(5).
               10 mcg-4            PIC  x(5).
               10 mcg-5            PIC  x(5).
               10 mcg-6            PIC  x(5).
               10 mcg-7            PIC  x(5).
               10 mcg-8            PIC  x(5).
               10 mcg-9            PIC  x(5).
               10 mcg-10           PIC  x(5).
       01 tab-exe.
           05 el-exe
                      OCCURS 20 TIMES.
               10 el-exe-code      PIC  x(5).
               10 el-exe-desc      PIC  x(100).
               10 el-exe-used      PIC  9.
               10 el-exe-effort    PIC  99.
               10 el-exe-restpause PIC  9.
       01 tab-wod-exe.
           05 el-wod-day
                      OCCURS 7 TIMES.
               10 el-wod-mcg-exe
                          OCCURS 20 TIMES.
                   15 el-wod-mcg       PIC  x(5).
                   15 el-wod-exe-code  PIC  x(5).
                   15 el-wod-exe-desc  PIC  x(100).
                   15 el-wod-exe-effort            PIC  9.
       77 RigheIniziali    PIC  9(3).
       77 como-giorni      PIC  99.
       77 hh   PIC  99.
       77 mm   PIC  99.
       77 resto            PIC  9(5).
       77 tot-durata       PIC  9(10).
       77 lastIdx          PIC  9(3).
       77 idx1 PIC  9(3).
       77 idx2 PIC  9(3).
       77 idx-days         PIC  9(3).
       77 idx-split        PIC  9(3).
       77 como-range-from  PIC  xx.
       77 como-range-to    PIC  xx.
       77 como-x           PIC  x.
       01 tot-mcg          PIC  99.
       01 tot-exe          PIC  99.
       01 como-tab-mcg.
           05 como-el-mcg-desc PIC  x(100)
                      OCCURS 10 TIMES.
       01 tab-mcg.
           05 el-mcg-desc      PIC  x(100)
                      OCCURS 10 TIMES.
       77 tot-gruppi       PIC  999.
       77 idx-gruppi       PIC  999.
       01 tab-mgroups.
           05 el-mgroups
                      OCCURS 10 TIMES.
               10 el-mgroup        PIC  x(100).
               10 el-mcg-code      PIC  x(5).
               10 el-mcg-hit       PIC  9(3).
       01 rec-grid.
           05 col-day          PIC  9.
           05 col-exe-prg      PIC  99.
           05 col-grp-code     PIC  x(5).
           05 col-grp-desc     PIC  x(100).
           05 col-exe-code     PIC  x(5).
           05 col-exe-desc     PIC  x(100).
           05 col-series       PIC  99.
           05 col-reps         PIC  x(20).
       77 Calibri14-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Calibri14B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 cambia-cliente-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Calibri12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Calibri12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 contact-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 Calibri18B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 default-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 Calibri16B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 form-prezz-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Calibri12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-exercises PIC  X(2).
           88 Valid-STATUS-exercises VALUE IS "00" THRU "09". 
       77 STATUS-groups    PIC  X(2).
           88 Valid-STATUS-groups VALUE IS "00" THRU "09". 
       77 STATUS-intensity PIC  X(2).
           88 Valid-STATUS-intensity VALUE IS "00" THRU "09". 
       77 STATUS-macrogroups           PIC  X(2).
           88 Valid-STATUS-macrogroups VALUE IS "00" THRU "09". 
       77 STATUS-wodbook   PIC  X(2).
           88 Valid-STATUS-wodbook VALUE IS "00" THRU "09". 
       77 cb-mg1-buf       PIC  X(100).
       77 cb-mg2-buf       PIC  X(100).
       77 cb-mg3-buf       PIC  X(100).
       77 cb-mg4-buf       PIC  X(100).
       77 cb-mg5-buf       PIC  X(100).
       77 cb-mgtb-buf      PIC  X(100).
       77 cb-int-buf       PIC  X(100).
       77 old-cb-dur-buf   PIC  X(100).
       77 STATUS-duration  PIC  X(2).
           88 Valid-STATUS-duration VALUE IS "00" THRU "09". 
       77 cb-rnd-buf       PIC  X(100).
       77 cb-dur-buf       PIC  X(100).
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 ex-remain        PIC  99.
       77 effort-wod       PIC  99.
       77 path-tmp-exe-effort          PIC  X(256).
       77 STATUS-tmp-exe-effort        PIC  X(2).
           88 Valid-STATUS-tmp-exe-effort VALUE IS "00" THRU "09". 
       77 cb-gio-buf       PIC  x(5).
       77 cb-mul-buf       PIC  X(100).
       77 cb-wod-buf       PIC  x(100).
       77 STATUS-wodmap    PIC  X(2).
           88 Valid-STATUS-wodmap VALUE IS "00" THRU "09". 
       77 cb-mg6-buf       PIC  X(100).
       77 path-tmp-wod-exe PIC  X(256).
       77 STATUS-tmp-wod-exe           PIC  X(2).
           88 Valid-STATUS-tmp-wod-exe VALUE IS "00" THRU "09". 
       77 path-tmp-exe     PIC  X(256).
       77 STATUS-tmp-exe   PIC  X(2).
           88 Valid-STATUS-tmp-exe VALUE IS "00" THRU "09". 
       77 STATUS-intexe    PIC  X(2).
           88 Valid-STATUS-intexe VALUE IS "00" THRU "09". 
       77 cb-mg7-buf       PIC  X(100).
       77 Calibri10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 genera-bmp       PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 random-bmp       PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-day         PIC  X(200).
       77 counter          PIC  9(3).
       77 path-tmp-exe-dupl            PIC  X(256).
       77 STATUS-tmp-exe-dupl          PIC  X(2).
           88 Valid-STATUS-tmp-exe-dupl VALUE IS "00" THRU "09". 
       77 Courier-New8-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Calibri10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 hiddenData.
           05 hid-restpause    PIC  9(3).

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form1-wodbook-RESTOREBUF  PIC X(2447).
       77 TMP-Form1-KEYIS  PIC 9(3) VALUE 1.
       77 Form1-MULKEY-TMPBUF   PIC X(2447).
       77 TMP-DataSet1-exercises-BUF     PIC X(1189).
       77 TMP-DataSet1-groups-BUF     PIC X(1182).
       77 TMP-DataSet1-macrogroups-BUF     PIC X(1177).
       77 TMP-DataSet1-duration-BUF     PIC X(1163).
       77 TMP-DataSet1-tmp-exe-effort-BUF     PIC X(112).
       77 TMP-DataSet1-wodbook-BUF     PIC X(2447).
       77 TMP-DataSet1-wodmap-BUF     PIC X(1444).
       77 TMP-DataSet1-tmp-wod-exe-BUF     PIC X(116).
       77 TMP-DataSet1-tmp-exe-BUF     PIC X(217).
       77 TMP-DataSet1-intexe-BUF     PIC X(1188).
       77 TMP-DataSet1-tmp-exe-dupl-BUF     PIC X(105).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-exercises-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-exercises-LOCK  VALUE "Y".
       77 DataSet1-exercises-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-exercises-KEY-Asc  VALUE "A".
          88 DataSet1-exercises-KEY-Desc VALUE "D".
       77 DataSet1-groups-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-groups-LOCK  VALUE "Y".
       77 DataSet1-groups-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-groups-KEY-Asc  VALUE "A".
          88 DataSet1-groups-KEY-Desc VALUE "D".
       77 DataSet1-macrogroups-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-macrogroups-LOCK  VALUE "Y".
       77 DataSet1-macrogroups-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-macrogroups-KEY-Asc  VALUE "A".
          88 DataSet1-macrogroups-KEY-Desc VALUE "D".
       77 DataSet1-duration-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-duration-LOCK  VALUE "Y".
       77 DataSet1-duration-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-duration-KEY-Asc  VALUE "A".
          88 DataSet1-duration-KEY-Desc VALUE "D".
       77 DataSet1-tmp-exe-effort-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-exe-effort-LOCK  VALUE "Y".
       77 DataSet1-tmp-exe-effort-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-exe-effort-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-exe-effort-KEY-Desc VALUE "D".
       77 DataSet1-wodbook-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-wodbook-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-wodbook-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-wodbook-KEY1-Asc  VALUE "A".
          88 DataSet1-wodbook-KEY1-Desc VALUE "D".
       77 DataSet1-wodmap-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-wodmap-LOCK  VALUE "Y".
       77 DataSet1-wodmap-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-wodmap-KEY-Asc  VALUE "A".
          88 DataSet1-wodmap-KEY-Desc VALUE "D".
       77 DataSet1-tmp-wod-exe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-wod-exe-LOCK  VALUE "Y".
       77 DataSet1-tmp-wod-exe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-wod-exe-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-wod-exe-KEY-Desc VALUE "D".
       77 DataSet1-tmp-exe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-exe-LOCK  VALUE "Y".
       77 DataSet1-tmp-exe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-exe-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-exe-KEY-Desc VALUE "D".
       77 DataSet1-intexe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-intexe-LOCK  VALUE "Y".
       77 DataSet1-intexe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-intexe-KEY-Asc  VALUE "A".
          88 DataSet1-intexe-KEY-Desc VALUE "D".
       77 DataSet1-tmp-exe-dupl-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-exe-dupl-LOCK  VALUE "Y".
       77 DataSet1-tmp-exe-dupl-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-exe-dupl-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-exe-dupl-KEY-Desc VALUE "D".

       77 exercises-exe-k-desc-SPLITBUF  PIC X(101).
       77 exercises-exe-k-group-SPLITBUF  PIC X(11).
       77 groups-grp-k-desc-SPLITBUF  PIC X(101).
       77 groups-grp-k-mcg-SPLITBUF  PIC X(11).
       77 macrogroups-mcg-k-desc-SPLITBUF  PIC X(101).
       77 duration-dur-k-desc-SPLITBUF  PIC X(101).
       77 duration-dur-k-exercises-SPLITBUF  PIC X(3).
       77 wodmap-wom-k-desc-SPLITBUF  PIC X(101).
       77 tmp-exe-tex-k-dupl-SPLITBUF  PIC X(102).
       77 intexe-int-k-desc-SPLITBUF  PIC X(101).
       77 intexe-int-k-effort-SPLITBUF  PIC X(3).
       77 tmp-exe-dupl-ted-k-num-SPLITBUF  PIC X(106).

       78  78-col-data       value 1. 
       78  78-col-art        value 2. 
       78  78-col-des        value 3. 
       78  78-col-qta        value 4. 
       78  78-col-prz        value 5. 
       78  78-col-sc1        value 6. 
      ***** 78  78-col-sc2        value 7. 
       78  78-col-netto      value 7. 
       78  78-col-note       value 8. 
       78  78-col-numdoc     value 9. 
       78  78-col-datadoc    value 10. 

       78  78-max-colonne    value 10.

       77  como-riga         pic 9(4).

       01                    pic 9.
           88 controllo-finale  value 1 false zero.

       01                 pic 9.
           88 s-excell    value 1.
           88 s-stampa    value 2.
           88 s-anteprima value 3.

       77  messaggio      pic x(200).  

       01 OLD-tsc-rec.
           05 OLD-tsc-chiave.
               10 OLD-tsc-codice       PIC  9(6).
           05 OLD-tsc-dati.
               10 OLD-tsc-cliente      PIC  x(6).
               10 OLD-tsc-data-creazione           PIC  9(8).
               10 OLD-tsc-vuoti.
                   15 FILLER           PIC  9(18).
                   15 FILLER           PIC  9(18).
                   15 FILLER           PIC  9(18).
                   15 FILLER           PIC  x(500).

       01 OLD-rsc-rec.
           05 OLD-rsc-chiave.
               10 OLD-rsc-codice       PIC  9(6).
               10 OLD-rsc-data         PIC  9(8).
               10 OLD-rsc-articolo     PIC  x(6).
               10 OLD-rsc-riga         PIC  9(6).
           05 OLD-rsc-dati.
               10 OLD-rsc-cliente      PIC  x(6).
               10 OLD-rsc-qta          PIC  9(8).
               10 OLD-rsc-prz          PIC  9(6)v99.
               10 OLD-rsc-sconto       PIC  9(3)v99.
               10 OLD-rsc-netto        PIC  9(6)v99.
               10 OLD-rsc-note         PIC  x(150).
               10 OLD-rsc-fattura.
                   15 OLD-rsc-numfat       PIC  9(6).
                   15 OLD-rsc-datafat      PIC  9(8).
               10 OLD-rsc-corrisp.
                   15 OLD-rsc-numcor       PIC  9(6).
                   15 OLD-rsc-datacor      PIC  9(8).
               10 OLD-rsc-vuoti.
                   15 FILLER           PIC  9(18).
                   15 FILLER           PIC  9(18).
                   15 FILLER           PIC  9(18).
                   15 FILLER           PIC  x(500).
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-gd1 VALUE 5001.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "F:\STUDIOPOSTURA\COPYLIB\BLOCKPGM.LKS".
       01 link-codice      PIC  9(6).

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * COMBO-BOX
       05
           cb-mg1, 
           Combo-Box, 
           COL 17,80, 
           LINE 1,70,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg1-buf,
           AFTER PROCEDURE cb-mg1-AfterProcedure, 
           BEFORE PROCEDURE cb-mg1-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-mg2, 
           Combo-Box, 
           COL 17,80, 
           LINE 3,17,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg2-buf,
           AFTER PROCEDURE cb-mg2-AfterProcedure, 
           BEFORE PROCEDURE cb-mg2-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-mg3, 
           Combo-Box, 
           COL 17,80, 
           LINE 4,70,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg3-buf,
           AFTER PROCEDURE cb-mg3-AfterProcedure, 
           BEFORE PROCEDURE cb-mg3-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-mg4, 
           Combo-Box, 
           COL 17,80, 
           LINE 6,17,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg4-buf,
           AFTER PROCEDURE cb-mg4-AfterProcedure, 
           BEFORE PROCEDURE cb-mg4-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-mg5, 
           Combo-Box, 
           COL 17,80, 
           LINE 7,70,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg5-buf,
           AFTER PROCEDURE cb-mg5-AfterProcedure, 
           BEFORE PROCEDURE cb-mg5-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-mg6, 
           Combo-Box, 
           COL 17,80, 
           LINE 9,17,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 28,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg6-buf,
           AFTER PROCEDURE cb-mg5-AfterProcedure, 
           BEFORE PROCEDURE cb-mg5-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-mg7, 
           Combo-Box, 
           COL 17,80, 
           LINE 10,70,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 35,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg7-buf,
           AFTER PROCEDURE cb-mg5-AfterProcedure, 
           BEFORE PROCEDURE cb-mg5-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-mul, 
           Combo-Box, 
           COL 17,80, 
           LINE 15,09,
           LINES 4,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 32,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mul-buf,
           AFTER PROCEDURE cb-rnd-AfterProcedure, 
           BEFORE PROCEDURE cb-rnd-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-int, 
           Combo-Box, 
           COL 17,80, 
           LINE 17,09,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-int-buf,
           AFTER PROCEDURE cb-int-AfterProcedure, 
           BEFORE PROCEDURE cb-int-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-dur, 
           Combo-Box, 
           COL 17,80, 
           LINE 18,57,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-dur-buf,
           AFTER PROCEDURE cb-dur-AfterProcedure, 
           BEFORE PROCEDURE cb-dur-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-gio, 
           Combo-Box, 
           COL 17,80, 
           LINE 20,09,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-gio-buf,
           AFTER PROCEDURE cb-gio-AfterProcedure, 
           BEFORE PROCEDURE cb-gio-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-wod, 
           Combo-Box, 
           COL 17,80, 
           LINE 21,57,
           LINES 6,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 34,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-wod-buf,
           AFTER PROCEDURE cb-wod-AfterProcedure, 
           BEFORE PROCEDURE cb-wod-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-genera, 
           Push-Button, 
           COL 17,80, 
           LINE 23,35,
           LINES 55 PIXELS,
           SIZE 148 PIXELS,
           BITMAP-HANDLE genera-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FONT IS Small-Font,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&GENERA",
           .

      * PUSH BUTTON
       05
           Screen1-Pb-1, 
           Push-Button, 
           COL 2,30, 
           LINE 23,83,
           LINES 1,48 ,
           SIZE 3,80 ,
           EXCEPTION-VALUE 1001,
           FONT IS Small-Font,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&C",
           .

      * PUSH BUTTON
       05
           Screen1-Pb-1a, 
           Push-Button, 
           COL 9,10, 
           LINE 23,83,
           LINES 1,48 ,
           SIZE 3,80 ,
           EXCEPTION-VALUE 1003,
           FONT IS Small-Font,
           ID IS 36,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&H",
           .

      * PUSH BUTTON
       05
           pb-random, 
           Push-Button, 
           COL 17,80, 
           LINE 12,35,
           LINES 55 PIXELS,
           SIZE 148 PIXELS,
           BITMAP-HANDLE random-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002,
           FONT IS Small-Font,
           ID IS 25,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&Random",
           .

      * GRID
       05
           gd1, 
           Grid, 
           COL 63,00, 
           LINE 1,70,
           LINES 34,87 ,
           SIZE 75,50 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 2, 4, 9, 109, 114, 214, 216),
           ALIGNMENT ("C", "R", "U", "L", "U", "L", "U", "U"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(1)", "z9", "X(5)", "X(100)", "X(5)", "X(100)"
           , "z9", "z9"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           FONT IS Calibri12-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 78-ID-gd1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 90,
           VPADDING 5,
           VSCROLL,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * LABEL
       05
           Screen1-blockpgm-1, 
           Label, 
           COL 83,70, 
           LINE 1,00,
           LINES 0,61 ,
           SIZE 1,50 ,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 90,70, 
           LINE 1,13,
           LINES 0,52 ,
           SIZE 0,80 ,
           ID IS 12,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           lab-a, 
           Label, 
           COL 3,00, 
           LINE 1,70,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Macrogruppo A",
           .

      * LABEL
       05
           lab-b, 
           Label, 
           COL 3,00, 
           LINE 3,17,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Macrogruppo B",
           .

      * LABEL
       05
           lab-c, 
           Label, 
           COL 3,00, 
           LINE 4,70,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Macrogruppo C",
           .

      * LABEL
       05
           lab-d, 
           Label, 
           COL 3,00, 
           LINE 6,17,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Macrogruppo D",
           .

      * LABEL
       05
           lab-e, 
           Label, 
           COL 3,00, 
           LINE 7,70,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Macrogruppo E",
           .

      * LABEL
       05
           Screen1-La-2a, 
           Label, 
           COL 3,00, 
           LINE 17,09,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Intensità",
           .

      * LABEL
       05
           Screen1-La-2aa, 
           Label, 
           COL 3,00, 
           LINE 18,57,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Durata",
           .

      * LABEL
       05
           Screen1-La-2aaa, 
           Label, 
           COL 3,00, 
           LINE 20,09,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Giorni",
           .

      * LABEL
       05
           Screen1-La-2ba, 
           Label, 
           COL 3,00, 
           LINE 15,09,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 31,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Multiarticolari",
           .

      * LABEL
       05
           Screen1-La-2aaaa, 
           Label, 
           COL 3,00, 
           LINE 21,57,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 33,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Modello",
           .

      * LABEL
       05
           lab-f, 
           Label, 
           COL 3,00, 
           LINE 9,17,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 27,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Macrogruppo F",
           .

      * LABEL
       05
           lab-g, 
           Label, 
           COL 3,00, 
           LINE 10,70,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Macrogruppo G",
           .

      * GRID
       05
           gd-schema, 
           Grid, 
           COL 2,30, 
           LINE 26,13,
           LINES 10,52 ,
           SIZE 58,50 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 3, 8, 13, 18, 23, 28, 33, 38, 43, 48, 53),
           ALIGNMENT ("R", "L", "L", "L", "L", "L", "L", "L", "L", "L", 
           "L", "U"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("z9", "x(5)", "X(5)", "X(100)", "X(5)", "X(100)"
           , "z9", "z9", "X", "X", "X", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           FONT IS Calibri10B-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 37,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 15,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 80,
           VPADDING 5,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * TOOLBAR
       01
           Form1-Tb-1,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 72,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "Esci (Esc)",
           .

      * PUSH BUTTON
       05
           TOOL-NUOVO, 
           Push-Button, 
           COL 6,30, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-NUOVO,
           EXCEPTION-VALUE 2,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 73,
           SELF-ACT,
           TITLE "Nuovo (F2)",
           BITMAP-NUMBER BitmapNumNew
           .

      * PUSH BUTTON
       05
           TOOL-SALVA, 
           Push-Button, 
           COL 11,60, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-SALVA,
           EXCEPTION-VALUE 3,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 75,
           SELF-ACT,
           TITLE "Salva (F3)",
           BITMAP-NUMBER BitmapNumSave
           .

      * PUSH BUTTON
       05
           TOOL-ANTEPRIMA, 
           Push-Button, 
           COL 16,90, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 6,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 6,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 76,
           SELF-ACT,
           TITLE "Anteprima (F6)",
           .

      * PUSH BUTTON
       05
           TOOL-STAMPA, 
           Push-Button, 
           COL 22,20, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 7,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 7,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 110,
           SELF-ACT,
           TITLE "Stampa (F7)",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 27,50, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 111,
           SELF-ACT,
           TITLE "Cerca (F8)",
           BITMAP-NUMBER BitmapNumZoom
           .

      * PUSH BUTTON
       05
           tool-modifica, 
           Push-Button, 
           COL 49,80, 
           LINE 1,13,
           LINES 1,35 ,
           SIZE 3,10 ,
           FONT IS Small-Font,
           ID IS 39,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Push Button",
           VISIBLE 0,
           .

      * PUSH BUTTON
       05
           tool-cancella, 
           Push-Button, 
           COL 52,90, 
           LINE 1,13,
           LINES 1,35 ,
           SIZE 3,10 ,
           FONT IS Small-Font,
           ID IS 40,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Push Button",
           VISIBLE 0,
           .

      * PUSH BUTTON
       05
           tool-seleziona, 
           Push-Button, 
           COL 56,00, 
           LINE 1,13,
           LINES 1,35 ,
           SIZE 3,10 ,
           FONT IS Calibri10-Occidentale,
           ID IS 41,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Push Button",
           VISIBLE 0,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, link-codice.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:gwod, INIT:gwod, BeforeDeclarative>
       WODBOOK-ERROR SECTION.
           use after error procedure on WODBOOK.
           set RecLocked to false.
           evaluate status-WODBOOK
           when "35"
                display message "File [WODBOOK] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [WODBOOK] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[WODBOOK] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "99"
           when "93"
                set RecLocked to true
                set errori    to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ginqui-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:gwod, INIT:gwod, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Calibri12-Occidentale
           DESTROY Calibri10B-Occidentale
           DESTROY Calibri14-Occidentale
           DESTROY Calibri10-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, genera-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, random-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Calibri12-Occidentale
           INITIALIZE WFONT-DATA Calibri12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri12-Occidentale, WFONT-DATA
      * Calibri10B-Occidentale
           INITIALIZE WFONT-DATA Calibri10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri10B-Occidentale, WFONT-DATA
      * Calibri14-Occidentale
           INITIALIZE WFONT-DATA Calibri14-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri14-Occidentale, WFONT-DATA
      * Calibri10-Occidentale
           INITIALIZE WFONT-DATA Calibri10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri10-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-genera
           COPY RESOURCE "genera.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "genera.bmp", 
                   GIVING genera-bmp.
      * pb-random
           COPY RESOURCE "random.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "random.bmp", 
                   GIVING random-bmp.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-exercises
           PERFORM OPEN-groups
           PERFORM OPEN-macrogroups
           PERFORM OPEN-duration
      *    tmp-exe-effort OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-exe-effort
           PERFORM OPEN-wodbook
           PERFORM OPEN-wodmap
      *    tmp-wod-exe OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-wod-exe
      *    tmp-exe OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-exe
           PERFORM OPEN-intexe
      *    tmp-exe-dupl OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-exe-dupl
      *    After Open
           .

       OPEN-exercises.
      * <TOTEM:EPT. INIT:gwod, FD:exercises, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT exercises
           IF NOT Valid-STATUS-exercises
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:exercises, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-groups.
      * <TOTEM:EPT. INIT:gwod, FD:groups, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT groups
           IF NOT Valid-STATUS-groups
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:groups, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-macrogroups.
      * <TOTEM:EPT. INIT:gwod, FD:macrogroups, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT macrogroups
           IF NOT Valid-STATUS-macrogroups
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:macrogroups, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-duration.
      * <TOTEM:EPT. INIT:gwod, FD:duration, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT duration
           IF NOT Valid-STATUS-duration
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:duration, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-exe-effort.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-effort, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-exe-effort
           IF NOT Valid-STATUS-tmp-exe-effort
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-effort, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-wodbook.
      * <TOTEM:EPT. INIT:gwod, FD:wodbook, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O wodbook
           IF STATUS-wodbook = "35"
              OPEN OUTPUT wodbook
                IF Valid-STATUS-wodbook
                   CLOSE wodbook
                   OPEN I-O wodbook
                END-IF
           END-IF
           IF NOT Valid-STATUS-wodbook
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:wodbook, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-wodmap.
      * <TOTEM:EPT. INIT:gwod, FD:wodmap, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT wodmap
           IF NOT Valid-STATUS-wodmap
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:wodmap, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-wod-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-wod-exe, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-wod-exe
           IF NOT Valid-STATUS-tmp-wod-exe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-wod-exe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-exe
           IF NOT Valid-STATUS-tmp-exe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-intexe.
      * <TOTEM:EPT. INIT:gwod, FD:intexe, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT intexe
           IF NOT Valid-STATUS-intexe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:intexe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-exe-dupl.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-dupl, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-exe-dupl
           IF NOT Valid-STATUS-tmp-exe-dupl
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-dupl, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-exercises
           PERFORM CLOSE-groups
           PERFORM CLOSE-macrogroups
           PERFORM CLOSE-duration
      *    tmp-exe-effort CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-exe-effort
           PERFORM CLOSE-wodbook
           PERFORM CLOSE-wodmap
      *    tmp-wod-exe CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-wod-exe
      *    tmp-exe CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-exe
           PERFORM CLOSE-intexe
      *    tmp-exe-dupl CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-exe-dupl
      *    After Close
           .

       CLOSE-exercises.
      * <TOTEM:EPT. INIT:gwod, FD:exercises, BeforeClose>
      * <TOTEM:END>
           CLOSE exercises
           .

       CLOSE-groups.
      * <TOTEM:EPT. INIT:gwod, FD:groups, BeforeClose>
      * <TOTEM:END>
           CLOSE groups
           .

       CLOSE-macrogroups.
      * <TOTEM:EPT. INIT:gwod, FD:macrogroups, BeforeClose>
      * <TOTEM:END>
           CLOSE macrogroups
           .

       CLOSE-duration.
      * <TOTEM:EPT. INIT:gwod, FD:duration, BeforeClose>
      * <TOTEM:END>
           CLOSE duration
           .

       CLOSE-tmp-exe-effort.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-effort, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-wodbook.
      * <TOTEM:EPT. INIT:gwod, FD:wodbook, BeforeClose>
      * <TOTEM:END>
           CLOSE wodbook
           .

       CLOSE-wodmap.
      * <TOTEM:EPT. INIT:gwod, FD:wodmap, BeforeClose>
      * <TOTEM:END>
           CLOSE wodmap
           .

       CLOSE-tmp-wod-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-wod-exe, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-intexe.
      * <TOTEM:EPT. INIT:gwod, FD:intexe, BeforeClose>
      * <TOTEM:END>
           CLOSE intexe
           .

       CLOSE-tmp-exe-dupl.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-dupl, BeforeClose>
      * <TOTEM:END>
           .

       exercises-exe-k-desc-MERGE-SPLITBUF.
           INITIALIZE exercises-exe-k-desc-SPLITBUF
           MOVE exe-desc(1:100) TO exercises-exe-k-desc-SPLITBUF(1:100)
           .

       exercises-exe-k-group-MERGE-SPLITBUF.
           INITIALIZE exercises-exe-k-group-SPLITBUF
           MOVE exe-grp-code(1:5) TO exercises-exe-k-group-SPLITBUF(1:5)
           MOVE exe-key(1:5) TO exercises-exe-k-group-SPLITBUF(6:5)
           .

       DataSet1-exercises-INITSTART.
           IF DataSet1-exercises-KEY-Asc
              MOVE Low-Value TO exe-key
           ELSE
              MOVE High-Value TO exe-key
           END-IF
           .

       DataSet1-exercises-INITEND.
           IF DataSet1-exercises-KEY-Asc
              MOVE High-Value TO exe-key
           ELSE
              MOVE Low-Value TO exe-key
           END-IF
           .

      * exercises
       DataSet1-exercises-START.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY >= exe-key
           ELSE
              START exercises KEY <= exe-key
           END-IF
           .

       DataSet1-exercises-START-NOTGREATER.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY <= exe-key
           ELSE
              START exercises KEY >= exe-key
           END-IF
           .

       DataSet1-exercises-START-GREATER.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY > exe-key
           ELSE
              START exercises KEY < exe-key
           END-IF
           .

       DataSet1-exercises-START-LESS.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY < exe-key
           ELSE
              START exercises KEY > exe-key
           END-IF
           .

       DataSet1-exercises-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-exercises-LOCK
              READ exercises WITH LOCK 
              KEY exe-key
           ELSE
              READ exercises WITH NO LOCK 
              KEY exe-key
           END-IF
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT 
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-exercises-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-exercises-KEY-Asc
              IF DataSet1-exercises-LOCK
                 READ exercises NEXT WITH LOCK
              ELSE
                 READ exercises NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-exercises-LOCK
                 READ exercises PREVIOUS WITH LOCK
              ELSE
                 READ exercises PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-exercises-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-exercises-KEY-Asc
              IF DataSet1-exercises-LOCK
                 READ exercises PREVIOUS WITH LOCK
              ELSE
                 READ exercises PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-exercises-LOCK
                 READ exercises NEXT WITH LOCK
              ELSE
                 READ exercises NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterDelete>
      * <TOTEM:END>
           .

       groups-grp-k-desc-MERGE-SPLITBUF.
           INITIALIZE groups-grp-k-desc-SPLITBUF
           MOVE grp-desc(1:100) TO groups-grp-k-desc-SPLITBUF(1:100)
           .

       groups-grp-k-mcg-MERGE-SPLITBUF.
           INITIALIZE groups-grp-k-mcg-SPLITBUF
           MOVE grp-mcg-code(1:5) TO groups-grp-k-mcg-SPLITBUF(1:5)
           MOVE grp-key(1:5) TO groups-grp-k-mcg-SPLITBUF(6:5)
           .

       DataSet1-groups-INITSTART.
           IF DataSet1-groups-KEY-Asc
              MOVE Low-Value TO grp-key
           ELSE
              MOVE High-Value TO grp-key
           END-IF
           .

       DataSet1-groups-INITEND.
           IF DataSet1-groups-KEY-Asc
              MOVE High-Value TO grp-key
           ELSE
              MOVE Low-Value TO grp-key
           END-IF
           .

      * groups
       DataSet1-groups-START.
           IF DataSet1-groups-KEY-Asc
              START groups KEY >= grp-key
           ELSE
              START groups KEY <= grp-key
           END-IF
           .

       DataSet1-groups-START-NOTGREATER.
           IF DataSet1-groups-KEY-Asc
              START groups KEY <= grp-key
           ELSE
              START groups KEY >= grp-key
           END-IF
           .

       DataSet1-groups-START-GREATER.
           IF DataSet1-groups-KEY-Asc
              START groups KEY > grp-key
           ELSE
              START groups KEY < grp-key
           END-IF
           .

       DataSet1-groups-START-LESS.
           IF DataSet1-groups-KEY-Asc
              START groups KEY < grp-key
           ELSE
              START groups KEY > grp-key
           END-IF
           .

       DataSet1-groups-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-groups-LOCK
              READ groups WITH LOCK 
              KEY grp-key
           ELSE
              READ groups WITH NO LOCK 
              KEY grp-key
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT 
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-groups-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-groups-KEY-Asc
              IF DataSet1-groups-LOCK
                 READ groups NEXT WITH LOCK
              ELSE
                 READ groups NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-groups-LOCK
                 READ groups PREVIOUS WITH LOCK
              ELSE
                 READ groups PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-groups-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-groups-KEY-Asc
              IF DataSet1-groups-LOCK
                 READ groups PREVIOUS WITH LOCK
              ELSE
                 READ groups PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-groups-LOCK
                 READ groups NEXT WITH LOCK
              ELSE
                 READ groups NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterDelete>
      * <TOTEM:END>
           .

       macrogroups-mcg-k-desc-MERGE-SPLITBUF.
           INITIALIZE macrogroups-mcg-k-desc-SPLITBUF
           MOVE mcg-desc(1:100) TO 
           macrogroups-mcg-k-desc-SPLITBUF(1:100)
           .

       DataSet1-macrogroups-INITSTART.
           IF DataSet1-macrogroups-KEY-Asc
              MOVE Low-Value TO mcg-key
           ELSE
              MOVE High-Value TO mcg-key
           END-IF
           .

       DataSet1-macrogroups-INITEND.
           IF DataSet1-macrogroups-KEY-Asc
              MOVE High-Value TO mcg-key
           ELSE
              MOVE Low-Value TO mcg-key
           END-IF
           .

      * macrogroups
       DataSet1-macrogroups-START.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY >= mcg-key
           ELSE
              START macrogroups KEY <= mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-NOTGREATER.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY <= mcg-key
           ELSE
              START macrogroups KEY >= mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-GREATER.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY > mcg-key
           ELSE
              START macrogroups KEY < mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-LESS.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY < mcg-key
           ELSE
              START macrogroups KEY > mcg-key
           END-IF
           .

       DataSet1-macrogroups-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-macrogroups-LOCK
              READ macrogroups WITH LOCK 
              KEY mcg-key
           ELSE
              READ macrogroups WITH NO LOCK 
              KEY mcg-key
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT 
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-macrogroups-KEY-Asc
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups NEXT WITH LOCK
              ELSE
                 READ macrogroups NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups PREVIOUS WITH LOCK
              ELSE
                 READ macrogroups PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-macrogroups-KEY-Asc
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups PREVIOUS WITH LOCK
              ELSE
                 READ macrogroups PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups NEXT WITH LOCK
              ELSE
                 READ macrogroups NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterDelete>
      * <TOTEM:END>
           .

       duration-dur-k-desc-MERGE-SPLITBUF.
           INITIALIZE duration-dur-k-desc-SPLITBUF
           MOVE dur-desc(1:100) TO duration-dur-k-desc-SPLITBUF(1:100)
           .

       duration-dur-k-exercises-MERGE-SPLITBUF.
           INITIALIZE duration-dur-k-exercises-SPLITBUF
           MOVE dur-exercises(1:2) TO 
           duration-dur-k-exercises-SPLITBUF(1:2)
           .

       DataSet1-duration-INITSTART.
           IF DataSet1-duration-KEY-Asc
              MOVE Low-Value TO dur-key
           ELSE
              MOVE High-Value TO dur-key
           END-IF
           .

       DataSet1-duration-INITEND.
           IF DataSet1-duration-KEY-Asc
              MOVE High-Value TO dur-key
           ELSE
              MOVE Low-Value TO dur-key
           END-IF
           .

      * duration
       DataSet1-duration-START.
           IF DataSet1-duration-KEY-Asc
              START duration KEY >= dur-key
           ELSE
              START duration KEY <= dur-key
           END-IF
           .

       DataSet1-duration-START-NOTGREATER.
           IF DataSet1-duration-KEY-Asc
              START duration KEY <= dur-key
           ELSE
              START duration KEY >= dur-key
           END-IF
           .

       DataSet1-duration-START-GREATER.
           IF DataSet1-duration-KEY-Asc
              START duration KEY > dur-key
           ELSE
              START duration KEY < dur-key
           END-IF
           .

       DataSet1-duration-START-LESS.
           IF DataSet1-duration-KEY-Asc
              START duration KEY < dur-key
           ELSE
              START duration KEY > dur-key
           END-IF
           .

       DataSet1-duration-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-duration-LOCK
              READ duration WITH LOCK 
              KEY dur-key
           ELSE
              READ duration WITH NO LOCK 
              KEY dur-key
           END-IF
           PERFORM duration-dur-k-desc-MERGE-SPLITBUF
           PERFORM duration-dur-k-exercises-MERGE-SPLITBUF
           MOVE STATUS-duration TO TOTEM-ERR-STAT 
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-duration-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-duration-KEY-Asc
              IF DataSet1-duration-LOCK
                 READ duration NEXT WITH LOCK
              ELSE
                 READ duration NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-duration-LOCK
                 READ duration PREVIOUS WITH LOCK
              ELSE
                 READ duration PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM duration-dur-k-desc-MERGE-SPLITBUF
           PERFORM duration-dur-k-exercises-MERGE-SPLITBUF
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-duration-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-duration-KEY-Asc
              IF DataSet1-duration-LOCK
                 READ duration PREVIOUS WITH LOCK
              ELSE
                 READ duration PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-duration-LOCK
                 READ duration NEXT WITH LOCK
              ELSE
                 READ duration NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM duration-dur-k-desc-MERGE-SPLITBUF
           PERFORM duration-dur-k-exercises-MERGE-SPLITBUF
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-duration-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-duration-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-duration-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-INITSTART.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              MOVE Low-Value TO tee-key
           ELSE
              MOVE High-Value TO tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-INITEND.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              MOVE High-Value TO tee-key
           ELSE
              MOVE Low-Value TO tee-key
           END-IF
           .

      * tmp-exe-effort
       DataSet1-tmp-exe-effort-START.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY >= tee-key
           ELSE
              START tmp-exe-effort KEY <= tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-START-NOTGREATER.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY <= tee-key
           ELSE
              START tmp-exe-effort KEY >= tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-START-GREATER.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY > tee-key
           ELSE
              START tmp-exe-effort KEY < tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-START-LESS.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY < tee-key
           ELSE
              START tmp-exe-effort KEY > tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeWrite>
      * <TOTEM:END>
           WRITE tee-rec OF tmp-exe-effort.
           MOVE STATUS-tmp-exe-effort TO TOTEM-ERR-STAT
           MOVE "tmp-exe-effort" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-effort TO TOTEM-ERR-STAT
           MOVE "tmp-exe-effort" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-effort TO TOTEM-ERR-STAT
           MOVE "tmp-exe-effort" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-wodbook-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 MOVE Low-Value TO wod-key
              ELSE
                 MOVE High-Value TO wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 MOVE High-Value TO wod-key
              ELSE
                 MOVE Low-Value TO wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           .

      * wodbook
       DataSet1-wodbook-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY >= wod-key
              ELSE
                 START wodbook KEY <= wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY <= wod-key
              ELSE
                 START wodbook KEY >= wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY > wod-key
              ELSE
                 START wodbook KEY < wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY < wod-key
              ELSE
                 START wodbook KEY > wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-LOCK
                 READ wodbook WITH LOCK 
                 KEY wod-key
              ELSE
                 READ wodbook WITH NO LOCK 
                 KEY wod-key
              END-IF
           END-EVALUATE
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT 
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 IF DataSet1-wodbook-LOCK
                    READ wodbook NEXT WITH LOCK
                 ELSE
                    READ wodbook NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-wodbook-LOCK
                    READ wodbook PREVIOUS WITH LOCK
                 ELSE
                    READ wodbook PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 IF DataSet1-wodbook-LOCK
                    READ wodbook PREVIOUS WITH LOCK
                 ELSE
                    READ wodbook PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-wodbook-LOCK
                    READ wodbook NEXT WITH LOCK
                 ELSE
                    READ wodbook NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeWrite>
      * <TOTEM:END>
           WRITE wod-rec OF wodbook.
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRewrite>
      * <TOTEM:END>
           REWRITE wod-rec OF wodbook.
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeDelete>
      * <TOTEM:END>
           DELETE wodbook.
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterDelete>
      * <TOTEM:END>
           .

       wodmap-wom-k-desc-MERGE-SPLITBUF.
           INITIALIZE wodmap-wom-k-desc-SPLITBUF
           MOVE wom-desc(1:100) TO wodmap-wom-k-desc-SPLITBUF(1:100)
           .

       DataSet1-wodmap-INITSTART.
           IF DataSet1-wodmap-KEY-Asc
              MOVE Low-Value TO wom-key
           ELSE
              MOVE High-Value TO wom-key
           END-IF
           .

       DataSet1-wodmap-INITEND.
           IF DataSet1-wodmap-KEY-Asc
              MOVE High-Value TO wom-key
           ELSE
              MOVE Low-Value TO wom-key
           END-IF
           .

      * wodmap
       DataSet1-wodmap-START.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY >= wom-key
           ELSE
              START wodmap KEY <= wom-key
           END-IF
           .

       DataSet1-wodmap-START-NOTGREATER.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY <= wom-key
           ELSE
              START wodmap KEY >= wom-key
           END-IF
           .

       DataSet1-wodmap-START-GREATER.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY > wom-key
           ELSE
              START wodmap KEY < wom-key
           END-IF
           .

       DataSet1-wodmap-START-LESS.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY < wom-key
           ELSE
              START wodmap KEY > wom-key
           END-IF
           .

       DataSet1-wodmap-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-wodmap-LOCK
              READ wodmap WITH LOCK 
              KEY wom-key
           ELSE
              READ wodmap WITH NO LOCK 
              KEY wom-key
           END-IF
           PERFORM wodmap-wom-k-desc-MERGE-SPLITBUF
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT 
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-wodmap-KEY-Asc
              IF DataSet1-wodmap-LOCK
                 READ wodmap NEXT WITH LOCK
              ELSE
                 READ wodmap NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-wodmap-LOCK
                 READ wodmap PREVIOUS WITH LOCK
              ELSE
                 READ wodmap PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM wodmap-wom-k-desc-MERGE-SPLITBUF
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-wodmap-KEY-Asc
              IF DataSet1-wodmap-LOCK
                 READ wodmap PREVIOUS WITH LOCK
              ELSE
                 READ wodmap PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-wodmap-LOCK
                 READ wodmap NEXT WITH LOCK
              ELSE
                 READ wodmap NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM wodmap-wom-k-desc-MERGE-SPLITBUF
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-INITSTART.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              MOVE Low-Value TO twe-key
           ELSE
              MOVE High-Value TO twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-INITEND.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              MOVE High-Value TO twe-key
           ELSE
              MOVE Low-Value TO twe-key
           END-IF
           .

      * tmp-wod-exe
       DataSet1-tmp-wod-exe-START.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY >= twe-key
           ELSE
              START tmp-wod-exe KEY <= twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-START-NOTGREATER.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY <= twe-key
           ELSE
              START tmp-wod-exe KEY >= twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-START-GREATER.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY > twe-key
           ELSE
              START tmp-wod-exe KEY < twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-START-LESS.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY < twe-key
           ELSE
              START tmp-wod-exe KEY > twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeWrite>
      * <TOTEM:END>
           WRITE twe-rec OF tmp-wod-exe.
           MOVE STATUS-tmp-wod-exe TO TOTEM-ERR-STAT
           MOVE "tmp-wod-exe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-wod-exe TO TOTEM-ERR-STAT
           MOVE "tmp-wod-exe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-wod-exe TO TOTEM-ERR-STAT
           MOVE "tmp-wod-exe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterDelete>
      * <TOTEM:END>
           .

       tmp-exe-tex-k-dupl-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-tex-k-dupl-SPLITBUF
           MOVE tex-day(1:1) TO tmp-exe-tex-k-dupl-SPLITBUF(1:1)
           MOVE tex-nome-dupl(1:100) TO 
           tmp-exe-tex-k-dupl-SPLITBUF(2:100)
           .

       DataSet1-tmp-exe-INITSTART.
           IF DataSet1-tmp-exe-KEY-Asc
              MOVE Low-Value TO tex-key
           ELSE
              MOVE High-Value TO tex-key
           END-IF
           .

       DataSet1-tmp-exe-INITEND.
           IF DataSet1-tmp-exe-KEY-Asc
              MOVE High-Value TO tex-key
           ELSE
              MOVE Low-Value TO tex-key
           END-IF
           .

      * tmp-exe
       DataSet1-tmp-exe-START.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY >= tex-key
           ELSE
              START tmp-exe KEY <= tex-key
           END-IF
           .

       DataSet1-tmp-exe-START-NOTGREATER.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY <= tex-key
           ELSE
              START tmp-exe KEY >= tex-key
           END-IF
           .

       DataSet1-tmp-exe-START-GREATER.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY > tex-key
           ELSE
              START tmp-exe KEY < tex-key
           END-IF
           .

       DataSet1-tmp-exe-START-LESS.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY < tex-key
           ELSE
              START tmp-exe KEY > tex-key
           END-IF
           .

       DataSet1-tmp-exe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeWrite>
      * <TOTEM:END>
           WRITE tex-rec OF tmp-exe.
           MOVE STATUS-tmp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-exe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-exe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-exe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterDelete>
      * <TOTEM:END>
           .

       intexe-int-k-desc-MERGE-SPLITBUF.
           INITIALIZE intexe-int-k-desc-SPLITBUF
           MOVE int-desc(1:100) TO intexe-int-k-desc-SPLITBUF(1:100)
           .

       intexe-int-k-effort-MERGE-SPLITBUF.
           INITIALIZE intexe-int-k-effort-SPLITBUF
           MOVE int-effort(1:2) TO intexe-int-k-effort-SPLITBUF(1:2)
           .

       DataSet1-intexe-INITSTART.
           IF DataSet1-intexe-KEY-Asc
              MOVE Low-Value TO int-key
           ELSE
              MOVE High-Value TO int-key
           END-IF
           .

       DataSet1-intexe-INITEND.
           IF DataSet1-intexe-KEY-Asc
              MOVE High-Value TO int-key
           ELSE
              MOVE Low-Value TO int-key
           END-IF
           .

      * intexe
       DataSet1-intexe-START.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY >= int-key
           ELSE
              START intexe KEY <= int-key
           END-IF
           .

       DataSet1-intexe-START-NOTGREATER.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY <= int-key
           ELSE
              START intexe KEY >= int-key
           END-IF
           .

       DataSet1-intexe-START-GREATER.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY > int-key
           ELSE
              START intexe KEY < int-key
           END-IF
           .

       DataSet1-intexe-START-LESS.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY < int-key
           ELSE
              START intexe KEY > int-key
           END-IF
           .

       DataSet1-intexe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-intexe-LOCK
              READ intexe WITH LOCK 
              KEY int-key
           ELSE
              READ intexe WITH NO LOCK 
              KEY int-key
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT 
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-intexe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-intexe-KEY-Asc
              IF DataSet1-intexe-LOCK
                 READ intexe NEXT WITH LOCK
              ELSE
                 READ intexe NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-intexe-LOCK
                 READ intexe PREVIOUS WITH LOCK
              ELSE
                 READ intexe PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-intexe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-intexe-KEY-Asc
              IF DataSet1-intexe-LOCK
                 READ intexe PREVIOUS WITH LOCK
              ELSE
                 READ intexe PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-intexe-LOCK
                 READ intexe NEXT WITH LOCK
              ELSE
                 READ intexe NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterDelete>
      * <TOTEM:END>
           .

       tmp-exe-dupl-ted-k-num-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-dupl-ted-k-num-SPLITBUF
           MOVE ted-num(1:3) TO tmp-exe-dupl-ted-k-num-SPLITBUF(1:3)
           MOVE ted-key(1:102) TO tmp-exe-dupl-ted-k-num-SPLITBUF(4:102)
           .

       DataSet1-tmp-exe-dupl-INITSTART.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              MOVE Low-Value TO ted-key
           ELSE
              MOVE High-Value TO ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-INITEND.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              MOVE High-Value TO ted-key
           ELSE
              MOVE Low-Value TO ted-key
           END-IF
           .

      * tmp-exe-dupl
       DataSet1-tmp-exe-dupl-START.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY >= ted-key
           ELSE
              START tmp-exe-dupl KEY <= ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-START-NOTGREATER.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY <= ted-key
           ELSE
              START tmp-exe-dupl KEY >= ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-START-GREATER.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY > ted-key
           ELSE
              START tmp-exe-dupl KEY < ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-START-LESS.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY < ted-key
           ELSE
              START tmp-exe-dupl KEY > ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeWrite>
      * <TOTEM:END>
           WRITE ted-rec OF tmp-exe-dupl.
           MOVE STATUS-tmp-exe-dupl TO TOTEM-ERR-STAT
           MOVE "tmp-exe-dupl" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-dupl TO TOTEM-ERR-STAT
           MOVE "tmp-exe-dupl" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-dupl TO TOTEM-ERR-STAT
           MOVE "tmp-exe-dupl" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE exe-rec OF exercises
           INITIALIZE grp-rec OF groups
           INITIALIZE mcg-rec OF macrogroups
           INITIALIZE dur-rec OF duration
           INITIALIZE tee-rec OF tmp-exe-effort
           INITIALIZE wod-rec OF wodbook
           INITIALIZE wom-rec OF wodmap
           INITIALIZE twe-rec OF tmp-wod-exe
           INITIALIZE tex-rec OF tmp-exe
           INITIALIZE int-rec OF intexe
           INITIALIZE ted-rec OF tmp-exe-dupl
           .


      * COMBO-BOX
       cb-mg1-Content.
           .

      * COMBO-BOX
       cb-mg2-Content.
           .

      * COMBO-BOX
       cb-mg3-Content.
           .

      * COMBO-BOX
       cb-mg4-Content.
           .

      * COMBO-BOX
       cb-mg5-Content.
           .

      * COMBO-BOX
       cb-mg6-Content.
           .

      * COMBO-BOX
       cb-mg7-Content.
           .

      * COMBO-BOX
       cb-mul-Content.
           .

      * COMBO-BOX
       cb-int-Content.
           .

      * COMBO-BOX
       cb-dur-Content.
           .

      * COMBO-BOX
       cb-gio-Content.
           .

      * COMBO-BOX
       cb-wod-Content.
           .

      * GRID
       gd1-Content.
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 1,
                CELL-DATA = "D",
      * CELLS' SETTING
              MODIFY gd1, X = 2, Y = 1,
                CELL-DATA = "#",
      * CELLS' SETTING
              MODIFY gd1, X = 3, Y = 1,
                CELL-DATA = "Gruppo",
      * CELLS' SETTING
              MODIFY gd1, X = 4, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd1, X = 5, Y = 1,
                CELL-DATA = "Ex",
      * CELLS' SETTING
              MODIFY gd1, X = 6, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd1, X = 7, Y = 1,
                CELL-DATA = "Series",
      * CELLS' SETTING
              MODIFY gd1, X = 8, Y = 1,
                CELL-DATA = "Reps",
           .

      * GRID
       gd-schema-Content.
      * CELLS' SETTING
              MODIFY gd-schema, X = 1, Y = 1,
                CELL-DATA = "Day",
      * CELLS' SETTING
              MODIFY gd-schema, X = 2, Y = 1,
                CELL-DATA = "#1",
      * CELLS' SETTING
              MODIFY gd-schema, X = 3, Y = 1,
                CELL-DATA = "#2",
      * CELLS' SETTING
              MODIFY gd-schema, X = 4, Y = 1,
                CELL-DATA = "#3",
      * CELLS' SETTING
              MODIFY gd-schema, X = 5, Y = 1,
                CELL-DATA = "#4",
      * CELLS' SETTING
              MODIFY gd-schema, X = 6, Y = 1,
                CELL-DATA = "#5",
      * CELLS' SETTING
              MODIFY gd-schema, X = 7, Y = 1,
                CELL-DATA = "#6",
      * CELLS' SETTING
              MODIFY gd-schema, X = 8, Y = 1,
                CELL-DATA = "#7",
      * CELLS' SETTING
              MODIFY gd-schema, X = 9, Y = 1,
                CELL-DATA = "#8",
      * CELLS' SETTING
              MODIFY gd-schema, X = 10, Y = 1,
                CELL-DATA = "#9",
      * CELLS' SETTING
              MODIFY gd-schema, X = 11, Y = 1,
                CELL-DATA = "#10",
      * CELLS' SETTING
              MODIFY gd-schema, X = 12, Y = 1,
                CELL-DATA = "Durata stimata",
           .

      * FD's Initialize Paragraph
       DataSet1-exercises-INITREC.
           INITIALIZE exe-rec OF exercises
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-groups-INITREC.
           INITIALIZE grp-rec OF groups
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-macrogroups-INITREC.
           INITIALIZE mcg-rec OF macrogroups
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-duration-INITREC.
           INITIALIZE dur-rec OF duration
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-exe-effort-INITREC.
           INITIALIZE tee-rec OF tmp-exe-effort
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-wodbook-INITREC.
           INITIALIZE wod-rec OF wodbook
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-wodmap-INITREC.
           INITIALIZE wom-rec OF wodmap
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-wod-exe-INITREC.
           INITIALIZE twe-rec OF tmp-wod-exe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-exe-INITREC.
           INITIALIZE tex-rec OF tmp-exe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-intexe-INITREC.
           INITIALIZE int-rec OF intexe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-exe-dupl-INITREC.
           INITIALIZE ted-rec OF tmp-exe-dupl
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form1-Buf-To-Fld
           END-EVALUATE
           .

       Form1-DISPLAY-STATUS-MSG.
            MODIFY Form1-St-1-Handle PANEL-INDEX = 1
                PANEL-TEXT = TOTEM-HINT-TEXT
           .

       Form1-CLEAR-STATUS-MSG.
           MOVE SPACES TO TOTEM-MSG-1, TOTEM-MSG-2, TOTEM-MSG-3, 
           TOTEM-MSG-TEXT
           PERFORM Form1-DISPLAY-STATUS-MSG
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              SCREEN LINE 2,
              SCREEN COLUMN 2,
              LINES 38,39,
              SIZE 139,90,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 131329,
              CONTROL FONT Calibri14-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 3,35,   
              CONTROL FONT IS Calibri14-Occidentale
              HANDLE IN Form1-Tb-1-Handle
           DISPLAY Form1-Tb-1 UPON Form1-Tb-1-Handle

      * Status-bar
           DISPLAY STATUS-BAR
              FONT IS Calibri14-Occidentale,
              GRIP,
              PANEL-WIDTHS (65, 28, 999),
              PANEL-STYLE  (1, 1, 1),
              PANEL-TEXT   (SPACE, SPACE, SPACE),
              HANDLE IS Form1-St-1-Handle
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd1, DISPLAY-COLUMNS (1, 6, 9, 16, 36, 43, 73, 78)
              MODIFY gd-schema, DISPLAY-COLUMNS (1, 6, 12, 18, 24, 30, 
           36, 42, 48, 54, 60, 66)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           perform INIT.
           perform ABILITA-TOOLBAR.
           perform ABILITAZIONI.
           perform STATUS-BAR-MSG.
           display form1.
                                                  
           modify cb-mg1, item-to-add = "Nessuno".
           modify cb-mg2, item-to-add = "Nessuno".
           modify cb-mg3, item-to-add = "Nessuno".
           modify cb-mg4, item-to-add = "Nessuno". 
           modify cb-mg5, item-to-add = "Nessuno".
           modify cb-mg6, item-to-add = "Nessuno".
           modify cb-mg7, item-to-add = "Nessuno".

           modify cb-mul, item-to-add = "No".
           modify cb-mul, item-to-add = "Si".     
                                                   
           modify cb-int, item-to-add = "Tutto".
           modify cb-dur, item-to-add = "Tutto".
           modify cb-wod, item-to-add = "Nessuno".
                                           
           modify cb-gio, item-to-add = "Tutto".
           modify cb-gio, item-to-add = "1".
           modify cb-gio, item-to-add = "2".
           modify cb-gio, item-to-add = "3".
           modify cb-gio, item-to-add = "4".
           modify cb-gio, item-to-add = "5".

           move low-value to mcg-desc.
           start macrogroups key >= mcg-k-desc
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read macrogroups next at end exit perform end-read

                    add 1 to tot-mcg 

                    modify cb-mg1, item-to-add = mcg-desc
                    modify cb-mg2, item-to-add = mcg-desc
                    modify cb-mg3, item-to-add = mcg-desc
                    modify cb-mg4, item-to-add = mcg-desc
                    modify cb-mg5, item-to-add = mcg-desc
                    modify cb-mg6, item-to-add = mcg-desc
                    modify cb-mg7, item-to-add = mcg-desc

                    move mcg-desc to el-mcg-desc(tot-mcg)
                 end-perform
           end-start. 
           move low-value to dur-rec.
           start duration key >= dur-k-desc
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read duration next at end exit perform end-read
                    modify cb-dur, item-to-add = dur-desc
                 end-perform
           end-start.               

           modify cb-int, item-to-add "Light wod effort".
           modify cb-int, item-to-add "Medium wod effort".
           modify cb-int, item-to-add "Heavy wod effort".

           modify cb-mg1, value "Nessuno".
           modify cb-mg2, value "Nessuno".
           modify cb-mg3, value "Nessuno".
           modify cb-mg4, value "Nessuno".
           modify cb-mg5, value "Nessuno".
           modify cb-mg6, value "Nessuno".
           modify cb-mg7, value "Nessuno".

           modify cb-mul,  value "Si".
                                          
           modify cb-int, value "Tutto".
           modify cb-dur, value "Tutto".
           modify cb-wod, value "Nessuno".

           modify cb-gio, value "Tutto".
                                        
           modify cb-mg1, enabled false.
           modify cb-mg2, enabled false.
           modify cb-mg3, enabled false.
           modify cb-mg4, enabled false.
           modify cb-mg5, enabled false.
           modify cb-mg6, enabled false.
           modify cb-mg7, enabled false.
           
           perform VALORIZZA-WOD.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-genera-LinkTo
              WHEN Key-Status = 1001
                 PERFORM Screen1-Pb-1-LinkTo
              WHEN Key-Status = 1003
                 PERFORM Screen1-Pb-1a-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-random-LinkTo
              WHEN Key-Status = 2
                 PERFORM NUOVO-LinkTo
              WHEN Key-Status = 3
                 PERFORM TOOL-SALVA-LinkTo
              WHEN Key-Status = 6
                 PERFORM ANTEPRIMA-LinkTo
              WHEN Key-Status = 7
                 PERFORM STAMPA-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * COMBO-BOX
           PERFORM cb-mg1-Content
      * COMBO-BOX
           PERFORM cb-mg2-Content
      * COMBO-BOX
           PERFORM cb-mg3-Content
      * COMBO-BOX
           PERFORM cb-mg4-Content
      * COMBO-BOX
           PERFORM cb-mg5-Content
      * COMBO-BOX
           PERFORM cb-mg6-Content
      * COMBO-BOX
           PERFORM cb-mg7-Content
      * COMBO-BOX
           PERFORM cb-mul-Content
      * COMBO-BOX
           PERFORM cb-int-Content
      * COMBO-BOX
           PERFORM cb-dur-Content
      * COMBO-BOX
           PERFORM cb-gio-Content
      * COMBO-BOX
           PERFORM cb-wod-Content
      * GRID
           PERFORM gd1-Content
      * GRID
           PERFORM gd-schema-Content
           .

       Form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Update-Key.
           MOVE wod-rec OF wodbook TO
                     Form1-MULKEY-TMPBUF
           PERFORM Form1-CLEAR
           PERFORM Form1-INIT-DATA
           MOVE Form1-MULKEY-TMPBUF TO
                     wod-rec OF wodbook
           PERFORM DataSet1-wodbook-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
           .

       Form1-DUPLICATE-MOVEKEY.
           .

       Form1-First.
           PERFORM Form1-DUMMY-FIRST
           PERFORM DataSet1-wodbook-INITSTART
           PERFORM DataSet1-wodbook-START
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Next
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFirst>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Previous.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-wodbook-START-LESS
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Prev
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-PREVIOUS
           PERFORM Form1-IUD-Display
           .

       Form1-Next.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-wodbook-START-GREATER
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Next
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterNext>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-NEXT
           PERFORM Form1-IUD-Display
           .
      
       Form1-Last.
           PERFORM Form1-DUMMY-LAST
           PERFORM DataSet1-wodbook-INITEND
           PERFORM DataSet1-wodbook-START-NOTGREATER
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Prev
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterLast>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Curr.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-wodbook-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCurrent>
      * <TOTEM:END>
           .

       Form1-IUD-Display.
           IF Valid-STATUS-wodbook
              PERFORM Form1-ALLGRID-RESET
              PERFORM Form1-Fld-To-Buf
              PERFORM Form1-NAVI-FOR-MASTERGRID
              PERFORM Form1-DISPLAY
           ELSE
              IF Form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form1-Extended-File-Status
              END-IF
           END-IF
           .

       Form1-Add.
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-ADD
           PERFORM DataSet1-wodbook-INITREC
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-wodbook-Rec-Write
           IF Valid-STATUS-wodbook
              PERFORM Form1-RESUMMARY-INS
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAdd>
      * <TOTEM:END>
           .
     
       Form1-Update.
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-wodbook-START              
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-wodbook-Read
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-UPDATE
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-wodbook-Rec-Rewrite
           IF Valid-STATUS-wodbook
              PERFORM Form1-RESUMMARY-DEL
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterUpdate>
      * <TOTEM:END>
           .

       Form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form1-DUMMY-DELETE
      * delete
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-wodbook-Rec-Delete
           IF Valid-STATUS-wodbook
              PERFORM Form1-CLEAR
              PERFORM Form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-wodbook
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDelete>
      * <TOTEM:END>
           PERFORM Form1-ERR-CHECKING
           .

       Form1-NAVI-FOR-MASTERGRID.
           .

       Form1-ERR-CHECKING.
           IF Valid-STATUS-wodbook
              PERFORM Form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form1-Extended-File-Status
           END-IF
           .

       Form1-RESUMMARY-INS.
           .

       Form1-RESUMMARY-DEL.
           .


       Form1-DUMMY-FIRST.
           .

       Form1-DUMMY-PREVIOUS.
           .

       Form1-DUMMY-NEXT.
           .

       Form1-DUMMY-LAST.
           .

       Form1-DUMMY-CURR.
           .

       Form1-DUMMY-ADD.
           .

       Form1-DUMMY-UPDATE.
           .

       Form1-DUMMY-UPDATE-INIT.
           .

       Form1-DUMMY-DELETE.
           .

       Form1-DUMMY-DELETE-INIT.
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * FORM : Form1
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
           perform ABILITAZIONI. 
           perform VALORIZZA-OLD.

           .
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           MOVE DataSet1-wodbook-KEY1-ORDER TO TMP-Form1-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form1-KEYIS
           MOVE wod-rec OF wodbook TO 
              TMP-Form1-wodbook-RESTOREBUF
           .             

       Form1-Restore-Status.
           MOVE TMP-Form1-KEY1-ORDER TO DataSet1-wodbook-KEY1-ORDER
           MOVE TMP-Form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form1-wodbook-RESTOREBUF TO
              wod-rec OF wodbook
           PERFORM DataSet1-wodbook-START
           IF Valid-STATUS-wodbook
              PERFORM DataSet1-wodbook-Read-Next
           ELSE
              PERFORM DataSet1-wodbook-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-wodbook OR
              (Valid-STATUS-wodbook AND
                 wod-rec OF wodbook = 
                   TMP-Form1-wodbook-RESTOREBUF)
              PERFORM DataSet1-wodbook-Read-Next
           END-PERFORM
           .



       Screen1-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5001 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Begin-Entry ALSO 37 ALSO
                    form1-Handle 
              PERFORM gd-schema-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "abilita-toolbar.cpy".
           copy "color-custom.cpy".
           copy "status.cpy".
           copy "utydata.cpy" 
           .
      * <TOTEM:END>

       ABILITA-MACROGRUPPI.
      * <TOTEM:PARA. ABILITA-MACROGRUPPI>
           inquire cb-wod, value in wom-desc.
           modify cb-mg1, enabled false.
           modify cb-mg2, enabled false.
           modify cb-mg3, enabled false.
           modify cb-mg4, enabled false.
           modify cb-mg5, enabled false.
           modify cb-mg6, enabled false.
           modify cb-mg7, enabled false. 

           read wodmap key wom-k-desc
                invalid
                modify cb-mg1, value "Nessuno"
                modify cb-mg2, value "Nessuno"
                modify cb-mg3, value "Nessuno"
                modify cb-mg4, value "Nessuno"
                modify cb-mg5, value "Nessuno"
                modify cb-mg6, value "Nessuno"
                modify cb-mg7, value "Nessuno"
                initialize wom-data replacing numeric data by zeroes
                                         alphanumeric data by spaces
                exit paragraph
           end-read.
                     
           modify gd-schema, reset-grid = 1.
           perform GD-SCHEMA-CONTENT.
           move 1 to riga.
           move 304 to colore.
           perform varying idx-days from 1 by 1
                     until idx-days > wom-days
              initialize rec-schema
                         replacing numeric data by zeroes
                              alphanumeric data by spaces
              perform varying idx-split from 1 by 1
                        until idx-split > 20
                 if wom-split-el-split-sigla(idx-days, idx-split) = 
           space
                    exit perform
                 end-if                     
                 evaluate wom-split-el-split-sigla(idx-days, idx-split)
                 when "A" inquire cb-mg1, value = mcg-desc
                 when "B" inquire cb-mg2, value = mcg-desc
                 when "C" inquire cb-mg3, value = mcg-desc
                 when "D" inquire cb-mg4, value = mcg-desc
                 when "E" inquire cb-mg5, value = mcg-desc
                 when "F" inquire cb-mg6, value = mcg-desc
                 when "G" inquire cb-mg7, value = mcg-desc
                 end-evaluate
                 read macrogroups key mcg-k-desc

                 move wom-split-el-split-int-code(idx-days, idx-split)
                   to int-code
                 read intexe no lock
                 
                 initialize como-day
                 move int-effort to effort-xx
                 inspect effort-xx replacing leading x"30" by x"20"
                 call "C$JUSTIFY" using effort-xx, "L"
                 inspect effort-xx replacing trailing spaces by 
           low-value

                 inspect como-day replacing trailing spaces by low-value
                 string  como-day delimited low-value
                         wom-split-el-split-sigla(idx-days, idx-split)
                         wom-split-el-split-int-code(idx-days, 
           idx-split)
                         "-"          
                         effort-xx delimited low-value
                         int-desc(1:1)
                    into como-day
                 end-string
                 evaluate idx-split
                 when 1 move como-day to sigle-effort-1
                        move mcg-code to mcg-1
                 when 2 move como-day to sigle-effort-2
                        move mcg-code to mcg-2
                 when 3 move como-day to sigle-effort-3
                        move mcg-code to mcg-3
                 when 4 move como-day to sigle-effort-4
                        move mcg-code to mcg-4
                 when 5 move como-day to sigle-effort-5
                        move mcg-code to mcg-5
                 when 6 move como-day to sigle-effort-6
                        move mcg-code to mcg-6
                 when 7 move como-day to sigle-effort-7
                        move mcg-code to mcg-7
                 end-evaluate
              end-perform
              if colore = 304 
                 move 0 to colore
              else
                 move 304 to colore
              end-if
              add 1 to riga 
              modify gd-schema(riga,  1), cell-data = idx-days
              modify gd-schema(riga,  2), cell-data = sigle-effort-1
              modify gd-schema(riga,  3), cell-data = sigle-effort-2
              modify gd-schema(riga,  4), cell-data = sigle-effort-3
              modify gd-schema(riga,  5), cell-data = sigle-effort-4
              modify gd-schema(riga,  6), cell-data = sigle-effort-5
              modify gd-schema(riga,  7), cell-data = sigle-effort-6
              modify gd-schema(riga,  8), cell-data = sigle-effort-7
              modify gd-schema(riga,  9), cell-data = sigle-effort-8
              modify gd-schema(riga, 10), cell-data = sigle-effort-9
              modify gd-schema(riga, 11), cell-data = sigle-effort-10
              modify gd-schema(riga, 12), cell-data = spaces            
               

              modify gd-schema(riga), row-color = colore
              add 1 to riga                                  
              modify gd-schema(riga,  1), cell-data = spaces
              modify gd-schema(riga,  2), cell-data = mcg-1
              modify gd-schema(riga,  3), cell-data = mcg-2
              modify gd-schema(riga,  4), cell-data = mcg-3
              modify gd-schema(riga,  5), cell-data = mcg-4
              modify gd-schema(riga,  6), cell-data = mcg-5
              modify gd-schema(riga,  7), cell-data = mcg-6
              modify gd-schema(riga,  8), cell-data = mcg-7
              modify gd-schema(riga,  9), cell-data = mcg-8
              modify gd-schema(riga, 10), cell-data = mcg-9 
              modify gd-schema(riga, 11), cell-data = mcg-10
              modify gd-schema(riga, 12), cell-data = spaces
              modify gd-schema(riga), row-color = colore    
           end-perform.             

           evaluate wom-macrogroups
           when 1
                modify cb-mg1, enabled true
           when 2                           
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
           when 3            
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
           when 4            
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
           when 5                          
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
                modify cb-mg5, enabled true
           when 6                          
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
                modify cb-mg5, enabled true
                modify cb-mg6, enabled true
           when 7                          
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
                modify cb-mg5, enabled true
                modify cb-mg6, enabled true
                modify cb-mg7, enabled true
           end-evaluate 
           .
      * <TOTEM:END>

       ABILITAZIONI.
      * <TOTEM:PARA. ABILITAZIONI>
           if mod = 1              
              move BitmapDeleteEnabled to BitmapNumDelete
              move BitmapSaveEnabled   to BitmapNumSave
              move 1 to e-salva e-cancella
           else           
              move BitmapDeleteDisabled to BitmapNumDelete
              move BitmapSaveDisabled   to BitmapNumSave
              move 0 to e-salva e-cancella
           end-if.      


           modify tool-cancella, enabled = e-cancella.
           modify tool-salva,    enabled = e-salva.
       
      * ISACCO (SERVE SEMPRE PER LA MODIFICA PRCEDENTE E PER RIPRISTINARE
      * LE BITMAP DISABILITATE. - 10/11/2003
      *     perform FORM1-DISPLAY.
           display tool-nuovo, tool-salva, tool-cancella, tool-modifica.
      * FINE 
           .
      * <TOTEM:END>

       ANTEPRIMA.
      * <TOTEM:PARA. ANTEPRIMA>
           set s-anteprima to true.
           perform STAMPA-ANTEPRIMA 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
      *     evaluate CONTROL-ID
      **
      *     when 78-ID-ef-cliente           
      *          set SceltoCliente to false
      *          inquire ef-cliente, value in cli-codice
      *          move "clienti-alfa" to como-file
      *          call "zoom-gt"   using como-file, cli-rec
      *                          giving stato-zoom
      *          cancel "zoom-gt"
      *          if stato-zoom = 0
      *             set SceltoCliente to true
      *             move cli-codice   to tsc-cliente
      *             modify ef-cliente, value tsc-cliente
      *             move 4                to ACCEPT-CONTROL   
      *          end-if
      *
      *     when 78-ID-gd1
      *          perform X-Y
      *          evaluate colonna
      *          when 78-col-art
      *               inquire gd1(riga, 78-col-art), 
      *                                         cell-data in art-codice
      *               move "articoli"     to Como-File
      *               call   "zoom-gt" using  como-file, art-rec
      *                                giving stato-zoom
      *               cancel "zoom-gt"
      *               if stato-zoom = 0
      *                  move art-codice        to col-art
      *                  move art-descrizione   to col-des
      *                  modify gd1(riga, 78-col-art), 
      *                         cell-data = col-art
      *                  modify gd1(riga, 78-col-des), 
      *                         cell-data = col-des
      *                  perform CONTROLLO-RIGA
      *               end-if
      *
      *          when 78-col-prz
      *               perform VALORE-RIGA
      *               move riga to store-riga
      *               perform FORM-PREZZI-OPEN-ROUTINE
      *               move store-riga to riga
      *               if prezzo-scelto not = 0
      *                  move prezzo-scelto to col-prz
      *                  modify gd1(riga, 78-col-prz), cell-data col-prz
      *                  if como-col-sc1 = 0 |and como-col-sc2 = 0
      *                     move cli-sconto1 to como-col-sc1 col-sc1
      ******                     move cli-sconto2 to como-col-sc2 col-sc2
      *                     modify gd1(riga, 78-col-sc1), cell-data col-sc1
      ******                     modify gd1(riga, 78-col-sc2), cell-data col-sc2
      *                  end-if
      *                  perform VALORE-RIGA
      *                  perform CALCOLA-NETTO
      *                  if col-prz not = old-col-prz
      *                     move riga        to RigaCambiata
      *                     move 78-col-prz  to ColonnaCambiata
      *                  end-if
      *               end-if
      *               move 78-ID-gd1 to control-id
      *               move 4         to accept-control
      *               modify gd1, cursor-y riga, cursor-x 78-col-prz
      *
      *          end-evaluate
      *     end-evaluate  
           .
      * <TOTEM:END>

       COLORE-RIGA.
      * <TOTEM:PARA. COLORE-RIGA>
           modify gd1, start-x = 1,
                             x = 8,
                       start-y = riga,
                             y = riga,
                  region-color = 257,
                  cursor-color = colore-nu 
           .
      * <TOTEM:END>

       CLEAR-SCREEN.
      * <TOTEM:PARA. CLEAR-SCREEN>
      *     move tsc-chiave to old-tsc-chiave.
      *
      *     initialize tsc-dati of tschede 
      *               replacing numeric data by zeroes
      *                    alphanumeric data by spaces.
      *                   
      *     perform FORM1-FLD-TO-BUF. 
      *
      *     perform INIT-OLD-REC.
      *
      *     perform CLEAR-CLIENTE.
      *                                   
      *     display form1. 
      *
      *     perform RESETTA-GRID.
      *
      *     unlock tschede all records    
           .
      * <TOTEM:END>

       CHECK-INSERIMENTO.
      * <TOTEM:PARA. CHECK-INSERIMENTO>
      * MODIFICA LA STATUS-BAR
      * CONTROLLO SE DA INSERIMENTO SCORRO. ALLORA DEVO SEGNALARE CHE
      * SONO TORNATO IN MODIFICA.
           inquire tool-modifica, value in mod.

           evaluate mod
           when 1  
                set StatusModifica to true
           when 0
                set StatusVisua    to true   
           end-evaluate.
      
           perform STATUS-BAR-MSG 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
      *     set tutto-ok to true. 
      *
      *     evaluate CONTROL-ID
      *     when 78-ID-ef-cliente
      *          perform RIEMPI-CHIAVE           
      *          if ef-cliente-buf not = spaces
      *             read tschede no lock key tsc-k-cliente
      *                  invalid
      *                  if vecchio
      *                     display message MSG-record-inesistente
      *                               title tit-err
      *                                icon 2
      *                     perform CLEAR-SCREEN
      *                     set errori to true
      *                  else
      *                     perform DISPLAY-CLIENTE
      *                     display form1
      *                  end-if
      *              not invalid      
      *                  if old-tsc-chiave not = tsc-chiave or mod = 0
      *                     perform CURRENT-RECORD 
      *                  end-if
      *             end-read
      *
      *          else
      *             set errori to true  
      *             move 78-ID-ef-cliente to control-id
      *             display message box MSG-record-inesistente
      *                     title = tit-err
      *                     icon mb-warning-icon
      *          end-if
      *          if errori
      *             move 78-ID-ef-cliente to control-id
      *             move 4               to accept-control
      *          end-if
      *
      *     end-evaluate.
      *
      *     if errori
      *        perform CANCELLA-COLORE
      *        move CONTROL-ID to store-id
      *        move 4          to ACCEPT-CONTROL
      *     end-if 
           .
      * <TOTEM:END>

       CONTROLLO-RIGA.
      * <TOTEM:PARA. CONTROLLO-RIGA>
      *     set tutto-ok to true.
      *     if mod = 0 
      *        exit paragraph 
      *     end-if.
      *
      *     evaluate colonna
      *     when 78-col-data
      *          move como-col-data to como-data
      *          perform DATE-FORMAT
      *          move como-data to col-data
      *          modify gd1(riga, 78-col-data), cell-data col-data
      *     when 78-col-art
      *          move col-art to art-codice
      *          if art-codice not = spaces
      *             read articoli no lock
      *                  invalid
      *                  move spaces to art-descrizione
      *                  set errori to true
      *                  display message "Articolo NON valido"
      *                            title tit-err
      *                          icon 2
      *             end-read
      *             modify gd1(riga, 78-col-des), cell-data art-descrizione
      *          end-if
      *     when 78-col-des
      *          if col-art = spaces and col-des = spaces
      *             set errori to true
      *             display message "Articolo o Descrizione obbligatorio"
      *                       title tit-err
      *                        icon 2
      *          end-if
      *
      *     when 78-col-prz
      *          if como-col-prz = 0 and col-art not = spaces
      *             set errori to true
      *             display message "Prezzo obbligatorio"
      *                       title tit-err
      *                        icon 2
      *          end-if
      *          if tutto-ok
      *             perform CALCOLA-NETTO
      *          end-if
      *
      *     when 78-col-sc1
      ******     when 78-col-sc2
      *          perform CALCOLA-NETTO
      *     end-evaluate.
      *
      *
      ****** 78  78-col-qta        value 4. 
      ****** 78  78-col-prz        value 5. 
      ****** 78  78-col-sc         value 6. 
      ****** 78  78-col-note       value 8. 
      ****** 78  78-col-numdoc     value 9. 
      ****** 78  78-col-datadoc    value 10  
           .
      * <TOTEM:END>

       CREA-OCCURS-GRUPPI.
      * <TOTEM:PARA. CREA-OCCURS-GRUPPI>
           initialize tab-mgroups replacing numeric data by zeroes
                                       alphanumeric data by spaces.

           move 0 to idx-gruppi.
                        
           inquire cb-gio, value in cb-gio-buf.
           inquire cb-dur, value in dur-desc.
           read duration key dur-k-desc.
                                             
           inquire cb-mg1, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg2, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg3, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg4, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg5, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.
           inquire cb-mg6, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.
           inquire cb-mg7, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.       
                                     
           modify lab-a, color = 513.
           modify lab-b, color = 513.
           modify lab-c, color = 513.
           modify lab-d, color = 513.
           modify lab-e, color = 513.
           modify lab-f, color = 513.
           modify lab-g, color = 513.


      ***---
       ADD-ELEM-GRUPPO.
           read macrogroups key  mcg-k-desc 
                invalid continue
            not invalid 
                add 1 to idx-gruppi                   
                move mcg-desc to el-mgroup(idx-gruppi)
                move mcg-code to el-mcg-code(idx-gruppi)
                move 0        to el-mcg-hit(idx-gruppi)
           end-read.
           move idx-gruppi to tot-gruppi 
           .
      * <TOTEM:END>

       CURRENT-RECORD.
      * <TOTEM:PARA. CURRENT-RECORD>
      *     perform RIEMPI-CHIAVE.
      *     set tutto-ok  to true.
      *     set ReadSecca to true.
      *     if nuovo move 0 to mod end-if.
      *
      *     if mod = 1
      *        read tschede lock key tsc-k-cliente
      *           invalid
      *              set errori to true 
      *        end-read
      *     else
      *        read tschede no lock key tsc-k-cliente
      *           invalid 
      *              set errori to true 
      *        end-read
      *     end-if.                    
      *     set ReadSecca to false.
      *
      *     if RecLocked
      *        set RecLocked to false
      *     else
      *        if tutto-ok
      *           perform CANCELLA-COLORE
      *           if nuovo
      *              move 0      to mod
      *              move 1      to mod-k
      *              move 78-ID-ef-cliente to control-id
      *              move 4                to accept-control
      *           else
      *              move 78-ID-gd1 to control-id
      *              move 4         to accept-control
      *           end-if   
      *           perform FORM1-IUD-DISPLAY
      *           set vecchio to true
      *           if mod = 1
      *              set StatusModifica to true
      *           else                         
      *              set StatusVisua    to true
      *           end-if
      *           perform STATUS-BAR-MSG 
      *           perform VALORIZZA-OLD
      *           perform RIEMPI-GRID
      *        else
      *           move 0 to mod
      *           move 1 to mod-k
      *           if vecchio
      *              perform CLEAR-SCREEN
      *              if YesMessage
      *                 move 78-ID-ef-cliente to CONTROL-ID
      *                 move 4                to accept-control
      *                 display message MSG-Record-inesistente
      *                           title tit-err
      *                            icon 2
      *              end-if
      *           end-if
      *        end-if
      *     end-if 
           .
      * <TOTEM:END>

       INIT.
      * <TOTEM:PARA. INIT>
           move 0 to StatusHelp.
           move 1 to mod-k.
           set StatusVisua    to true  
           .
      * <TOTEM:END>

       INIT-OLD-REC.
      * <TOTEM:PARA. INIT-OLD-REC>
      *     initialize old-tsc-rec replacing numeric data by zeroes
      *                                 alphanumeric data by spaces.
      *
      *     initialize old-rsc-rec replacing numeric data by zeroes
      *                                 alphanumeric data by spaces.
      *
      *     move tsc-cliente to old-tsc-cliente 
           .
      * <TOTEM:END>

       NUOVO.
      * <TOTEM:PARA. NUOVO>
      *     perform SALV-MOD.
      *
      *     if tutto-ok  
      *        move 78-ID-ef-cliente to control-id
      *        move 4                to accept-control
      *        set nuovo to true
      *        perform CERCA
      *        if SceltoCliente
      *           move 1                to mod mod-k
      *           modify tool-modifica,  value = mod
      *           perform CANCELLA-COLORE
      *           perform VALORIZZA-NUOVO
      *           perform INIT-OLD-REC
      *           set StatusIns to true
      *           perform STATUS-BAR-MSG  
      *           set nuovo to true
      *        else
      *           set vecchio to true
      *        end-if
      *     end-if 
           .
      * <TOTEM:END>

       PUNTA-CELLA.
      * <TOTEM:PARA. PUNTA-CELLA>
           move 78-ID-gd1    to control-id store-id.
           move 4            to accept-control.
           modify gd1,       cursor-y riga, 
                             cursor-x colonna.
           perform COLORE-RIGA 
           .
      * <TOTEM:END>

       RIEMPI-CHIAVE.
      * <TOTEM:PARA. RIEMPI-CHIAVE>
      *     inquire ef-cliente, value in ef-cliente-buf.
      *     move ef-cliente-buf to tsc-cliente 
           .
      * <TOTEM:END>

       RIEMPI-GRID.
      * <TOTEM:PARA. RIEMPI-GRID>
      *     move 0 to store-riga.
      *     modify gd1, mass-update = 1.
      *     perform RESETTA-GRID.
      *     move low-value  to rsc-rec.
      *     move tsc-codice to rsc-codice.
      *
      *     set tutto-ok   to true.
      *     start rschede key >= rsc-chiave
      *           invalid  set errori  to true
      *     end-start.
      *
      *     if tutto-ok
      *        move 2 to riga
      *        perform until 1 = 2
      *           read rschede next no lock 
      *              at end 
      *                 exit perform 
      *           end-read
      *           if rsc-codice not = tsc-codice
      *              exit perform
      *           end-if
      *           move rsc-data  to como-data
      *           perform DATE-TO-SCREEN
      *           move como-data to col-data
      *           move rsc-articolo to art-codice col-art
      *           if col-art = spaces 
      *              move rsc-descrizione to art-descrizione
      *           else
      *              read articoli no lock 
      *                invalid move "** NON TROVATO **" to art-descrizione
      *              end-read
      *           end-if
      *           move art-descrizione to col-des
      *           move rsc-qta         to col-qta
      *           move rsc-prz         to col-prz
      *           move rsc-sconto1     to col-sc1
      ******           move rsc-sconto2     to col-sc2
      *           move rsc-netto       to col-netto
      *           move rsc-note        to col-note
      *           move 0               to col-numdoc
      *           move 0               to col-datadoc
      *           move spaces          to hid-documento
      *           if rsc-numfat not = 0
      *              move rsc-numfat  to col-numdoc
      *              move rsc-datafat to como-data
      *              perform DATE-TO-SCREEN
      *              move como-data   to col-datadoc
      *              modify gd1(riga, 78-col-numdoc),  cell-color 481
      *              modify gd1(riga, 78-col-datadoc), cell-color 481
      *              set hid-fattura to true
      *           end-if
      *           if rsc-numcor not = 0
      *              move rsc-numcor  to col-numdoc
      *              move rsc-datacor to como-data
      *              perform DATE-TO-SCREEN
      *              move como-data   to col-datadoc
      *              modify gd1(riga, 78-col-numdoc),  cell-color 193
      *              modify gd1(riga, 78-col-datadoc), cell-color 193
      *              set hid-corrisp to true
      *           end-if
      *           if rsc-numcor      = 0 and 
      *              rsc-numfat      = 0 and 
      *              num-doc     not = 0 and
      *              store-riga      = 0
      *              move riga to store-riga
      *           end-if
      *           modify gd1(riga, 78-col-data),    cell-data col-data
      *           modify gd1(riga, 78-col-art),     cell-data col-art
      *           modify gd1(riga, 78-col-des),     cell-data col-des
      *           modify gd1(riga, 78-col-qta),     cell-data col-qta
      *           modify gd1(riga, 78-col-prz),     cell-data col-prz
      *           modify gd1(riga, 78-col-sc1),     cell-data col-sc1
      ******           modify gd1(riga, 78-col-sc2),     cell-data col-sc2
      *           modify gd1(riga, 78-col-netto),   cell-data col-netto
      *           modify gd1(riga, 78-col-note),    cell-data col-note
      *           modify gd1(riga, 78-col-numdoc),  cell-data col-numdoc
      *           modify gd1(riga, 78-col-datadoc), cell-data col-datadoc
      *           modify gd1(riga, 1), hidden-data gruppo-hidden
      *           add 1 to riga
      *        end-perform
      *        subtract 2 from riga giving RigheIniziali
      *     end-if.
      *     modify gd1, mass-update = 0.
      *     if store-riga = 0
      *        move 2 to store-riga
      *     end-if.
      *     move store-riga to riga.
      *     move 1          to colonna.
      *     perform PUNTA-CELLA.
      *     perform VALORE-RIGA.
      *     move rsc-rec      to old-rsc-rec.
      *     move rsc-data     to como-old-rsc-data.
      *     move rsc-articolo to como-old-rsc-articolo 
           .
      * <TOTEM:END>

       SALVA.
      * <TOTEM:PARA. SALVA>
      *     if mod = 0 
      *        exit paragraph 
      *     end-if.
      *
      *     set tutto-ok to true.
      *
      *     set controllo-finale to true.
      *     perform varying control-id from 78-ID-ef-cliente by 1
      *               until control-id > 78-ID-ef-cliente
      *        perform CONTROLLO
      *        if errori 
      *           exit perform
      *        end-if
      *     end-perform.
      *
      *     if tutto-ok
      *        perform X-Y
      *        if tot-righe = 1
      *           set errori to true
      *           display message "Nessun articolo inserito"
      *                     title tit-err
      *                      icon 2
      *           move 78-ID-gd1 to control-id
      *           move 1 to colonna
      *        else
      *           perform VALORE-RIGA
      *           if not RigaVuota
      *              perform varying colonna from 78-col-data by 1
      *                        until colonna > 78-max-colonne|78-col-tipo-imp
      *                 perform CONTROLLO-RIGA
      *                 if errori exit perform end-if
      *              end-perform
      *           end-if
      *        end-if
      *     end-if.
      *            
      *     set controllo-finale to false.
      *
      *     if errori
      *        perform ABILITAZIONI
      *        if store-id = 78-ID-gd1
      *           perform CANCELLA-COLORE
      *           perform PUNTA-CELLA
      *        else
      *           move store-id to control-id
      *           move 4        to accept-control
      *        end-if
      *     else
      *
      *        if nuovo
      *           move high-value to      tsc-codice
      *           start tschede key <=    tsc-codice
      *                 invalid move 1 to tsc-codice
      *             not invalid
      *                 read tschede previous with no lock
      *                      at end move 1 to tsc-codice
      *                  not at end add  1 to tsc-codice
      *                 end-read
      *           end-start
      *           accept tsc-data-creazione from century-date
      *        end-if
      *
      *        perform DELETE-RIGHE
      *        perform FORM1-BUF-TO-FLD
      *        perform varying riga from 2 by 1 
      *                  until riga > tot-righe
      *           perform VALORE-RIGA
      *           perform SCRIVI-RIGA
      *        end-perform
      *
      *        perform CANCELLA-COLORE
      *        write tsc-rec invalid rewrite tsc-rec end-write 
      *
      *        if nuovo
      *           set vecchio to true
      *           perform STAMPA
      *        end-if
      *
      *        set vecchio      to true
      *        set stampa       to true
      *
      *        perform TORNA-IN-VISUA
      *        perform VALORIZZA-OLD
      *
      *     end-if.
      *
      *     display form1 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
      *     set tutto-ok to true.
      *     perform X-Y.
      *
      *     if event-data-2 not = riga
      *
      *        perform VALORE-RIGA
      *
      *        if not RigaVuota
      *           perform varying colonna from 78-col-data by 1
      *                     until colonna > 78-max-colonne|78-col-tipo-imp
      *              perform CONTROLLO-RIGA
      *              if errori exit perform end-if
      *           end-perform
      *        end-if
      *
      ******        if tutto-ok and mod = 1
      ******           perform SCRIVI-RIGA
      ******        end-if
      *
      *        if tutto-ok
      *           evaluate true
      *           when event-data-2 < 2 
      *                move 2            to riga
      *                move event-data-1 to colonna
      *
      *           when event-data-2 > tot-righe
      *                add  1                to tot-righe giving riga
      *                set event-action      to event-action-fail
      *                move 1                to colonna
      *                perform PUNTA-CELLA
      *           when other
      *                move event-data-2 to riga
      *                move event-data-1 to colonna
      *           end-evaluate
      *           perform VALORE-RIGA
      *           if art-codice = 0
      *              initialize rsc-rec 
      *                         replacing numeric data by zeroes
      *                              alphanumeric data by spaces
      *           end-if
      *           move rsc-rec       to old-rsc-rec
      *           move rsc-data      to como-old-rsc-data
      *           move rsc-articolo  to como-old-rsc-articolo
      *        else                  
      *           set event-action   to event-action-fail
      *           perform PUNTA-CELLA
      *        end-if
      *     else
      *        if event-data-1 not = colonna
      *           inquire gd1(riga, 1), cell-data in art-codice
      *           if art-codice = 0
      *              set event-action to event-action-fail
      *              move 1 to colonna event-data-1
      *              perform PUNTA-CELLA
      *           end-if
      *        end-if
      *        move event-data-1 to colonna
      *     end-if.
      *
      *     perform COLORE-RIGA.
      *     move 0 to StatusHelp.
      *     if mod = 1 and como-col-data not = 0
      *        if colonna = 78-col-art
      *           move 1 to StatusHelp
      *        end-if
      *        if colonna = 78-col-prz and col-art not = spaces
      *           move 1 to StatusHelp
      *        end-if
      *     end-if.
      *     perform STATUS-HELP 
           .
      * <TOTEM:END>

       STAMPA.
      * <TOTEM:PARA. STAMPA>
           set s-stampa to true.
           perform STAMPA-ANTEPRIMA 
           .
      * <TOTEM:END>

       STAMPA-ANTEPRIMA.
      * <TOTEM:PARA. STAMPA-ANTEPRIMA>
      *     if nuovo
      *        display message "Salvare prima la scheda"
      *                  title tit-err
      *                   icon 2
      *     else
      *        if s-anteprima
      *           accept link-stampante from environment "STAMPANTE_ANTEPRIMA"
      *        else
      *           move spaces to link-stampante
      *        end-if
      *        call   "st-schedacli" using tsc-codice, link-stampante
      *        cancel "st-schedacli"
      *     end-if 
           .
      * <TOTEM:END>

       VALORE-RIGA.
      * <TOTEM:PARA. VALORE-RIGA>
      *     inquire gd1(riga, 78-col-data),    cell-data col-data.
      *     inquire gd1(riga, 78-col-art),     cell-data col-art. 
      *     inquire gd1(riga, 78-col-des),     cell-data col-des.
      *     inquire gd1(riga, 78-col-qta),     cell-data col-qta.
      *     inquire gd1(riga, 78-col-prz),     cell-data col-prz.
      *     inquire gd1(riga, 78-col-sc1),     cell-data col-sc1.
      ******     inquire gd1(riga, 78-col-sc2),     cell-data col-sc2.
      *     inquire gd1(riga, 78-col-netto),   cell-data col-netto.
      *     inquire gd1(riga, 78-col-note),    cell-data col-note.
      *     inquire gd1(riga, 78-col-numdoc),  cell-data col-numdoc.
      *     inquire gd1(riga, 78-col-datadoc), cell-data col-datadoc.
      *     inquire gd1(riga, 1), hidden-data gruppo-hidden.
      *
      *     move col-data    to como-col-data.
      *     move col-qta     to como-col-qta.
      *     move col-prz     to como-col-prz.
      *     move col-sc1     to como-col-sc1.
      ******     move col-sc2     to como-col-sc2.
      *     move col-netto   to como-col-netto.
      *     move col-numdoc  to como-col-numdoc.
      *     move col-datadoc to como-col-datadoc.
      *
      *     if como-col-data    = 0 and
      *        col-art          = spaces and
      *        col-des          = spaces and
      *        como-col-qta     = 0 and
      *        como-col-prz     = 0 and
      *        como-col-sc1     = 0 and
      ******        como-col-sc2     = 0 and
      *        como-col-netto   = 0 and
      *        col-note         = spaces and
      *        como-col-numdoc  = 0 and
      *        como-col-datadoc = 0
      *        set RigaVuota to true
      *     else
      *        set RigaVuota to false
      *     end-if 
           .
      * <TOTEM:END>

       VALORIZZA-OLD.
      * <TOTEM:PARA. VALORIZZA-OLD>
      *     move tsc-rec to old-tsc-rec.
      *
      *     set vecchio to true.
      *
      *     move 0 to StatusHelp
      *     perform STATUS-HELP.
      *
      *     inquire gd1, last-row in tot-righe.
      *     move 0 to RigaCambiata ColonnaCambiata 
           .
      * <TOTEM:END>

       VALORIZZA-NUOVO.
      * <TOTEM:PARA. VALORIZZA-NUOVO>
      *     move "00"       to status-tschede.
      *     move cli-codice to tsc-cliente.
      *     perform FORM1-IUD-DISPLAY.
      *     display form1.
      *
      *     perform RESETTA-GRID.
      *
      *     move 0 to RigheIniziali.
      *     move 0 to RigaCambiata ColonnaCambiata 
           .
      * <TOTEM:END>

       VALORIZZA-WOD.
      * <TOTEM:PARA. VALORIZZA-WOD>
           inquire cb-int, value in cb-int-buf.

           inquire cb-dur, value in dur-desc.
           read duration key dur-k-desc 
                invalid move 0 to dur-code
           end-read.

           inquire cb-gio, value in cb-gio-buf.

           if cb-int-buf = s-int-buf and
              dur-desc = s-dur-desc and
              cb-gio-buf = s-gio-buf
              exit paragraph
           end-if.              

           move cb-int-buf to s-int-buf.
           move dur-desc   to s-dur-desc.
           move cb-gio-buf to s-gio-buf.

           if cb-gio-buf = "Tutto"
              move 0 to como-giorni
           else
              move cb-gio-buf to como-giorni convert
           end-if.
                                        
           move 0 to effort-wod.

           evaluate cb-int-buf     
           when "Light wod effort"  move 1 to effort-wod
           when "Medium wod effort" move 2 to effort-wod
           when "Heavy wod effort"  move 3 to effort-wod
           end-evaluate.  
                                 
           modify cb-wod, reset-list = 1.
           modify cb-wod, item-to-add = "Nessuno".

           move low-value to wom-desc.
           start wodmap key >= wom-k-desc
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read wodmap next at end exit perform end-read
                    if effort-wod > 0
                       if wom-effort not = effort-wod
                          exit perform cycle
                       end-if
                    end-if
                    if dur-code > 0
                       if wom-dur-code not = dur-code
                          exit perform cycle
                       end-if
                    end-if
                    if como-giorni > 0
                       if wom-days not = cb-gio-buf
                          exit perform cycle
                       end-if
                    end-if
                    modify cb-wod, item-to-add = wom-desc
                 end-perform
           end-start.
                                               
           modify cb-wod, value = "Nessuno".
           modify cb-wod, enabled true.

           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>

       X-Y.
      * <TOTEM:PARA. X-Y>
           inquire gd1, cursor-y in riga,
                        cursor-x in colonna,
                        last-row in tot-righe 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       NUOVO-LinkTo.
      * <TOTEM:PARA. NUOVO-LinkTo>
           INQUIRE TOOL-NUOVO, ENABLED IN E-NUOVO.

           IF E-NUOVO = 1
              PERFORM NUOVO
           END-IF                    
           .
      * <TOTEM:END>
       TOOL-SALVA-LinkTo.
      * <TOTEM:PARA. TOOL-SALVA-LinkTo>
           INQUIRE TOOL-MODIFICA, VALUE IN MOD           

           INQUIRE TOOL-SALVA, ENABLED IN E-SALVA
           IF E-SALVA = 1
              PERFORM SALVA
           END-IF           
           .
      * <TOTEM:END>
       ANTEPRIMA-LinkTo.
      * <TOTEM:PARA. ANTEPRIMA-LinkTo>
           INQUIRE TOOL-ANTEPRIMA, ENABLED IN E-ANTEPRIMA.
           IF E-ANTEPRIMA = 1
              PERFORM ANTEPRIMA
           END-IF 
           .
      * <TOTEM:END>
       STAMPA-LinkTo.
      * <TOTEM:PARA. STAMPA-LinkTo>
           INQUIRE TOOL-STAMPA, ENABLED IN E-STAMPA
           IF E-STAMPA = 1
              PERFORM STAMPA
           END-IF 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       ginqui-Ev-Before-Program.
      * <TOTEM:PARA. ginqui-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           set environment "KEYSTROKE" to "DATA=44 44".
           set environment "KEYSTROKE" to "DATA=46 46".
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Entry>
      *     if mod = 0                       
      *        set  event-action to event-action-fail-terminate
      *        inquire gd1(riga, 78-col-numdoc),  cell-data OLD-col-numdoc
      *        inquire gd1(riga, 78-col-datadoc), cell-data OLD-col-datadoc
      *
      *        move OLD-col-numdoc to como-col-numdoc
      *        if como-col-numdoc not = 0
      *           if colonna >= 78-col-numdoc
      *              inquire gd1, entry-reason in como-x
      *              evaluate como-x
      *              when X"00"|doppio click
      *              when X"0D"|invio
      ******                   move OLD-col-numdoc  to tfa-numero
      ******                   move OLD-col-datadoc to como-data
      ******                   perform DATE-TO-FILE
      ******                   move como-data(1:4)  to tfa-numero
      *                   set VediFattura to true
      *              end-evaluate
      *           end-if
      *        end-if
      *     else
      *        perform X-Y
      *        inquire gd1(riga, 78-col-data), cell-data OLD-col-data
      *        move OLD-col-data to como-data
      *        inquire gd1(riga, 78-col-art),  cell-data OLD-col-art
      *
      *        if como-col-data = 0 and colonna not = 78-col-data
      *           set event-action to event-action-fail
      *        end-if
      *
      *        inquire gd1(riga, 78-col-des),     cell-data OLD-col-des
      *        inquire gd1(riga, 78-col-qta),     cell-data OLD-col-qta
      *        inquire gd1(riga, 78-col-sc1),     cell-data OLD-col-sc1
      ******        inquire gd1(riga, 78-col-sc2),     cell-data OLD-col-sc2
      *        inquire gd1(riga, 78-col-netto),   cell-data OLD-col-netto
      *        inquire gd1(riga, 78-col-note),    cell-data OLD-col-note
      *        inquire gd1(riga, 78-col-numdoc),  cell-data OLD-col-numdoc
      *        inquire gd1(riga, 78-col-datadoc), cell-data OLD-col-datadoc
      *
      *        move OLD-col-numdoc to como-col-numdoc
      *        if como-col-numdoc not = 0
      *           if colonna >= 78-col-numdoc
      *              set  event-action to event-action-fail-terminate
      *              inquire gd1, entry-reason in como-x
      *              evaluate como-x
      *              when X"00"|doppio click
      *              when X"0D"|invio
      ******                   move OLD-col-numdoc  to tfa-numero
      ******                   move OLD-col-datadoc to como-data
      ******                   perform DATE-TO-FILE
      ******                   move como-data(1:4)  to tfa-numero
      *                   set VediFattura to true
      *              end-evaluate
      *           else
      *              set event-action to event-action-fail
      *           end-if
      *        else
      *           evaluate colonna
      *           when 78-col-data
      *           when 78-col-art
      *                continue
      *           when 78-col-des
      *                if col-art = spaces
      *                   continue
      *                else
      *                   set event-action to event-action-fail 
      *                end-if
      *           when 78-col-netto
      *           when 78-col-numdoc
      *           when 78-col-datadoc
      *                set event-action to event-action-fail 
      *           when 78-col-qta 
      *           when 78-col-note
      *                continue
      *           when other
      *                set environment "KEYSTROKE" to "DATA=44 46"    
      *           end-evaluate
      *        end-if
      *
      *     end-if 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Finish-Entry>
      *     set tutto-ok to true.
      *     perform X-Y.
      *     perform VALORE-RIGA.
      *
      *     evaluate colonna
      *     when 78-col-data
      *          if como-col-data = 0
      *             if not RigaVuota
      *                display message "Cancellare la riga?"
      *                          title titolo
      *                           type mb-yes-no
      *                        default mb-no
      *                         giving scelta
      *                if scelta = mb-no
      *                   set errori to true
      *                else
      *                   initialize rec-grid 
      *                              replacing numeric data by zeroes
      *                                   alphanumeric data by spaces
      *
      *                   move riga to store-riga
      *                   add 1 to riga
      *                   perform VALORE-RIGA
      *                   move rsc-rec to old-rsc-rec
      *                   move store-riga to riga
      *           
      *                   modify gd1, record-to-delete = riga
      *                   modify gd1, insert-rows = 1
      *                end-if
      *             end-if
      *          else
      *             perform CONTROLLO-RIGA
      *          end-if
      *          if tutto-ok
      *             if rsc-data not = old-rsc-data
      *                move riga to RigaCambiata
      *                move 1    to ColonnaCambiata
      *             end-if
      *          end-if
      *
      *     when 78-col-art
      *          perform CONTROLLO-RIGA
      *          if tutto-ok
      *             if col-art not = old-col-art
      *                move riga        to RigaCambiata
      *                move 78-col-art  to ColonnaCambiata
      *             end-if
      *          end-if
      *
      *     when 78-col-des
      *          if col-des not = old-col-des
      *             move riga        to RigaCambiata
      *             move 78-col-des  to ColonnaCambiata
      *          end-if
      *
      *     when 78-col-qta
      *          if col-qta not = old-col-qta
      *             move riga        to RigaCambiata
      *             move 78-col-qta  to ColonnaCambiata
      *          end-if
      *
      *     when 78-col-prz 
      *          if como-col-prz not = 0
      *             if como-col-sc1 = 0 |and como-col-sc2 = 0
      *                move cli-sconto1 to como-col-sc1 col-sc1
      ******                move cli-sconto2 to como-col-sc2 col-sc2
      *                modify gd1(riga, 78-col-sc1), cell-data col-sc1
      ******                modify gd1(riga, 78-col-sc2), cell-data col-sc2
      *             end-if
      *          end-if
      *          perform CONTROLLO-RIGA
      *          if tutto-ok
      *             if col-prz not = old-col-prz
      *                move riga        to RigaCambiata
      *                move 78-col-prz  to ColonnaCambiata
      *             end-if
      *          end-if
      *
      *     when 78-col-sc1
      *          perform CONTROLLO-RIGA
      *          if col-sc1 not = old-col-sc1
      *             move riga        to RigaCambiata
      *             move 78-col-sc1  to ColonnaCambiata
      *          end-if
      *
      ******     when 78-col-sc2
      ******          perform CONTROLLO-RIGA
      ******          if col-sc1 not = old-col-sc1
      ******             move riga        to RigaCambiata
      ******             move 78-col-sc2  to ColonnaCambiata
      ******          end-if
      *
      *     when 78-col-note
      *          if col-note not = old-col-note
      *             move riga        to RigaCambiata
      *             move 78-col-note to ColonnaCambiata
      *          end-if 
      *     end-evaluate.
      *
      *     if errori
      *        move 78-ID-gd1 to store-id
      *        set event-action to event-action-fail
      *     else                                              
      *        modify gd1(riga, 78-col-qta),   cell-data col-qta
      *        modify gd1(riga, 78-col-prz),   cell-data col-prz
      *        modify gd1(riga, 78-col-sc1),   cell-data col-sc1
      ******        modify gd1(riga, 78-col-sc2),   cell-data col-sc2
      *        modify gd1(riga, 78-col-netto), cell-data col-netto
      *        set environment "KEYSTROKE" to "DATA=44 44"
      *        set environment "KEYSTROKE" to "DATA=46 46"
      *     end-if 
           .
      * <TOTEM:END>
       cb-mg1-BeforeProcedure.
      * <TOTEM:PARA. cb-mg1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-mg2-BeforeProcedure.
      * <TOTEM:PARA. cb-mg2-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-mg3-BeforeProcedure.
      * <TOTEM:PARA. cb-mg3-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-mg4-BeforeProcedure.
      * <TOTEM:PARA. cb-mg4-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-mg5-BeforeProcedure.
      * <TOTEM:PARA. cb-mg5-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-mg1-AfterProcedure.
      * <TOTEM:PARA. cb-mg1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       cb-mg2-AfterProcedure.
      * <TOTEM:PARA. cb-mg2-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       cb-mg3-AfterProcedure.
      * <TOTEM:PARA. cb-mg3-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       cb-mg4-AfterProcedure.
      * <TOTEM:PARA. cb-mg4-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       cb-mg5-AfterProcedure.
      * <TOTEM:PARA. cb-mg5-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       cb-int-BeforeProcedure.
      * <TOTEM:PARA. cb-int-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-dur-BeforeProcedure.
      * <TOTEM:PARA. cb-dur-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-rnd-BeforeProcedure.
      * <TOTEM:PARA. cb-rnd-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-int-AfterProcedure.
      * <TOTEM:PARA. cb-int-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform VALORIZZA-WOD 
           .
      * <TOTEM:END>
       cb-dur-AfterProcedure.
      * <TOTEM:PARA. cb-dur-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform VALORIZZA-WOD 
           .
      * <TOTEM:END>
       cb-rnd-AfterProcedure.
      * <TOTEM:PARA. cb-rnd-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       pb-genera-LinkTo.
      * <TOTEM:PARA. pb-genera-LinkTo>
           perform CREA-OCCURS-GRUPPI.

           modify gd1, mass-update = 1.
           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.

           move 0 to int-effort.
           inquire cb-int, value in cb-int-buf.
           evaluate cb-int-buf
           when "Light wod effort" move 1  to effort-wod
           when "Light wod effort" move 2  to effort-wod
           when "Light wod effort" move 3  to effort-wod
           when other              move 99 to effort-wod
           end-evaluate.
           
           inquire cb-dur, value in dur-desc.
           read duration key dur-k-desc.
           
           inquire cb-wod, value in wom-desc.
           read wodmap key wom-k-desc.
                 
           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  path-tmp-exe-effort from environment "PATH_ST".
           inspect path-tmp-exe-effort replacing trailing spaces by 
           low-value.
           string  path-tmp-exe-effort delimited low-value
                   "tmp-exe-effort_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
              into path-tmp-exe-effort
           end-string.                                                  
                 
           inspect path-tmp-exe-effort replacing trailing low-value by 
           spaces.
           open output tmp-exe-effort.    
           close       tmp-exe-effort.
           open i-o    tmp-exe-effort.
                 
           accept  path-tmp-wod-exe from environment "PATH_ST".
           inspect path-tmp-wod-exe replacing trailing spaces by 
           low-value.
           string  path-tmp-wod-exe delimited low-value
                   "tmp-wod-exe_"   delimited size
                   como-data        delimited size
                   "_"              delimited size
                   como-ora         delimited size
              into path-tmp-wod-exe
           end-string.                                                  
                 
           inspect path-tmp-wod-exe replacing trailing low-value by 
           spaces.
           open output tmp-wod-exe.
           close       tmp-wod-exe.
           open i-o    tmp-wod-exe.
                 
           accept  path-tmp-exe from environment "PATH_ST".
           inspect path-tmp-exe replacing trailing spaces by low-value.
           string  path-tmp-exe delimited low-value
                   "tmp-exe_"   delimited size
                   como-data    delimited size
                   "_"          delimited size
                   como-ora     delimited size
              into path-tmp-exe
           end-string.                                                  
                 
           inspect path-tmp-exe replacing trailing low-value by spaces.
           open output tmp-exe.
           close       tmp-exe.
           open i-o    tmp-exe. 

           accept  path-tmp-exe-dupl from environment "PATH_ST".
           inspect path-tmp-exe-dupl replacing trailing spaces by 
           low-value.
           string  path-tmp-exe-dupl delimited low-value
                   "path-tmp-exe-dupl_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
              into path-tmp-exe-dupl
           end-string.                                                  
                 
           inspect path-tmp-exe-dupl replacing trailing low-value by 
           spaces.
           open output tmp-exe-dupl.    
           close       tmp-exe-dupl.
           open i-o    tmp-exe-dupl.
              
           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.
                                     
           initialize tex-rec replacing numeric data by zeroes 
                                   alphanumeric data by spaces.         
                                 
           perform LOAD-EXERCISES-ALLOWED-BY-EFFORT. 
           perform LOAD-EXERCISES-MULTIJOINT.
           perform LOAD-EXERCISES.              
           perform REMOVE-DUPLICATES.           
           perform LOAD-GRID.                   
                                      
           close       tmp-exe-effort.
           delete file tmp-exe-effort.

           close       tmp-wod-exe.
           delete file tmp-wod-exe.
                            
           close       tmp-exe.
           delete file tmp-exe.    

           close       tmp-exe-dupl.
           delete file tmp-exe-dupl.
      
      ***---
       LOAD-GRID.
           move low-value to tex-rec.
           move 0 to save-day col-exe-prg.
           start tmp-exe key >= tex-key
                 invalid continue 
             not invalid
                 move 1 to riga
                 perform until 1 = 2
                    read tmp-exe next 
                      at end 
                         perform DISPLAY-DURATA
                         exit perform 
                    end-read
                    if save-day = 0                    
                       move 0 to tot-durata
                       move tex-day to save-day
                    end-if
                    if tex-day not = save-day
                       perform DISPLAY-DURATA
                       move 0 to col-exe-prg tot-durata
                       move tex-day to save-day
                       add 1 to riga                           
                       modify gd1(riga, 1), cell-data = spaces
                       modify gd1(riga, 2), cell-data = spaces
                       modify gd1(riga, 3), cell-data = spaces
                       modify gd1(riga, 4), cell-data = spaces
                       modify gd1(riga, 5), cell-data = spaces
                       modify gd1(riga, 6), cell-data = spaces
                       modify gd1(riga, 7), cell-data = spaces
                       modify gd1(riga, 8), cell-data = spaces 
                    end-if          
                    add 1 to col-exe-prg
                    move tex-day to col-day
                    move tex-exe-code to exe-code
                    read exercises
                    move exe-grp-code to col-grp-code grp-code
                    read groups
                    move grp-desc to col-grp-desc
                    move tex-exe-code to col-exe-code
                    move tex-exe-desc to col-exe-desc

                    move wom-split-el-split-int-code(tex-day, tex-split)
                      to int-code
                    read intexe
                    if exe-isMulti-yes
                       evaluate wom-effort
                       when 1 move  5 to col-series
                              move  5 to col-reps
                       when 2 move  6 to col-series
                              move 10 to col-reps
                       when 3 move 10 to col-series
                              move  8 to col-reps
                       end-evaluate                               
                       inspect col-reps replacing leading x"30" by x"20"
                       call "C$JUSTIFY" using col-reps, "L"
                    else                  
                       move int-series to col-series
                                             
                       initialize col-reps
                       if int-restpause > 0  
                          move int-restpause to como-range-from
                          inspect como-range-from replacing leading x"30
      -    "" by x"20"
                          call "C$JUSTIFY" using como-range-from, "L"
                          inspect como-range-from replacing trailing 
           spaces by low-value
                          string "Rest/pause (" delimited size
                                 int-restpause  delimited low-value
                                 ")"            delimited size
                            into col-reps
                          end-string
                       else
                          if int-range-from = 99 and int-range-to = 99
                             move "Max" to col-reps
                          else
                             move int-range-from to como-range-from
                             inspect como-range-from replacing leading 
           x"30" by x"20"
                             call "C$JUSTIFY" using como-range-from, "L"
                             inspect como-range-from replacing trailing 
           spaces by low-value
                          
                             move int-range-to to como-range-to         
                      
                             inspect como-range-to replacing leading x"3
      -    "0" by x"20"  
                             call "C$JUSTIFY" using como-range-to, "L"  
                   
                             inspect como-range-to replacing trailing 
           spaces by low-value
                          
                             initialize col-reps
                             string como-range-from delimited low-value
                                    "-"             delimited size
                                    como-range-to   delimited low-value
                               into col-reps
                             end-string
                          end-if
                       end-if
                    end-if
                    add 1 to riga                                
                    modify gd1(riga, 1), cell-data = col-day
                    modify gd1(riga, 2), cell-data = col-exe-prg
                    modify gd1(riga, 3), cell-data = col-grp-code
                    modify gd1(riga, 4), cell-data = col-grp-desc
                    modify gd1(riga, 5), cell-data = col-exe-code
                    modify gd1(riga, 6), cell-data = col-exe-desc
                    modify gd1(riga, 7), cell-data = col-series
                    modify gd1(riga, 8), cell-data = col-reps
                    move int-restpause to int-restpause
                    modify gd1(riga, 1), hidden-data hiddenData

                    compute tot-durata  = tot-durata +
                            exe-setting +
                          ( col-series * int-time  ) +
                          ( int-rest   * ( col-series - 1 ) )

                    perform varying idx from 1 by 1 
                              until idx > tot-gruppi
                       if el-mcg-code(idx) = tex-mcg-code
                          add 1 to el-mcg-hit(idx)
                       end-if
                    end-perform

                 end-perform
           end-start.

           perform varying idx from 1 by 1 
                     until idx > tot-gruppi
              evaluate el-mcg-hit(idx)
              when 0     
                   evaluate idx
                   when 1 modify lab-a, color 513
                   when 2 modify lab-b, color 513
                   when 3 modify lab-c, color 513
                   when 4 modify lab-d, color 513
                   when 5 modify lab-e, color 513
                   when 6 modify lab-f, color 513
                   when 7 modify lab-g, color 513
                   end-evaluate
              when 1     
                   evaluate idx
                   when 1 modify lab-a, color 13
                   when 2 modify lab-b, color 13
                   when 3 modify lab-c, color 13
                   when 4 modify lab-d, color 13
                   when 5 modify lab-e, color 13
                   when 6 modify lab-f, color 13
                   when 7 modify lab-g, color 13
                   end-evaluate
              when other 
                   evaluate idx
                   when 1 modify lab-a, color 11
                   when 2 modify lab-b, color 11
                   when 3 modify lab-c, color 11
                   when 4 modify lab-d, color 11
                   when 5 modify lab-e, color 11
                   when 6 modify lab-f, color 11
                   when 7 modify lab-g, color 11
                   end-evaluate
              end-evaluate
           end-perform.

           modify gd1, mass-update = 0.

      ***---
       DISPLAY-DURATA.
           initialize como-durata.
           if tot-durata > 3600
              divide tot-durata by 3600 giving hh remainder resto
              if resto > 0
                 if resto > 60
                    compute mm = resto / 60
                 else
                    move resto to mm
                 end-if
              else
                 move 0 to mm 
              end-if
              move mm to como-mm
              inspect como-mm replacing leading x"30" by x"20"
              call "C$JUSTIFY" using como-mm, "L"                   
              inspect como-mm replacing trailing spaces by low-value

              move hh to como-hh
              inspect como-hh replacing leading x"30" by x"20"
              call "C$JUSTIFY" using como-hh, "L"
              inspect como-hh replacing trailing spaces by low-value
                    
              if hh = 1             
                 move "ora" to como-ora-e
              else
                 move "ore" to como-ora-e
              end-if

              if mm = 1             
                 move "minuto" to como-minuto-i
              else
                 move "minuti" to como-minuto-i
              end-if

              string  como-hh       delimited low-value
                      " "           delimited size
                      como-ora-e    delimited size
                      " "           delimited size
                      como-mm       delimited low-value
                      " "           delimited size
                      como-minuto-i delimited size
                 into como-durata
              end-string
           else
              compute mm = tot-durata / 60
              move mm to como-mm
              inspect como-mm replacing leading x"30" by x"20"
              call "C$JUSTIFY" using como-mm, "L"
              inspect como-mm replacing trailing spaces by low-value

              if mm = 1             
                 move "minuto" to como-minuto-i
              else
                 move "minuti" to como-minuto-i
              end-if

              string  como-mm       delimited low-value
                      " "           delimited size
                      como-minuto-i delimited size
                 into como-durata
              end-string
           end-if.

           evaluate save-day
           when 1 modify gd-schema( 2, 12), cell-data como-durata
           when 2 modify gd-schema( 4, 12), cell-data como-durata
           when 3 modify gd-schema( 6, 12), cell-data como-durata
           when 4 modify gd-schema( 8, 12), cell-data como-durata
           when 5 modify gd-schema(10, 12), cell-data como-durata
           when 6 modify gd-schema(12, 12), cell-data como-durata
           when 7 modify gd-schema(14, 12), cell-data como-durata
           end-evaluate.
                                                    
      ***---     
       LOAD-EXERCISES-ALLOWED-BY-EFFORT.
           move low-value to exe-key.
           start exercises key >= exe-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read exercises next at end exit perform end-read
                    move exe-int-code to int-code
                    read intexe no lock
                    move exe-grp-code to grp-code
                    read groups no lock                                 
                    if exe-isMulti-yes and cb-mul-buf = "No"
                       exit perform cycle
                    end-if                            
                    if int-effort <= effort-wod or 
                       exe-isMulti-yes and cb-mul-buf = "Si"
                       perform varying idx-gruppi from 1 by 1 
                                 until idx-gruppi > tot-gruppi          
                      
                          if el-mcg-code(idx-gruppi) = grp-mcg-code
                             move exe-code      to twe-exe-code
                             move exe-desc      to twe-exe-desc
                             move grp-mcg-code  to twe-mcg-code
                             move int-effort    to twe-effort
                             move exe-isMulti   to twe-exe-isMulti
                             move exe-int-code  to twe-int-code
                             move exe-restpause to twe-exe-restpause
                             write twe-rec 
                          end-if
                       end-perform
                    end-if
                 end-perform
           end-start.           
       
      ***---
       LOAD-EXERCISES-MULTIJOINT.                  
           if cb-mul-buf = "No" exit paragraph end-if.
                                    
           perform varying idx-gruppi from 1 by 1 
                     until idx-gruppi > tot-gruppi
              move low-value to twe-rec
              move el-mcg-code(idx-gruppi) to twe-mcg-code
              set twe-exe-isMulti-yes to true
              move 0 to tot-exe

              start tmp-wod-exe key >= twe-key
                    invalid continue
                not invalid
                    perform until 1 = 2        
                       read tmp-wod-exe next
                         at end exit perform 
                       end-read        
                       if twe-mcg-code not = el-mcg-code(idx-gruppi) or
                          twe-exe-isMulti-no
                          exit perform
                       end-if
                       add 1 to tot-exe    
                       move twe-exe-code      to el-exe-code(tot-exe)
                       move twe-exe-desc      to el-exe-desc(tot-exe)
                       move 0                 to el-exe-used(tot-exe)
                    end-perform
              end-start

             |Phase 2
              if tot-exe > 0
                 move tot-exe to ex-remain  
                 perform varying idx-days from 1 by 1 
                           until idx-days > wom-days
                    perform varying idx-split from 1 by 1 
                              until idx-split > 20

                       evaluate wom-split-el-split-sigla(idx-days, 
           idx-split)
                       when "A"   move el-mcg-code(1) to mcg-code
                       when "B"   move el-mcg-code(2) to mcg-code
                       when "C"   move el-mcg-code(3) to mcg-code
                       when "D"   move el-mcg-code(4) to mcg-code
                       when "E"   move el-mcg-code(5) to mcg-code
                       when "F"   move el-mcg-code(6) to mcg-code
                       when other exit perform
                       end-evaluate

                       move wom-split-el-split-int-code(idx-days, 
           idx-split)
                         to int-code
                       read intexe no lock
                       if int-effort not = 4
                          exit perform
                       end-if

                       if el-mcg-code(idx-gruppi) = mcg-code
                          perform until 1 = 2
                             compute idx = function random * (tot-exe)
                             add 1 to idx
                             if el-exe-used(idx) = 0 or
                                ex-remain = 0
                                move idx-days         to tex-day
                                move idx-split        to tex-split
                                move mcg-code         to tex-mcg-code
                                move el-exe-code(idx) to tex-exe-code
                                move el-exe-desc(idx) to tex-exe-desc
                                move int-code         to tex-int-code
                                set tex-exe-isMulti-yes to true
                                write tex-rec

                                move 1                to 
           el-exe-used(idx)
                                if ex-remain > 0
                                   subtract 1 from ex-remain
                                end-if
                                exit perform
                             end-if
                          end-perform
                          exit perform
                       end-if
                    end-perform
                 end-perform
              end-if
           end-perform.

      ***---
       LOAD-EXERCISES.      
           perform varying idx-days from 1 by 1 
                     until idx-days > wom-days    
              perform varying idx-split from 1 by 1 
                        until idx-split > 20 
                 move idx-days  to tex-day
                 move idx-split to tex-split
                 read tmp-exe
                      invalid continue
                  not invalid exit perform cycle |Salto i multi se già messi
                 end-read                           

                 move low-value to twe-rec
                 evaluate wom-split-el-split-sigla(idx-days, idx-split)
                 when "A" move el-mcg-code(1) to mcg-code twe-mcg-code
                 when "B" move el-mcg-code(2) to mcg-code twe-mcg-code
                 when "C" move el-mcg-code(3) to mcg-code twe-mcg-code
                 when "D" move el-mcg-code(4) to mcg-code twe-mcg-code
                 when "E" move el-mcg-code(5) to mcg-code twe-mcg-code
                 when "F" move el-mcg-code(6) to mcg-code twe-mcg-code
                 when other exit perform
                 end-evaluate       

                 move wom-split-el-split-int-code(idx-days, idx-split)
                   to int-code  

                 move spaces to como-dupl
                 perform ADD-RANDOM-EXERCISE

              end-perform
           end-perform.

      ***---
       ADD-RANDOM-EXERCISE.
           set twe-exe-isMulti-no to true.    
                                              
           read intexe no lock.
           move int-effort to twe-effort.     

           move 0 to tot-exe.
                              
           start tmp-wod-exe key >= twe-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-wod-exe next at end exit perform end-read
                    if twe-mcg-code  not = mcg-code or
                       twe-exe-isMulti-yes          or
                       twe-effort    not = int-effort
                       exit perform
                    end-if

                    if twe-exe-restpause = 0 and
                       int-restpause > 0         
                       exit perform cycle
                    end-if             
                       
                    add 1 to tot-exe    
                    move twe-exe-code      to el-exe-code(tot-exe)
                    move twe-exe-desc      to el-exe-desc(tot-exe)
                    move twe-effort        to el-exe-effort(tot-exe)
                    move 0                 to el-exe-used(tot-exe)
                    move twe-exe-restpause to el-exe-restpause(tot-exe)
                 end-perform
           end-start.      
           
           if ( como-dupl not = spaces and tot-exe > 1 ) or
              ( como-dupl     = spaces and tot-exe > 0 )
              move tot-exe to ex-remain  
              perform until 1 = 2
                 compute idx = function random * (tot-exe)
                 add 1 to idx
                 if el-exe-used(idx) = 0 or
                    ex-remain = 0

                    if como-dupl not = spaces
                       if como-dupl not = el-exe-desc(idx)
                          move idx-days         to tex-day
                          move idx-split        to tex-split     
                          move mcg-code         to tex-mcg-code
                          move el-exe-code(idx) to tex-exe-code
                          move el-exe-desc(idx) to tex-exe-desc
                          move int-code         to tex-int-code
                          set tex-exe-isMulti-no to true
                          write tex-rec invalid rewrite tex-rec 
           end-write
                    
                          move 1                to el-exe-used(idx)
                          if ex-remain > 0
                             subtract 1 from ex-remain
                          end-if  
                                                     
                          if ted-num > 0 and 
                             como-dupl not = el-exe-desc(idx)
                             subtract 1 from ted-num 
                          end-if
                          exit perform
                       end-if
                    else               
                       move idx-days         to tex-day
                       move idx-split        to tex-split     
                       move mcg-code         to tex-mcg-code
                       move el-exe-code(idx) to tex-exe-code
                       move el-exe-desc(idx) to tex-exe-desc
                       move int-code         to tex-int-code
                       set tex-exe-isMulti-no to true
                       write tex-rec invalid rewrite tex-rec end-write
                    
                       move 1                to el-exe-used(idx)
                       if ex-remain > 0
                          subtract 1 from ex-remain
                       end-if   
                       exit perform
                    end-if
                 end-if
              end-perform 
           end-if.

      ***---
       REMOVE-DUPLICATES.
           perform 10 times |Se non riesco dopo 10 tentativi esco, significa che non ho esercizi sufficienti
              move 0 to tot-subst
              perform varying como-giorno from 1 by 1 
                        until como-giorno > wom-days  
                 close       tmp-exe-dupl
                 open output tmp-exe-dupl
                 close       tmp-exe-dupl
                 open i-o    tmp-exe-dupl
                 move low-value to tex-rec
                 move como-giorno  to tex-day
                 move 0 to col-exe-prg
                 start tmp-exe key >= tex-key
                       invalid continue 
                   not invalid
                       move 1 to riga
                       perform until 1 = 2
                          read tmp-exe next 
                            at end exit perform 
                          end-read 
                          if tex-day not = como-giorno
                             exit perform
                          end-if
                          if tex-exe-isMulti-yes exit perform cycle 
           end-if
                          initialize como-nome counter
                          inspect tex-exe-desc replacing trailing 
           spaces by low-value
                          inspect tex-exe-desc tallying counter for 
           characters before low-value
                          if tex-exe-desc(counter - 3 : 4) = "HARD"
                             move tex-exe-desc(1:counter - 4)to 
           como-nome
                          end-if 
                          if tex-exe-desc(counter - 5 : 6) = "MEDIUM"
                             move tex-exe-desc(1:counter - 6)to 
           como-nome
                          end-if
                          if tex-exe-desc(counter - 4 : 5) = "LIGHT"
                             move tex-exe-desc(1:counter - 5)to 
           como-nome
                          end-if
                          if como-nome = spaces
                             move tex-exe-desc to como-nome
                          end-if
                          inspect tex-exe-desc replacing trailing 
           low-value by spaces
                          move tex-day   to ted-day
                          move como-nome to ted-nome-dupl
                          read tmp-exe-dupl
                               invalid 
                               move 1 to ted-num
                               write ted-rec end-write
                           not invalid
                               add  1 to ted-num
                               add  1 to tot-subst
                               rewrite ted-rec end-rewrite
                          end-read
                          move como-nome to tex-nome-dupl
                          rewrite tex-rec
                       end-perform
                 end-start
                                                                    
                 move low-value to ted-key
                 move 2         to ted-num
                 start tmp-exe-dupl key >= ted-k-num
                       invalid continue
                   not invalid
                       perform until 1 = 2
                          read tmp-exe-dupl next at end exit perform 
           end-read 
                          if ted-num < 2
                             exit perform
                          end-if
                          move ted-day       to tex-day
                          move ted-nome-dupl to tex-nome-dupl
                          start tmp-exe key >= tex-k-dupl
                                invalid continue
                            not invalid
                                perform until 1 = 2
                                   read tmp-exe next 
                                     at end exit perform 
                                   end-read
                                   if tex-day       not = ted-day    or
                                      tex-nome-dupl not = ted-nome-dupl
                                      exit perform
                                   end-if    
                                   move low-value to twe-rec
                                   move tex-mcg-code to mcg-code 
           twe-mcg-code
                                   move tex-int-code to int-code
                                                                    
                                   initialize tab-exe 
                                              replacing numeric data by 
           zeroes
                                                   alphanumeric data by 
           spaces
                                   move tex-day      to idx-days   
                                   move tex-split    to idx-split 
                                   move tex-exe-desc to como-dupl
                                   perform ADD-RANDOM-EXERCISE

                                   if ted-num < 2
                                      exit perform
                                   end-if
              
                                end-perform
                          end-start
                       end-perform
                 end-start                
              end-perform 
              if tot-subst = 0
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>
       Screen1-Pb-1-LinkTo.
      * <TOTEM:PARA. Screen1-Pb-1-LinkTo>
           modify cb-mg1, value "Legs".
           modify cb-mg2, value "Shoulder".
           modify cb-mg3, value "Arms".
           modify cb-mg4, value "Pectoral".
           modify cb-mg5, value "Back".
           modify cb-mg6, value "Abs".
           modify cb-mg7, value "Nessuno".
                                 
           modify cb-int, value = "Tutto".
           modify cb-dur, value = "Medium".

           modify cb-wod, value = "Cedimento con richiamo (A-B-C-D-E-F)"
               
           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>
       pb-random-LinkTo.
      * <TOTEM:PARA. pb-random-LinkTo>
           inquire cb-wod, value in wom-desc.
           read wodmap key wom-k-desc.

           move tab-mcg to como-tab-mcg.
           
           move 0 to riga.
           perform until 1 = 2
              if riga = wom-macrogroups
                 exit perform
              end-if
              compute idx = function random * (tot-mcg)
              add 1 to idx
              if como-el-mcg-desc(idx) not = spaces
                 add 1 to riga
                 if riga > wom-macrogroups
                    exit perform
                 end-if
                 evaluate riga
                 when 1 modify cb-mg1, value = como-el-mcg-desc(idx)
                 when 2 modify cb-mg2, value = como-el-mcg-desc(idx)
                 when 3 modify cb-mg3, value = como-el-mcg-desc(idx)
                 when 4 modify cb-mg4, value = como-el-mcg-desc(idx)
                 when 5 modify cb-mg5, value = como-el-mcg-desc(idx)
                 when 6 modify cb-mg6, value = como-el-mcg-desc(idx)
                 when 7 modify cb-mg7, value = como-el-mcg-desc(idx)
                 end-evaluate
                 move spaces to como-el-mcg-desc(idx) 
              end-if
           end-perform.

           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>
       Screen1-Pb-1a-LinkTo.
      * <TOTEM:PARA. Screen1-Pb-1a-LinkTo>
           modify cb-mg1, value "Legs".
           modify cb-mg2, value "Abs".
           modify cb-mg3, value "Pectoral".
           modify cb-mg4, value "Arms".
           modify cb-mg5, value "Shoulder".
           modify cb-mg6, value "Back".
           modify cb-mg7, value "Nessuno".
                                 
           modify cb-int, value = "Tutto".
           modify cb-dur, value = "Medium".

           modify cb-wod, value "HATFIELD".

           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>
       cb-wod-AfterProcedure.
      * <TOTEM:PARA. cb-wod-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>
       cb-gio-AfterProcedure.
      * <TOTEM:PARA. cb-gio-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform VALORIZZA-WOD 
           .
      * <TOTEM:END>
       cb-gio-BeforeProcedure.
      * <TOTEM:PARA. cb-gio-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-wod-BeforeProcedure.
      * <TOTEM:PARA. cb-wod-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       gd-schema-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-schema-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

