      *{TOTEM}PRG-COMMENT
      * gwod.Cbl
      * gwod.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          gwod.
       AUTHOR.              andre.
       DATE-WRITTEN.        giovedì 28 settembre 2023 18:23:35.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:gwod, INIT:gwod, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "exercises.sl".
           COPY "groups.sl".
           COPY "macrogroups.sl".
           COPY "duration.sl".
           COPY "tmp-exe-effort.sl".
           COPY "wodbook.sl".
           COPY "wodmap.sl".
           COPY "tmp-wod-exe.sl".
           COPY "tmp-exe.sl".
           COPY "intexe.sl".
           COPY "tmp-exe-dupl.sl".
           COPY "zoom-exe-mcg.sl".
           COPY "tmp-hit.sl".
           COPY "tmp-grp-exe.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "exercises.fd".
           COPY "groups.fd".
           COPY "macrogroups.fd".
           COPY "duration.fd".
           COPY "tmp-exe-effort.fd".
           COPY "wodbook.fd".
           COPY "wodmap.fd".
           COPY "tmp-wod-exe.fd".
           COPY "tmp-exe.fd".
           COPY "intexe.fd".
           COPY "tmp-exe-dupl.fd".
           COPY "zoom-exe-mcg.fd".
           COPY "tmp-hit.fd".
           COPY "tmp-grp-exe.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "comune.def".
               COPY "custom.def".
               COPY "UTYDATA.DEF".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Gestione WOD". 
           COPY  "EXTERNALS.DEF".
       77 num-param        PIC  9
                  USAGE IS COMP-1
                  VALUE IS 0.
       77 RigaCambiata     PIC  9(5)
                  VALUE IS 0.
       77 ColonnaCambiata  PIC  9(5)
                  VALUE IS 0.
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 val-ini          PIC  99/99/9999.
       77 store-ini        PIC  9(8).
       77 store-codice     PIC  9(5).
       77 data-oggi        PIC  9(8).
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-NUOVO          PIC  9
                  VALUE IS 1.
       77 E-CANCELLA       PIC  9
                  VALUE IS 1.
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       77 E-ANTEPRIMA      PIC  9
                  VALUE IS 1.
       77 E-MODIFICA       PIC  9
                  VALUE IS 1.
       77 E-STAMPA         PIC  9
                  VALUE IS 0.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 E-SELEZIONA      PIC  9
                  VALUE IS 1.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Form1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 como-hit         PIC  xxx.
       77 link-stampante   PIC  x(200).
       77 como-effort      PIC  99.
       77 tot-series       PIC  999.
       77 como-giorno      PIC  99.
       77 como-tit-macro   PIC  x(13).
       77 save-day         PIC  9.
       77 como-series      PIC  999.
       77 como-grp-desc    PIC  x(100).
       77 riga-div         PIC  999.
       77 como-grp-code    PIC  x(5).
       77 riga-aggiunta    PIC  999.
       01 FILLER           PIC  9.
           88 fromAggiungi VALUE IS 1    WHEN SET TO FALSE  0. 
       01 s-tex-key.
           05 s-tex-day        PIC  9.
           05 s-tex-split      PIC  9(3).
       01 como-tex-rec.
           05 como-tex-key.
               10 como-tex-day     PIC  9.
               10 como-tex-split   PIC  9(3).
           05 como-tex-data.
               10 como-tex-mcg-code            PIC  x(5).
               10 como-tex-exe-code            PIC  x(5).
               10 como-tex-exe-desc            PIC  x(100).
               10 como-tex-nome-dupl           PIC  x(100).
               10 como-tex-int-code            PIC  99.
               10 como-tex-exe-isMulti         PIC  9.
                   88 como-tex-exe-isMulti-no VALUE IS 0. 
                   88 como-tex-exe-isMulti-yes VALUE IS 1. 
               10 como-tex-reps    PIC  x(10).
               10 como-tex-series  PIC  99.
       01 mcg-sigle-tab.
           05 el-mcg-sigla     PIC  x
                      OCCURS 10 TIMES.
       77 s-int-buf        PIC  x(100).
       77 s-dur-desc       PIC  x(100).
       77 como-mm          PIC  xx.
       77 como-hh          PIC  xx.
       77 como-xx1         PIC  xxx.
       77 como-xx2         PIC  xxx.
       77 como-durata      PIC  x(100).
       77 s-gio-buf        PIC  x(100).
       77 como-nome        PIC  x(100).
       77 tot-subst        PIC  999.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0,00.
       77 como-minuto-i    PIC  x(6).
       77 como-ora-e       PIC  x(3).
       77 como-dupl        PIC  x(100).
       77 colore           PIC  999.
       77 como-e           PIC  999.
       77 s-mcg-code       PIC  x(5).
       77 s-int-effort     PIC  99.
       01 tab-prim.
           05 como-prim        PIC  9
                      OCCURS 10 TIMES.
       77 BOTTONE-annulla-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       01 FILLER           PIC  9.
           88 ApriLookup VALUE IS 1    WHEN SET TO FALSE  0. 
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       01 rec-schema.
           05 sigle-effort.
               10 sigle-effort-1   PIC  x(8).
               10 sigle-effort-2   PIC  x(8).
               10 sigle-effort-3   PIC  x(8).
               10 sigle-effort-4   PIC  x(8).
               10 sigle-effort-5   PIC  x(8).
               10 sigle-effort-6   PIC  x(8).
               10 sigle-effort-7   PIC  x(8).
               10 sigle-effort-8   PIC  x(8).
               10 sigle-effort-9   PIC  x(8).
               10 sigle-effort-10  PIC  x(8).
           05 mcg.
               10 mcg-1            PIC  x(5).
               10 mcg-2            PIC  x(5).
               10 mcg-3            PIC  x(5).
               10 mcg-4            PIC  x(5).
               10 mcg-5            PIC  x(5).
               10 mcg-6            PIC  x(5).
               10 mcg-7            PIC  x(5).
               10 mcg-8            PIC  x(5).
               10 mcg-9            PIC  x(5).
               10 mcg-10           PIC  x(5).
       01 tab-exe.
           05 el-exe
                      OCCURS 20 TIMES.
               10 el-exe-code      PIC  x(5).
               10 el-exe-desc      PIC  x(100).
               10 el-exe-used      PIC  9.
               10 el-exe-effort    PIC  99.
               10 el-exe-restpause PIC  9.
       01 tab-wod-exe.
           05 el-wod-day
                      OCCURS 7 TIMES.
               10 el-wod-mcg-exe
                          OCCURS 20 TIMES.
                   15 el-wod-mcg       PIC  x(5).
                   15 el-wod-exe-code  PIC  x(5).
                   15 el-wod-exe-desc  PIC  x(100).
                   15 el-wod-exe-effort            PIC  9.
       77 RigheIniziali    PIC  9(3).
       77 como-giorni      PIC  99.
       77 hh   PIC  99.
       77 mm   PIC  99.
       77 resto            PIC  9(5).
       77 tot-durata       PIC  9(10).
       77 lastIdx          PIC  9(3).
       77 idx1 PIC  9(3).
       77 idx1-p           PIC  9(3).
       77 idx2 PIC  9(3).
       77 idx-days         PIC  9(3).
       77 idx-split        PIC  9(3).
       77 como-range-from  PIC  xx.
       77 como-range-to    PIC  xx.
       77 como-x           PIC  x.
       77 primari-rimasti  PIC  99.
       77 tot-mcg          PIC  99.
       77 tot-mcg-p        PIC  99.
       77 tot-exe          PIC  99.
       01 como-tab-mcg.
           05 como-el-mcg-desc PIC  x(100)
                      OCCURS 10 TIMES.
       01 tab-mcg.
           05 el-mcg-desc      PIC  x(100)
                      OCCURS 10 TIMES.
       01 como-tab-mcg-p.
           05 como-el-mcg-desc-p           PIC  x(100)
                      OCCURS 10 TIMES.
       01 tab-mcg-p.
           05 el-mcg-desc-p    PIC  x(100)
                      OCCURS 10 TIMES.
       77 tot-gruppi       PIC  999.
       77 tot-hit          PIC  999.
       77 idx-gruppi       PIC  999.
       01 tab-mgroups.
           05 el-mgroups
                      OCCURS 10 TIMES.
               10 el-mgroup        PIC  x(100).
               10 el-mcg-code      PIC  x(5).
               10 el-mcg-color     PIC  999.
       01 rec-grid.
           05 col-day          PIC  9.
           05 col-exe-prg      PIC  99.
           05 col-grp-code     PIC  x(5).
           05 col-grp-desc     PIC  x(100).
           05 col-exe-code     PIC  x(5).
           05 col-exe-desc     PIC  x(100).
           05 col-series       PIC  99.
           05 col-reps         PIC  x(20).
       77 Calibri14-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Calibri14B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 cambia-cliente-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Calibri12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Calibri12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 contact-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 Calibri18B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 default-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 Calibri16B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 form-prezz-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Calibri12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-exercises PIC  X(2).
           88 Valid-STATUS-exercises VALUE IS "00" THRU "09". 
       77 STATUS-groups    PIC  X(2).
           88 Valid-STATUS-groups VALUE IS "00" THRU "09". 
       77 STATUS-intensity PIC  X(2).
           88 Valid-STATUS-intensity VALUE IS "00" THRU "09". 
       77 STATUS-macrogroups           PIC  X(2).
           88 Valid-STATUS-macrogroups VALUE IS "00" THRU "09". 
       77 STATUS-wodbook   PIC  X(2).
           88 Valid-STATUS-wodbook VALUE IS "00" THRU "09". 
       77 cb-mg1-buf       PIC  X(100).
       77 cb-mg2-buf       PIC  X(100).
       77 cb-mg3-buf       PIC  X(100).
       77 cb-mg4-buf       PIC  X(100).
       77 cb-mg5-buf       PIC  X(100).
       77 cb-mgtb-buf      PIC  X(100).
       77 cb-int-buf       PIC  X(100).
       77 old-cb-dur-buf   PIC  X(100).
       77 STATUS-duration  PIC  X(2).
           88 Valid-STATUS-duration VALUE IS "00" THRU "09". 
       77 cb-rnd-buf       PIC  X(100).
       77 cb-dur-buf       PIC  X(100).
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       78 78-col-day VALUE IS 1. 
       78 78-col-prg VALUE IS 2. 
       78 78-col-grp-code VALUE IS 3. 
       78 78-col-grp-desc VALUE IS 4. 
       78 78-col-exe-code VALUE IS 5. 
       78 78-col-exe-desc VALUE IS 6. 
       78 78-col-series VALUE IS 7. 
       78 78-col-reps VALUE IS 8. 
       77 ex-remain        PIC  99.
       77 effort-wod       PIC  99.
       77 path-tmp-exe-effort          PIC  X(256).
       77 STATUS-tmp-exe-effort        PIC  X(2).
           88 Valid-STATUS-tmp-exe-effort VALUE IS "00" THRU "09". 
       77 cb-gio-buf       PIC  x(5).
       77 cb-mul-buf       PIC  X(100).
       77 cb-wod-buf       PIC  x(100).
       77 STATUS-wodmap    PIC  X(2).
           88 Valid-STATUS-wodmap VALUE IS "00" THRU "09". 
       77 cb-mg6-buf       PIC  X(100).
       77 path-tmp-wod-exe PIC  X(256).
       77 STATUS-tmp-wod-exe           PIC  X(2).
           88 Valid-STATUS-tmp-wod-exe VALUE IS "00" THRU "09". 
       77 path-tmp-exe     PIC  X(256).
       77 STATUS-tmp-exe   PIC  X(2).
           88 Valid-STATUS-tmp-exe VALUE IS "00" THRU "09". 
       77 STATUS-intexe    PIC  X(2).
           88 Valid-STATUS-intexe VALUE IS "00" THRU "09". 
       77 cb-mg7-buf       PIC  X(100).
       77 Calibri10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 genera-bmp       PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 random-bmp       PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-day         PIC  X(200).
       77 counter          PIC  9(3).
       77 schema-exe       PIC  999.
       77 path-tmp-exe-dupl            PIC  X(256).
       77 STATUS-tmp-exe-dupl          PIC  X(2).
           88 Valid-STATUS-tmp-exe-dupl VALUE IS "00" THRU "09". 
       77 Courier-New8-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Calibri10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 hid-tot-exe      PIC  99.
       01 hiddenData.
           05 hid-restpause    PIC  9.
           05 hid-mcg-code     PIC  x(5).
           05 hid-tex-key.
               10 hid-tex-day      PIC  9.
               10 hid-tex-split    PIC  9(3).
       77 Calibri14BU-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 path-zoom-exe-mcg            PIC  X(256).
       77 STATUS-zoom-exe-mcg          PIC  X(2).
           88 Valid-STATUS-zoom-exe-mcg VALUE IS "00" THRU "09". 
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 scr-stampa-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 78-ID-ef-st-tipo PIC  9(6)
                  VALUE IS 0.
       77 ef-ricerca-piva-buf          PIC  X(11).
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 scr-attesa-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Calibri24B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 lab-attesa-buf   PIC  x(50).
       77 path-tmp-hit     PIC  X(256).
       77 STATUS-tmp-hit   PIC  X(2).
           88 Valid-STATUS-tmp-hit VALUE IS "00" THRU "09". 
       77 path-tmp-grp-exe PIC  X(256).
       77 STATUS-tmp-grp-exe           PIC  X(2).
           88 Valid-STATUS-tmp-grp-exe VALUE IS "00" THRU "09". 
       77 Calibri12BU-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 up-down-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 piu-meno-bmp     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form1-wodbook-RESTOREBUF  PIC X(2447).
       77 TMP-Form1-KEYIS  PIC 9(3) VALUE 1.
       77 Form1-MULKEY-TMPBUF   PIC X(2447).
       77 STATUS-scr-attesa-FLAG-REFRESH PIC  9.
          88 scr-attesa-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-exercises-BUF     PIC X(1189).
       77 TMP-DataSet1-groups-BUF     PIC X(1182).
       77 TMP-DataSet1-macrogroups-BUF     PIC X(1177).
       77 TMP-DataSet1-duration-BUF     PIC X(1163).
       77 TMP-DataSet1-tmp-exe-effort-BUF     PIC X(112).
       77 TMP-DataSet1-wodbook-BUF     PIC X(2447).
       77 TMP-DataSet1-wodmap-BUF     PIC X(18104).
       77 TMP-DataSet1-tmp-wod-exe-BUF     PIC X(116).
       77 TMP-DataSet1-tmp-exe-BUF     PIC X(229).
       77 TMP-DataSet1-intexe-BUF     PIC X(1188).
       77 TMP-DataSet1-tmp-exe-dupl-BUF     PIC X(105).
       77 TMP-DataSet1-zoom-exe-mcg-BUF     PIC X(312).
       77 TMP-DataSet1-tmp-hit-BUF     PIC X(6).
       77 TMP-DataSet1-tmp-grp-exe-BUF     PIC X(217).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-exercises-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-exercises-LOCK  VALUE "Y".
       77 DataSet1-exercises-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-exercises-KEY-Asc  VALUE "A".
          88 DataSet1-exercises-KEY-Desc VALUE "D".
       77 DataSet1-groups-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-groups-LOCK  VALUE "Y".
       77 DataSet1-groups-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-groups-KEY-Asc  VALUE "A".
          88 DataSet1-groups-KEY-Desc VALUE "D".
       77 DataSet1-macrogroups-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-macrogroups-LOCK  VALUE "Y".
       77 DataSet1-macrogroups-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-macrogroups-KEY-Asc  VALUE "A".
          88 DataSet1-macrogroups-KEY-Desc VALUE "D".
       77 DataSet1-duration-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-duration-LOCK  VALUE "Y".
       77 DataSet1-duration-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-duration-KEY-Asc  VALUE "A".
          88 DataSet1-duration-KEY-Desc VALUE "D".
       77 DataSet1-tmp-exe-effort-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-exe-effort-LOCK  VALUE "Y".
       77 DataSet1-tmp-exe-effort-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-exe-effort-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-exe-effort-KEY-Desc VALUE "D".
       77 DataSet1-wodbook-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-wodbook-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-wodbook-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-wodbook-KEY1-Asc  VALUE "A".
          88 DataSet1-wodbook-KEY1-Desc VALUE "D".
       77 DataSet1-wodmap-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-wodmap-LOCK  VALUE "Y".
       77 DataSet1-wodmap-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-wodmap-KEY-Asc  VALUE "A".
          88 DataSet1-wodmap-KEY-Desc VALUE "D".
       77 DataSet1-tmp-wod-exe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-wod-exe-LOCK  VALUE "Y".
       77 DataSet1-tmp-wod-exe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-wod-exe-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-wod-exe-KEY-Desc VALUE "D".
       77 DataSet1-tmp-exe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-exe-LOCK  VALUE "Y".
       77 DataSet1-tmp-exe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-exe-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-exe-KEY-Desc VALUE "D".
       77 DataSet1-intexe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-intexe-LOCK  VALUE "Y".
       77 DataSet1-intexe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-intexe-KEY-Asc  VALUE "A".
          88 DataSet1-intexe-KEY-Desc VALUE "D".
       77 DataSet1-tmp-exe-dupl-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-exe-dupl-LOCK  VALUE "Y".
       77 DataSet1-tmp-exe-dupl-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-exe-dupl-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-exe-dupl-KEY-Desc VALUE "D".
       77 DataSet1-zoom-exe-mcg-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-zoom-exe-mcg-LOCK  VALUE "Y".
       77 DataSet1-zoom-exe-mcg-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-zoom-exe-mcg-KEY-Asc  VALUE "A".
          88 DataSet1-zoom-exe-mcg-KEY-Desc VALUE "D".
       77 DataSet1-tmp-hit-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-hit-LOCK  VALUE "Y".
       77 DataSet1-tmp-hit-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-hit-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-hit-KEY-Desc VALUE "D".
       77 DataSet1-tmp-grp-exe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-grp-exe-LOCK  VALUE "Y".
       77 DataSet1-tmp-grp-exe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-grp-exe-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-grp-exe-KEY-Desc VALUE "D".

       77 exercises-exe-k-desc-SPLITBUF  PIC X(101).
       77 exercises-exe-k-group-SPLITBUF  PIC X(11).
       77 groups-grp-k-desc-SPLITBUF  PIC X(101).
       77 groups-grp-k-mcg-SPLITBUF  PIC X(11).
       77 macrogroups-mcg-k-desc-SPLITBUF  PIC X(101).
       77 duration-dur-k-desc-SPLITBUF  PIC X(101).
       77 duration-dur-k-exercises-SPLITBUF  PIC X(3).
       77 wodmap-wom-k-desc-SPLITBUF  PIC X(101).
       77 tmp-exe-tex-k-dupl-SPLITBUF  PIC X(102).
       77 tmp-exe-tex-k-mcg-SPLITBUF  PIC X(10).
       77 intexe-int-k-desc-SPLITBUF  PIC X(101).
       77 intexe-int-k-effort-SPLITBUF  PIC X(3).
       77 tmp-exe-dupl-ted-k-num-SPLITBUF  PIC X(106).
       77 zoom-exe-mcg-zem-k-int-SPLITBUF  PIC X(203).
       77 tmp-grp-exe-tge-k-prg-SPLITBUF  PIC X(4).

       01                 pic 9.
           88 s-excell    value 1.
           88 s-stampa    value 2.
           88 s-anteprima value 3.

       77  s-cb-mg1-buf   pic x(100).
       77  s-cb-mg2-buf   pic x(100).
       77  s-cb-mg3-buf   pic x(100).
       77  s-cb-mg4-buf   pic x(100).
       77  s-cb-mg5-buf   pic x(100).
       77  s-cb-mg6-buf   pic x(100).
       77  s-cb-mg7-buf   pic x(100).
       77  s-cb-mul-buf   pic x(100).
       77  s-cb-int-buf   pic x(100).
       77  s-cb-dur-buf   pic x(100).
       77  s-cb-gio-buf   pic x(100).
       77  s-cb-wod-buf   pic x(100). 

       77  s-tex-exe-code     pic x(5).  
       77  s-tex-exe-desc     pic x(100).   
       77  s-tex-exe-isMulti  pic 9.
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-cb-mg1 VALUE 5001.
       78  78-ID-cb-mg2 VALUE 5002.
       78  78-ID-cb-mg3 VALUE 5003.
       78  78-ID-cb-mg4 VALUE 5004.
       78  78-ID-cb-mg5 VALUE 5005.
       78  78-ID-cb-mg6 VALUE 5006.
       78  78-ID-cb-mg7 VALUE 5007.
       78  78-ID-gd1 VALUE 5008.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "F:\STUDIOPOSTURA\COPYLIB\BLOCKPGM.LKS".
       01 link-codice      PIC  9(6).

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * COMBO-BOX
       05
           cb-mg1, 
           Combo-Box, 
           COL 17,80, 
           LINE 1,70,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-cb-mg1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg1-buf,
           AFTER PROCEDURE cb-mg1-AfterProcedure, 
           BEFORE PROCEDURE cb-mg1-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-mcg1, 
           Push-Button, 
           COL 62,00, 
           LINE 1,70,
           LINES 1,30 ,
           SIZE 7,00 ,
           ENABLED 0,
           EXCEPTION-VALUE 1005,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mai",
           AFTER PROCEDURE pb-mcg1-AfterProcedure, 
           BEFORE PROCEDURE pb-mcg1-BeforeProcedure, 
           .

      * COMBO-BOX
       05
           cb-mg2, 
           Combo-Box, 
           COL 17,80, 
           LINE 3,17,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-cb-mg2,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg2-buf,
           AFTER PROCEDURE cb-mg2-AfterProcedure, 
           BEFORE PROCEDURE cb-mg2-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-mcg2, 
           Push-Button, 
           COL 62,00, 
           LINE 3,17,
           LINES 1,30 ,
           SIZE 7,00 ,
           ENABLED 0,
           EXCEPTION-VALUE 1006,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mai",
           AFTER PROCEDURE pb-mcg2-AfterProcedure, 
           BEFORE PROCEDURE pb-mcg2-BeforeProcedure, 
           .

      * COMBO-BOX
       05
           cb-mg3, 
           Combo-Box, 
           COL 17,80, 
           LINE 4,70,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-cb-mg3,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg3-buf,
           AFTER PROCEDURE cb-mg3-AfterProcedure, 
           BEFORE PROCEDURE cb-mg3-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-mcg3, 
           Push-Button, 
           COL 62,00, 
           LINE 4,70,
           LINES 1,30 ,
           SIZE 7,00 ,
           ENABLED 0,
           EXCEPTION-VALUE 1011,
           ID IS 20,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mai",
           AFTER PROCEDURE pb-mcg3-AfterProcedure, 
           BEFORE PROCEDURE pb-mcg3-BeforeProcedure, 
           .

      * COMBO-BOX
       05
           cb-mg4, 
           Combo-Box, 
           COL 17,80, 
           LINE 6,17,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-cb-mg4,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg4-buf,
           AFTER PROCEDURE cb-mg4-AfterProcedure, 
           BEFORE PROCEDURE cb-mg4-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-mcg4, 
           Push-Button, 
           COL 62,00, 
           LINE 6,17,
           LINES 1,30 ,
           SIZE 7,00 ,
           ENABLED 0,
           EXCEPTION-VALUE 1010,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mai",
           AFTER PROCEDURE pb-mcg4-AfterProcedure, 
           BEFORE PROCEDURE pb-mcg4-BeforeProcedure, 
           .

      * COMBO-BOX
       05
           cb-mg5, 
           Combo-Box, 
           COL 17,80, 
           LINE 7,70,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-cb-mg5,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg5-buf,
           AFTER PROCEDURE cb-mg5-AfterProcedure, 
           BEFORE PROCEDURE cb-mg5-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-mcg5, 
           Push-Button, 
           COL 62,00, 
           LINE 7,70,
           LINES 1,30 ,
           SIZE 7,00 ,
           ENABLED 0,
           EXCEPTION-VALUE 1009,
           ID IS 22,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mai",
           AFTER PROCEDURE pb-mcg5-AfterProcedure, 
           BEFORE PROCEDURE pb-mcg5-BeforeProcedure, 
           .

      * COMBO-BOX
       05
           cb-mg6, 
           Combo-Box, 
           COL 17,80, 
           LINE 9,17,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-cb-mg6,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg6-buf,
           AFTER PROCEDURE cb-mg6-AfterProcedure, 
           BEFORE PROCEDURE cb-mg6-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-mcg6, 
           Push-Button, 
           COL 62,00, 
           LINE 9,17,
           LINES 1,30 ,
           SIZE 7,00 ,
           ENABLED 0,
           EXCEPTION-VALUE 1008,
           ID IS 39,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mai",
           AFTER PROCEDURE pb-mcg6-AfterProcedure, 
           BEFORE PROCEDURE pb-mcg6-BeforeProcedure, 
           .

      * COMBO-BOX
       05
           cb-mg7, 
           Combo-Box, 
           COL 17,80, 
           LINE 10,70,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-cb-mg7,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mg7-buf,
           AFTER PROCEDURE cb-mg7-AfterProcedure, 
           BEFORE PROCEDURE cb-mg7-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-mcg7, 
           Push-Button, 
           COL 62,00, 
           LINE 10,70,
           LINES 1,30 ,
           SIZE 7,00 ,
           ENABLED 0,
           EXCEPTION-VALUE 1007,
           ID IS 40,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mai",
           AFTER PROCEDURE pb-mcg7-AfterProcedure, 
           BEFORE PROCEDURE pb-mcg7-BeforeProcedure, 
           .

      * COMBO-BOX
       05
           cb-mul, 
           Combo-Box, 
           COL 17,80, 
           LINE 15,09,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 32,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-mul-buf,
           AFTER PROCEDURE cb-rnd-AfterProcedure, 
           BEFORE PROCEDURE cb-rnd-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-int, 
           Combo-Box, 
           COL 17,80, 
           LINE 17,09,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-int-buf,
           AFTER PROCEDURE cb-int-AfterProcedure, 
           BEFORE PROCEDURE cb-int-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-dur, 
           Combo-Box, 
           COL 17,80, 
           LINE 18,57,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-dur-buf,
           AFTER PROCEDURE cb-dur-AfterProcedure, 
           BEFORE PROCEDURE cb-dur-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-gio, 
           Combo-Box, 
           COL 17,80, 
           LINE 20,09,
           LINES 10,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-gio-buf,
           AFTER PROCEDURE cb-gio-AfterProcedure, 
           BEFORE PROCEDURE cb-gio-BeforeProcedure, 
           .
      * COMBO-BOX
       05
           cb-wod, 
           Combo-Box, 
           COL 17,80, 
           LINE 21,57,
           LINES 16,00 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 34,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           NOTIFY-SELCHANGE,
           DROP-LIST,
           UNSORTED,
           VALUE cb-wod-buf,
           AFTER PROCEDURE cb-wod-AfterProcedure, 
           BEFORE PROCEDURE cb-wod-BeforeProcedure, 
           EXCEPTION PROCEDURE cb-wod-Exception-Proc, 
           .
      * PUSH BUTTON
       05
           pb-genera, 
           Push-Button, 
           COL 17,80, 
           LINE 23,35,
           LINES 55 PIXELS,
           SIZE 148 PIXELS,
           BITMAP-HANDLE genera-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 0,
           EXCEPTION-VALUE 1000,
           FONT IS Small-Font,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&GENERA",
           .

      * PUSH BUTTON
       05
           pb-random, 
           Push-Button, 
           COL 17,80, 
           LINE 12,35,
           LINES 55 PIXELS,
           SIZE 148 PIXELS,
           BITMAP-HANDLE random-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 0,
           EXCEPTION-VALUE 1002,
           FONT IS Small-Font,
           ID IS 25,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&Random",
           .

      * GRID
       05
           gd1, 
           Grid, 
           COL 71,00, 
           LINE 1,70,
           LINES 34,87 ,
           SIZE 75,50 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 2, 4, 9, 109, 114, 214, 216),
           ALIGNMENT ("C", "R", "U", "L", "U", "L", "U", "U"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(1)", "z9", "X(5)", "X(100)", "X(5)", "X(100)"
           , "9(2)", "x(20)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           FONT IS Calibri12-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 78-ID-gd1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 90,
           VPADDING 5,
           VSCROLL,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * LABEL
       05
           Screen1-blockpgm-1, 
           Label, 
           COL 83,70, 
           LINE 1,00,
           LINES 0,61 ,
           SIZE 1,50 ,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 90,70, 
           LINE 1,13,
           LINES 0,52 ,
           SIZE 0,80 ,
           ID IS 12,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           lab-a, 
           Label, 
           COL 3,00, 
           LINE 1,70,
           LINES 1,30 ,
           SIZE 14,00 ,
           FONT IS Calibri14-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Macrogruppo A",
           .

      * LABEL
       05
           lab-b, 
           Label, 
           COL 3,00, 
           LINE 3,17,
           LINES 1,30 ,
           SIZE 14,00 ,
           FONT IS Calibri14-Occidentale,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Macrogruppo B",
           .

      * LABEL
       05
           lab-c, 
           Label, 
           COL 3,00, 
           LINE 4,70,
           LINES 1,30 ,
           SIZE 14,00 ,
           FONT IS Calibri14-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Macrogruppo C",
           .

      * LABEL
       05
           lab-d, 
           Label, 
           COL 3,00, 
           LINE 6,17,
           LINES 1,30 ,
           SIZE 14,00 ,
           FONT IS Calibri14-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Macrogruppo D",
           .

      * LABEL
       05
           lab-e, 
           Label, 
           COL 3,00, 
           LINE 7,70,
           LINES 1,30 ,
           SIZE 14,00 ,
           FONT IS Calibri14-Occidentale,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Macrogruppo E",
           .

      * LABEL
       05
           Screen1-La-2a, 
           Label, 
           COL 3,00, 
           LINE 17,09,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Intensità",
           .

      * LABEL
       05
           Screen1-La-2aa, 
           Label, 
           COL 3,00, 
           LINE 18,57,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Durata",
           .

      * LABEL
       05
           Screen1-La-2aaa, 
           Label, 
           COL 3,00, 
           LINE 20,09,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Giorni",
           .

      * LABEL
       05
           Screen1-La-2ba, 
           Label, 
           COL 3,00, 
           LINE 15,09,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 31,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Multiarticolari",
           .

      * LABEL
       05
           Screen1-La-2aaaa, 
           Label, 
           COL 3,00, 
           LINE 21,57,
           LINES 1,30 ,
           SIZE 13,00 ,
           ID IS 33,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Modello",
           .

      * LABEL
       05
           lab-f, 
           Label, 
           COL 3,00, 
           LINE 9,17,
           LINES 1,30 ,
           SIZE 14,00 ,
           FONT IS Calibri14-Occidentale,
           ID IS 27,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Macrogruppo F",
           .

      * LABEL
       05
           lab-g, 
           Label, 
           COL 3,00, 
           LINE 10,70,
           LINES 1,30 ,
           SIZE 14,00 ,
           FONT IS Calibri14-Occidentale,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Macrogruppo G",
           .

      * GRID
       05
           gd-schema, 
           Grid, 
           COL 2,30, 
           LINE 26,13,
           LINES 10,52 ,
           SIZE 66,70 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 3, 8, 13, 18, 23, 28, 33, 38, 43, 48, 53),
           ALIGNMENT ("R", "L", "L", "L", "L", "L", "L", "L", "L", "L", 
           "L", "U"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("z9", "x(5)", "X(5)", "X(100)", "X(5)", "X(100)"
           , "z9", "z9", "X", "X", "X", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           FONT IS Calibri10B-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 37,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 90,
           VPADDING 5,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-aggiungi, 
           Push-Button, 
           COL 147,10, 
           LINE 1,70,
           LINES 1,17 ,
           SIZE 28 PIXELS,
           BITMAP-HANDLE PIU-MENO-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1012,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "+",
           .

      * PUSH BUTTON
       05
           pb-elimina, 
           Push-Button, 
           COL 147,10, 
           LINE 2,96,
           LINES 1,17 ,
           SIZE 28 PIXELS,
           BITMAP-HANDLE PIU-MENO-BMP,
           BITMAP-NUMBER 2,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1004,
           ID IS 36,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "-",
           .

      * PUSH BUTTON
       05
           pb-su, 
           Push-Button, 
           COL 147,10, 
           LINE 4,26,
           LINES 1,17 ,
           SIZE 28 PIXELS,
           BITMAP-HANDLE UP-DOWN-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001,
           ID IS 38,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "SU",
           .

      * PUSH BUTTON
       05
           pb-giu, 
           Push-Button, 
           COL 147,10, 
           LINE 5,52,
           LINES 1,17 ,
           SIZE 28 PIXELS,
           BITMAP-HANDLE UP-DOWN-BMP,
           BITMAP-NUMBER 2,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1003,
           ID IS 41,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "GIU",
           .

      * TOOLBAR
       01
           Form1-Tb-1,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 72,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "Esci (Esc)",
           .

      * PUSH BUTTON
       05
           TOOL-NUOVO, 
           Push-Button, 
           COL 6,30, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-NUOVO,
           EXCEPTION-VALUE 2,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 73,
           SELF-ACT,
           TITLE "Nuovo (F2)",
           BITMAP-NUMBER BitmapNumNew
           .

      * PUSH BUTTON
       05
           TOOL-SALVA, 
           Push-Button, 
           COL 11,60, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-SALVA,
           EXCEPTION-VALUE 3,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 75,
           SELF-ACT,
           TITLE "Salva (F3)",
           BITMAP-NUMBER BitmapNumSave
           .

      * PUSH BUTTON
       05
           TOOL-ANTEPRIMA, 
           Push-Button, 
           COL 22,10, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 6,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 6,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 76,
           SELF-ACT,
           TITLE "Anteprima (F6)",
           .

      * PUSH BUTTON
       05
           TOOL-STAMPA, 
           Push-Button, 
           COL 27,40, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 7,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 7,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 110,
           SELF-ACT,
           TITLE "Stampa (F7)",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 16,90, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           FONT IS Calibri14-Occidentale,
           ID IS 111,
           SELF-ACT,
           TITLE "Cerca (F8)",
           BITMAP-NUMBER BitmapNumZoom
           .

      * PUSH BUTTON
       05
           tool-modifica, 
           Push-Button, 
           COL 49,80, 
           LINE 1,09,
           LINES 1,35 ,
           SIZE 3,10 ,
           FONT IS Calibri12B-Occidentale,
           ID IS 112,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Push Button",
           VISIBLE 0,
           .

      * PUSH BUTTON
       05
           tool-cancella, 
           Push-Button, 
           COL 52,90, 
           LINE 1,13,
           LINES 1,35 ,
           SIZE 3,10 ,
           FONT IS Small-Font,
           ID IS 113,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Push Button",
           VISIBLE 0,
           .

      * PUSH BUTTON
       05
           tool-seleziona, 
           Push-Button, 
           COL 56,00, 
           LINE 1,13,
           LINES 1,35 ,
           SIZE 3,10 ,
           FONT IS Calibri14BU-Occidentale,
           ID IS 114,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Push Button",
           VISIBLE 0,
           .

      * FORM
       01 
           scr-attesa, 
           .

      * LABEL
       05
           scr-attesa-La-1, 
           Label, 
           COL 4,00, 
           LINE 1,46,
           LINES 1,85 ,
           SIZE 38,18 ,
           FONT IS Calibri24B-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Sto generando l'allenamento...",
           .

      * LABEL
       05
           lab-attesa, 
           Label, 
           COL 4,00, 
           LINE 3,50,
           LINES 1,08 ,
           SIZE 38,18 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-attesa-buf,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, link-codice.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:gwod, INIT:gwod, BeforeDeclarative>
       WODBOOK-ERROR SECTION.
           use after error procedure on WODBOOK.
           set RecLocked to false.
           evaluate status-WODBOOK
           when "35"
                display message "File [WODBOOK] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [WODBOOK] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[WODBOOK] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "99"
           when "93"
                set RecLocked to true
                set errori    to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ginqui-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:gwod, INIT:gwod, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Calibri12-Occidentale
           DESTROY Calibri14-Occidentale
           DESTROY Calibri10B-Occidentale
           DESTROY Calibri12B-Occidentale
           DESTROY Calibri14BU-Occidentale
           DESTROY Calibri24B-Occidentale
           DESTROY Calibri16B-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, genera-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, random-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, PIU-MENO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, UP-DOWN-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Calibri12-Occidentale
           INITIALIZE WFONT-DATA Calibri12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri12-Occidentale, WFONT-DATA
      * Calibri14-Occidentale
           INITIALIZE WFONT-DATA Calibri14-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri14-Occidentale, WFONT-DATA
      * Calibri10B-Occidentale
           INITIALIZE WFONT-DATA Calibri10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri10B-Occidentale, WFONT-DATA
      * Calibri12B-Occidentale
           INITIALIZE WFONT-DATA Calibri12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri12B-Occidentale, WFONT-DATA
      * Calibri14BU-Occidentale
           INITIALIZE WFONT-DATA Calibri14BU-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO TRUE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri14BU-Occidentale, WFONT-DATA
      * Calibri24B-Occidentale
           INITIALIZE WFONT-DATA Calibri24B-Occidentale
           MOVE 24 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri24B-Occidentale, WFONT-DATA
      * Calibri16B-Occidentale
           INITIALIZE WFONT-DATA Calibri16B-Occidentale
           MOVE 16 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri16B-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-genera
           COPY RESOURCE "genera.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "genera.bmp", 
                   GIVING genera-bmp.
      * pb-random
           COPY RESOURCE "random.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "random.bmp", 
                   GIVING random-bmp.
      * pb-aggiungi
           COPY RESOURCE "PIU-MENO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "PIU-MENO.BMP", 
                   GIVING PIU-MENO-BMP.
      * pb-su
           COPY RESOURCE "UP-DOWN.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "UP-DOWN.BMP", 
                   GIVING UP-DOWN-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-exercises
           PERFORM OPEN-groups
           PERFORM OPEN-macrogroups
           PERFORM OPEN-duration
      *    tmp-exe-effort OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-exe-effort
           PERFORM OPEN-wodbook
           PERFORM OPEN-wodmap
      *    tmp-wod-exe OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-wod-exe
      *    tmp-exe OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-exe
           PERFORM OPEN-intexe
      *    tmp-exe-dupl OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-exe-dupl
      *    zoom-exe-mcg OPEN MODE IS FALSE
      *    PERFORM OPEN-zoom-exe-mcg
      *    tmp-hit OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-hit
      *    tmp-grp-exe OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-grp-exe
      *    After Open
           .

       OPEN-exercises.
      * <TOTEM:EPT. INIT:gwod, FD:exercises, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT exercises
           IF NOT Valid-STATUS-exercises
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:exercises, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-groups.
      * <TOTEM:EPT. INIT:gwod, FD:groups, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT groups
           IF NOT Valid-STATUS-groups
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:groups, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-macrogroups.
      * <TOTEM:EPT. INIT:gwod, FD:macrogroups, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT macrogroups
           IF NOT Valid-STATUS-macrogroups
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:macrogroups, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-duration.
      * <TOTEM:EPT. INIT:gwod, FD:duration, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT duration
           IF NOT Valid-STATUS-duration
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:duration, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-exe-effort.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-effort, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-exe-effort
           IF NOT Valid-STATUS-tmp-exe-effort
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-effort, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-wodbook.
      * <TOTEM:EPT. INIT:gwod, FD:wodbook, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O wodbook
           IF STATUS-wodbook = "35"
              OPEN OUTPUT wodbook
                IF Valid-STATUS-wodbook
                   CLOSE wodbook
                   OPEN I-O wodbook
                END-IF
           END-IF
           IF NOT Valid-STATUS-wodbook
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:wodbook, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-wodmap.
      * <TOTEM:EPT. INIT:gwod, FD:wodmap, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT wodmap
           IF NOT Valid-STATUS-wodmap
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:wodmap, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-wod-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-wod-exe, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-wod-exe
           IF NOT Valid-STATUS-tmp-wod-exe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-wod-exe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-exe
           IF NOT Valid-STATUS-tmp-exe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-intexe.
      * <TOTEM:EPT. INIT:gwod, FD:intexe, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT intexe
           IF NOT Valid-STATUS-intexe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:intexe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-exe-dupl.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-dupl, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-exe-dupl
           IF NOT Valid-STATUS-tmp-exe-dupl
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-dupl, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-zoom-exe-mcg.
      * <TOTEM:EPT. INIT:gwod, FD:zoom-exe-mcg, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT zoom-exe-mcg
           IF NOT Valid-STATUS-zoom-exe-mcg
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:zoom-exe-mcg, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-hit.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-hit, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-hit
           IF NOT Valid-STATUS-tmp-hit
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-hit, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-grp-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-grp-exe, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-grp-exe
           IF NOT Valid-STATUS-tmp-grp-exe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gwod, FD:tmp-grp-exe, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-exercises
           PERFORM CLOSE-groups
           PERFORM CLOSE-macrogroups
           PERFORM CLOSE-duration
      *    tmp-exe-effort CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-exe-effort
           PERFORM CLOSE-wodbook
           PERFORM CLOSE-wodmap
      *    tmp-wod-exe CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-wod-exe
      *    tmp-exe CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-exe
           PERFORM CLOSE-intexe
      *    tmp-exe-dupl CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-exe-dupl
      *    zoom-exe-mcg CLOSE MODE IS FALSE
      *    PERFORM CLOSE-zoom-exe-mcg
      *    tmp-hit CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-hit
      *    tmp-grp-exe CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-grp-exe
      *    After Close
           .

       CLOSE-exercises.
      * <TOTEM:EPT. INIT:gwod, FD:exercises, BeforeClose>
      * <TOTEM:END>
           CLOSE exercises
           .

       CLOSE-groups.
      * <TOTEM:EPT. INIT:gwod, FD:groups, BeforeClose>
      * <TOTEM:END>
           CLOSE groups
           .

       CLOSE-macrogroups.
      * <TOTEM:EPT. INIT:gwod, FD:macrogroups, BeforeClose>
      * <TOTEM:END>
           CLOSE macrogroups
           .

       CLOSE-duration.
      * <TOTEM:EPT. INIT:gwod, FD:duration, BeforeClose>
      * <TOTEM:END>
           CLOSE duration
           .

       CLOSE-tmp-exe-effort.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-effort, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-wodbook.
      * <TOTEM:EPT. INIT:gwod, FD:wodbook, BeforeClose>
      * <TOTEM:END>
           CLOSE wodbook
           .

       CLOSE-wodmap.
      * <TOTEM:EPT. INIT:gwod, FD:wodmap, BeforeClose>
      * <TOTEM:END>
           CLOSE wodmap
           .

       CLOSE-tmp-wod-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-wod-exe, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-intexe.
      * <TOTEM:EPT. INIT:gwod, FD:intexe, BeforeClose>
      * <TOTEM:END>
           CLOSE intexe
           .

       CLOSE-tmp-exe-dupl.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-exe-dupl, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-zoom-exe-mcg.
      * <TOTEM:EPT. INIT:gwod, FD:zoom-exe-mcg, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-hit.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-hit, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-grp-exe.
      * <TOTEM:EPT. INIT:gwod, FD:tmp-grp-exe, BeforeClose>
      * <TOTEM:END>
           .

       exercises-exe-k-desc-MERGE-SPLITBUF.
           INITIALIZE exercises-exe-k-desc-SPLITBUF
           MOVE exe-desc(1:100) TO exercises-exe-k-desc-SPLITBUF(1:100)
           .

       exercises-exe-k-group-MERGE-SPLITBUF.
           INITIALIZE exercises-exe-k-group-SPLITBUF
           MOVE exe-grp-code(1:5) TO exercises-exe-k-group-SPLITBUF(1:5)
           MOVE exe-key(1:5) TO exercises-exe-k-group-SPLITBUF(6:5)
           .

       DataSet1-exercises-INITSTART.
           IF DataSet1-exercises-KEY-Asc
              MOVE Low-Value TO exe-key
           ELSE
              MOVE High-Value TO exe-key
           END-IF
           .

       DataSet1-exercises-INITEND.
           IF DataSet1-exercises-KEY-Asc
              MOVE High-Value TO exe-key
           ELSE
              MOVE Low-Value TO exe-key
           END-IF
           .

      * exercises
       DataSet1-exercises-START.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY >= exe-key
           ELSE
              START exercises KEY <= exe-key
           END-IF
           .

       DataSet1-exercises-START-NOTGREATER.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY <= exe-key
           ELSE
              START exercises KEY >= exe-key
           END-IF
           .

       DataSet1-exercises-START-GREATER.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY > exe-key
           ELSE
              START exercises KEY < exe-key
           END-IF
           .

       DataSet1-exercises-START-LESS.
           IF DataSet1-exercises-KEY-Asc
              START exercises KEY < exe-key
           ELSE
              START exercises KEY > exe-key
           END-IF
           .

       DataSet1-exercises-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-exercises-LOCK
              READ exercises WITH LOCK 
              KEY exe-key
           ELSE
              READ exercises WITH NO LOCK 
              KEY exe-key
           END-IF
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT 
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-exercises-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-exercises-KEY-Asc
              IF DataSet1-exercises-LOCK
                 READ exercises NEXT WITH LOCK
              ELSE
                 READ exercises NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-exercises-LOCK
                 READ exercises PREVIOUS WITH LOCK
              ELSE
                 READ exercises PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-exercises-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-exercises-KEY-Asc
              IF DataSet1-exercises-LOCK
                 READ exercises PREVIOUS WITH LOCK
              ELSE
                 READ exercises PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-exercises-LOCK
                 READ exercises NEXT WITH LOCK
              ELSE
                 READ exercises NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterDelete>
      * <TOTEM:END>
           .

       groups-grp-k-desc-MERGE-SPLITBUF.
           INITIALIZE groups-grp-k-desc-SPLITBUF
           MOVE grp-desc(1:100) TO groups-grp-k-desc-SPLITBUF(1:100)
           .

       groups-grp-k-mcg-MERGE-SPLITBUF.
           INITIALIZE groups-grp-k-mcg-SPLITBUF
           MOVE grp-mcg-code(1:5) TO groups-grp-k-mcg-SPLITBUF(1:5)
           MOVE grp-key(1:5) TO groups-grp-k-mcg-SPLITBUF(6:5)
           .

       DataSet1-groups-INITSTART.
           IF DataSet1-groups-KEY-Asc
              MOVE Low-Value TO grp-key
           ELSE
              MOVE High-Value TO grp-key
           END-IF
           .

       DataSet1-groups-INITEND.
           IF DataSet1-groups-KEY-Asc
              MOVE High-Value TO grp-key
           ELSE
              MOVE Low-Value TO grp-key
           END-IF
           .

      * groups
       DataSet1-groups-START.
           IF DataSet1-groups-KEY-Asc
              START groups KEY >= grp-key
           ELSE
              START groups KEY <= grp-key
           END-IF
           .

       DataSet1-groups-START-NOTGREATER.
           IF DataSet1-groups-KEY-Asc
              START groups KEY <= grp-key
           ELSE
              START groups KEY >= grp-key
           END-IF
           .

       DataSet1-groups-START-GREATER.
           IF DataSet1-groups-KEY-Asc
              START groups KEY > grp-key
           ELSE
              START groups KEY < grp-key
           END-IF
           .

       DataSet1-groups-START-LESS.
           IF DataSet1-groups-KEY-Asc
              START groups KEY < grp-key
           ELSE
              START groups KEY > grp-key
           END-IF
           .

       DataSet1-groups-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-groups-LOCK
              READ groups WITH LOCK 
              KEY grp-key
           ELSE
              READ groups WITH NO LOCK 
              KEY grp-key
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT 
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-groups-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-groups-KEY-Asc
              IF DataSet1-groups-LOCK
                 READ groups NEXT WITH LOCK
              ELSE
                 READ groups NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-groups-LOCK
                 READ groups PREVIOUS WITH LOCK
              ELSE
                 READ groups PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-groups-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-groups-KEY-Asc
              IF DataSet1-groups-LOCK
                 READ groups PREVIOUS WITH LOCK
              ELSE
                 READ groups PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-groups-LOCK
                 READ groups NEXT WITH LOCK
              ELSE
                 READ groups NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterDelete>
      * <TOTEM:END>
           .

       macrogroups-mcg-k-desc-MERGE-SPLITBUF.
           INITIALIZE macrogroups-mcg-k-desc-SPLITBUF
           MOVE mcg-desc(1:100) TO 
           macrogroups-mcg-k-desc-SPLITBUF(1:100)
           .

       DataSet1-macrogroups-INITSTART.
           IF DataSet1-macrogroups-KEY-Asc
              MOVE Low-Value TO mcg-key
           ELSE
              MOVE High-Value TO mcg-key
           END-IF
           .

       DataSet1-macrogroups-INITEND.
           IF DataSet1-macrogroups-KEY-Asc
              MOVE High-Value TO mcg-key
           ELSE
              MOVE Low-Value TO mcg-key
           END-IF
           .

      * macrogroups
       DataSet1-macrogroups-START.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY >= mcg-key
           ELSE
              START macrogroups KEY <= mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-NOTGREATER.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY <= mcg-key
           ELSE
              START macrogroups KEY >= mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-GREATER.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY > mcg-key
           ELSE
              START macrogroups KEY < mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-LESS.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY < mcg-key
           ELSE
              START macrogroups KEY > mcg-key
           END-IF
           .

       DataSet1-macrogroups-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-macrogroups-LOCK
              READ macrogroups WITH LOCK 
              KEY mcg-key
           ELSE
              READ macrogroups WITH NO LOCK 
              KEY mcg-key
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT 
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-macrogroups-KEY-Asc
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups NEXT WITH LOCK
              ELSE
                 READ macrogroups NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups PREVIOUS WITH LOCK
              ELSE
                 READ macrogroups PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-macrogroups-KEY-Asc
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups PREVIOUS WITH LOCK
              ELSE
                 READ macrogroups PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups NEXT WITH LOCK
              ELSE
                 READ macrogroups NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterDelete>
      * <TOTEM:END>
           .

       duration-dur-k-desc-MERGE-SPLITBUF.
           INITIALIZE duration-dur-k-desc-SPLITBUF
           MOVE dur-desc(1:100) TO duration-dur-k-desc-SPLITBUF(1:100)
           .

       duration-dur-k-exercises-MERGE-SPLITBUF.
           INITIALIZE duration-dur-k-exercises-SPLITBUF
           MOVE dur-exercises(1:2) TO 
           duration-dur-k-exercises-SPLITBUF(1:2)
           .

       DataSet1-duration-INITSTART.
           IF DataSet1-duration-KEY-Asc
              MOVE Low-Value TO dur-key
           ELSE
              MOVE High-Value TO dur-key
           END-IF
           .

       DataSet1-duration-INITEND.
           IF DataSet1-duration-KEY-Asc
              MOVE High-Value TO dur-key
           ELSE
              MOVE Low-Value TO dur-key
           END-IF
           .

      * duration
       DataSet1-duration-START.
           IF DataSet1-duration-KEY-Asc
              START duration KEY >= dur-key
           ELSE
              START duration KEY <= dur-key
           END-IF
           .

       DataSet1-duration-START-NOTGREATER.
           IF DataSet1-duration-KEY-Asc
              START duration KEY <= dur-key
           ELSE
              START duration KEY >= dur-key
           END-IF
           .

       DataSet1-duration-START-GREATER.
           IF DataSet1-duration-KEY-Asc
              START duration KEY > dur-key
           ELSE
              START duration KEY < dur-key
           END-IF
           .

       DataSet1-duration-START-LESS.
           IF DataSet1-duration-KEY-Asc
              START duration KEY < dur-key
           ELSE
              START duration KEY > dur-key
           END-IF
           .

       DataSet1-duration-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-duration-LOCK
              READ duration WITH LOCK 
              KEY dur-key
           ELSE
              READ duration WITH NO LOCK 
              KEY dur-key
           END-IF
           PERFORM duration-dur-k-desc-MERGE-SPLITBUF
           PERFORM duration-dur-k-exercises-MERGE-SPLITBUF
           MOVE STATUS-duration TO TOTEM-ERR-STAT 
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-duration-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-duration-KEY-Asc
              IF DataSet1-duration-LOCK
                 READ duration NEXT WITH LOCK
              ELSE
                 READ duration NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-duration-LOCK
                 READ duration PREVIOUS WITH LOCK
              ELSE
                 READ duration PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM duration-dur-k-desc-MERGE-SPLITBUF
           PERFORM duration-dur-k-exercises-MERGE-SPLITBUF
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-duration-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-duration-KEY-Asc
              IF DataSet1-duration-LOCK
                 READ duration PREVIOUS WITH LOCK
              ELSE
                 READ duration PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-duration-LOCK
                 READ duration NEXT WITH LOCK
              ELSE
                 READ duration NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM duration-dur-k-desc-MERGE-SPLITBUF
           PERFORM duration-dur-k-exercises-MERGE-SPLITBUF
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-duration-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-duration-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-duration-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:duration, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-duration TO TOTEM-ERR-STAT
           MOVE "duration" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:duration, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-INITSTART.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              MOVE Low-Value TO tee-key
           ELSE
              MOVE High-Value TO tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-INITEND.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              MOVE High-Value TO tee-key
           ELSE
              MOVE Low-Value TO tee-key
           END-IF
           .

      * tmp-exe-effort
       DataSet1-tmp-exe-effort-START.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY >= tee-key
           ELSE
              START tmp-exe-effort KEY <= tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-START-NOTGREATER.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY <= tee-key
           ELSE
              START tmp-exe-effort KEY >= tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-START-GREATER.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY > tee-key
           ELSE
              START tmp-exe-effort KEY < tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-START-LESS.
           IF DataSet1-tmp-exe-effort-KEY-Asc
              START tmp-exe-effort KEY < tee-key
           ELSE
              START tmp-exe-effort KEY > tee-key
           END-IF
           .

       DataSet1-tmp-exe-effort-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeWrite>
      * <TOTEM:END>
           WRITE tee-rec OF tmp-exe-effort.
           MOVE STATUS-tmp-exe-effort TO TOTEM-ERR-STAT
           MOVE "tmp-exe-effort" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-effort TO TOTEM-ERR-STAT
           MOVE "tmp-exe-effort" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-effort-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-effort TO TOTEM-ERR-STAT
           MOVE "tmp-exe-effort" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-effort, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-wodbook-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 MOVE Low-Value TO wod-key
              ELSE
                 MOVE High-Value TO wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 MOVE High-Value TO wod-key
              ELSE
                 MOVE Low-Value TO wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           .

      * wodbook
       DataSet1-wodbook-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY >= wod-key
              ELSE
                 START wodbook KEY <= wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY <= wod-key
              ELSE
                 START wodbook KEY >= wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY > wod-key
              ELSE
                 START wodbook KEY < wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 START wodbook KEY < wod-key
              ELSE
                 START wodbook KEY > wod-key
              END-IF
           END-EVALUATE
           .

       DataSet1-wodbook-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-LOCK
                 READ wodbook WITH LOCK 
                 KEY wod-key
              ELSE
                 READ wodbook WITH NO LOCK 
                 KEY wod-key
              END-IF
           END-EVALUATE
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT 
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 IF DataSet1-wodbook-LOCK
                    READ wodbook NEXT WITH LOCK
                 ELSE
                    READ wodbook NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-wodbook-LOCK
                    READ wodbook PREVIOUS WITH LOCK
                 ELSE
                    READ wodbook PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-wodbook-KEY1-Asc
                 IF DataSet1-wodbook-LOCK
                    READ wodbook PREVIOUS WITH LOCK
                 ELSE
                    READ wodbook PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-wodbook-LOCK
                    READ wodbook NEXT WITH LOCK
                 ELSE
                    READ wodbook NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeWrite>
      * <TOTEM:END>
           WRITE wod-rec OF wodbook.
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeRewrite>
      * <TOTEM:END>
           REWRITE wod-rec OF wodbook.
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-wodbook-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, BeforeDelete>
      * <TOTEM:END>
           DELETE wodbook.
           MOVE STATUS-wodbook TO TOTEM-ERR-STAT
           MOVE "wodbook" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodbook, AfterDelete>
      * <TOTEM:END>
           .

       wodmap-wom-k-desc-MERGE-SPLITBUF.
           INITIALIZE wodmap-wom-k-desc-SPLITBUF
           MOVE wom-desc(1:100) TO wodmap-wom-k-desc-SPLITBUF(1:100)
           .

       DataSet1-wodmap-INITSTART.
           IF DataSet1-wodmap-KEY-Asc
              MOVE Low-Value TO wom-key
           ELSE
              MOVE High-Value TO wom-key
           END-IF
           .

       DataSet1-wodmap-INITEND.
           IF DataSet1-wodmap-KEY-Asc
              MOVE High-Value TO wom-key
           ELSE
              MOVE Low-Value TO wom-key
           END-IF
           .

      * wodmap
       DataSet1-wodmap-START.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY >= wom-key
           ELSE
              START wodmap KEY <= wom-key
           END-IF
           .

       DataSet1-wodmap-START-NOTGREATER.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY <= wom-key
           ELSE
              START wodmap KEY >= wom-key
           END-IF
           .

       DataSet1-wodmap-START-GREATER.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY > wom-key
           ELSE
              START wodmap KEY < wom-key
           END-IF
           .

       DataSet1-wodmap-START-LESS.
           IF DataSet1-wodmap-KEY-Asc
              START wodmap KEY < wom-key
           ELSE
              START wodmap KEY > wom-key
           END-IF
           .

       DataSet1-wodmap-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-wodmap-LOCK
              READ wodmap WITH LOCK 
              KEY wom-key
           ELSE
              READ wodmap WITH NO LOCK 
              KEY wom-key
           END-IF
           PERFORM wodmap-wom-k-desc-MERGE-SPLITBUF
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT 
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-wodmap-KEY-Asc
              IF DataSet1-wodmap-LOCK
                 READ wodmap NEXT WITH LOCK
              ELSE
                 READ wodmap NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-wodmap-LOCK
                 READ wodmap PREVIOUS WITH LOCK
              ELSE
                 READ wodmap PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM wodmap-wom-k-desc-MERGE-SPLITBUF
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-wodmap-KEY-Asc
              IF DataSet1-wodmap-LOCK
                 READ wodmap PREVIOUS WITH LOCK
              ELSE
                 READ wodmap PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-wodmap-LOCK
                 READ wodmap NEXT WITH LOCK
              ELSE
                 READ wodmap NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM wodmap-wom-k-desc-MERGE-SPLITBUF
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-wodmap-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-wodmap TO TOTEM-ERR-STAT
           MOVE "wodmap" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:wodmap, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-INITSTART.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              MOVE Low-Value TO twe-key
           ELSE
              MOVE High-Value TO twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-INITEND.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              MOVE High-Value TO twe-key
           ELSE
              MOVE Low-Value TO twe-key
           END-IF
           .

      * tmp-wod-exe
       DataSet1-tmp-wod-exe-START.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY >= twe-key
           ELSE
              START tmp-wod-exe KEY <= twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-START-NOTGREATER.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY <= twe-key
           ELSE
              START tmp-wod-exe KEY >= twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-START-GREATER.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY > twe-key
           ELSE
              START tmp-wod-exe KEY < twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-START-LESS.
           IF DataSet1-tmp-wod-exe-KEY-Asc
              START tmp-wod-exe KEY < twe-key
           ELSE
              START tmp-wod-exe KEY > twe-key
           END-IF
           .

       DataSet1-tmp-wod-exe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeWrite>
      * <TOTEM:END>
           WRITE twe-rec OF tmp-wod-exe.
           MOVE STATUS-tmp-wod-exe TO TOTEM-ERR-STAT
           MOVE "tmp-wod-exe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-wod-exe TO TOTEM-ERR-STAT
           MOVE "tmp-wod-exe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-wod-exe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-wod-exe TO TOTEM-ERR-STAT
           MOVE "tmp-wod-exe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-wod-exe, AfterDelete>
      * <TOTEM:END>
           .

       tmp-exe-tex-k-dupl-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-tex-k-dupl-SPLITBUF
           MOVE tex-day(1:1) TO tmp-exe-tex-k-dupl-SPLITBUF(1:1)
           MOVE tex-nome-dupl(1:100) TO 
           tmp-exe-tex-k-dupl-SPLITBUF(2:100)
           .

       tmp-exe-tex-k-mcg-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-tex-k-mcg-SPLITBUF
           MOVE tex-mcg-code(1:5) TO tmp-exe-tex-k-mcg-SPLITBUF(1:5)
           MOVE tex-key(1:4) TO tmp-exe-tex-k-mcg-SPLITBUF(6:4)
           .

       DataSet1-tmp-exe-INITSTART.
           IF DataSet1-tmp-exe-KEY-Asc
              MOVE Low-Value TO tex-key
           ELSE
              MOVE High-Value TO tex-key
           END-IF
           .

       DataSet1-tmp-exe-INITEND.
           IF DataSet1-tmp-exe-KEY-Asc
              MOVE High-Value TO tex-key
           ELSE
              MOVE Low-Value TO tex-key
           END-IF
           .

      * tmp-exe
       DataSet1-tmp-exe-START.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY >= tex-key
           ELSE
              START tmp-exe KEY <= tex-key
           END-IF
           .

       DataSet1-tmp-exe-START-NOTGREATER.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY <= tex-key
           ELSE
              START tmp-exe KEY >= tex-key
           END-IF
           .

       DataSet1-tmp-exe-START-GREATER.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY > tex-key
           ELSE
              START tmp-exe KEY < tex-key
           END-IF
           .

       DataSet1-tmp-exe-START-LESS.
           IF DataSet1-tmp-exe-KEY-Asc
              START tmp-exe KEY < tex-key
           ELSE
              START tmp-exe KEY > tex-key
           END-IF
           .

       DataSet1-tmp-exe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeWrite>
      * <TOTEM:END>
           WRITE tex-rec OF tmp-exe.
           MOVE STATUS-tmp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-exe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-exe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-exe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe, AfterDelete>
      * <TOTEM:END>
           .

       intexe-int-k-desc-MERGE-SPLITBUF.
           INITIALIZE intexe-int-k-desc-SPLITBUF
           MOVE int-desc(1:100) TO intexe-int-k-desc-SPLITBUF(1:100)
           .

       intexe-int-k-effort-MERGE-SPLITBUF.
           INITIALIZE intexe-int-k-effort-SPLITBUF
           MOVE int-effort(1:2) TO intexe-int-k-effort-SPLITBUF(1:2)
           .

       DataSet1-intexe-INITSTART.
           IF DataSet1-intexe-KEY-Asc
              MOVE Low-Value TO int-key
           ELSE
              MOVE High-Value TO int-key
           END-IF
           .

       DataSet1-intexe-INITEND.
           IF DataSet1-intexe-KEY-Asc
              MOVE High-Value TO int-key
           ELSE
              MOVE Low-Value TO int-key
           END-IF
           .

      * intexe
       DataSet1-intexe-START.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY >= int-key
           ELSE
              START intexe KEY <= int-key
           END-IF
           .

       DataSet1-intexe-START-NOTGREATER.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY <= int-key
           ELSE
              START intexe KEY >= int-key
           END-IF
           .

       DataSet1-intexe-START-GREATER.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY > int-key
           ELSE
              START intexe KEY < int-key
           END-IF
           .

       DataSet1-intexe-START-LESS.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY < int-key
           ELSE
              START intexe KEY > int-key
           END-IF
           .

       DataSet1-intexe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-intexe-LOCK
              READ intexe WITH LOCK 
              KEY int-key
           ELSE
              READ intexe WITH NO LOCK 
              KEY int-key
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT 
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-intexe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-intexe-KEY-Asc
              IF DataSet1-intexe-LOCK
                 READ intexe NEXT WITH LOCK
              ELSE
                 READ intexe NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-intexe-LOCK
                 READ intexe PREVIOUS WITH LOCK
              ELSE
                 READ intexe PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-intexe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-intexe-KEY-Asc
              IF DataSet1-intexe-LOCK
                 READ intexe PREVIOUS WITH LOCK
              ELSE
                 READ intexe PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-intexe-LOCK
                 READ intexe NEXT WITH LOCK
              ELSE
                 READ intexe NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterDelete>
      * <TOTEM:END>
           .

       tmp-exe-dupl-ted-k-num-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-dupl-ted-k-num-SPLITBUF
           MOVE ted-num(1:3) TO tmp-exe-dupl-ted-k-num-SPLITBUF(1:3)
           MOVE ted-key(1:102) TO tmp-exe-dupl-ted-k-num-SPLITBUF(4:102)
           .

       DataSet1-tmp-exe-dupl-INITSTART.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              MOVE Low-Value TO ted-key
           ELSE
              MOVE High-Value TO ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-INITEND.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              MOVE High-Value TO ted-key
           ELSE
              MOVE Low-Value TO ted-key
           END-IF
           .

      * tmp-exe-dupl
       DataSet1-tmp-exe-dupl-START.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY >= ted-key
           ELSE
              START tmp-exe-dupl KEY <= ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-START-NOTGREATER.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY <= ted-key
           ELSE
              START tmp-exe-dupl KEY >= ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-START-GREATER.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY > ted-key
           ELSE
              START tmp-exe-dupl KEY < ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-START-LESS.
           IF DataSet1-tmp-exe-dupl-KEY-Asc
              START tmp-exe-dupl KEY < ted-key
           ELSE
              START tmp-exe-dupl KEY > ted-key
           END-IF
           .

       DataSet1-tmp-exe-dupl-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeWrite>
      * <TOTEM:END>
           WRITE ted-rec OF tmp-exe-dupl.
           MOVE STATUS-tmp-exe-dupl TO TOTEM-ERR-STAT
           MOVE "tmp-exe-dupl" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-dupl TO TOTEM-ERR-STAT
           MOVE "tmp-exe-dupl" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-dupl-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-dupl TO TOTEM-ERR-STAT
           MOVE "tmp-exe-dupl" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-dupl, AfterDelete>
      * <TOTEM:END>
           .

       zoom-exe-mcg-zem-k-int-MERGE-SPLITBUF.
           INITIALIZE zoom-exe-mcg-zem-k-int-SPLITBUF
           MOVE zem-grp-desc(1:100) TO 
           zoom-exe-mcg-zem-k-int-SPLITBUF(1:100)
           MOVE zem-int-effort(1:2) TO 
           zoom-exe-mcg-zem-k-int-SPLITBUF(101:2)
           MOVE zem-exe-desc(1:100) TO 
           zoom-exe-mcg-zem-k-int-SPLITBUF(103:100)
           .

       DataSet1-zoom-exe-mcg-INITSTART.
           IF DataSet1-zoom-exe-mcg-KEY-Asc
              MOVE Low-Value TO zem-key
           ELSE
              MOVE High-Value TO zem-key
           END-IF
           .

       DataSet1-zoom-exe-mcg-INITEND.
           IF DataSet1-zoom-exe-mcg-KEY-Asc
              MOVE High-Value TO zem-key
           ELSE
              MOVE Low-Value TO zem-key
           END-IF
           .

      * zoom-exe-mcg
       DataSet1-zoom-exe-mcg-START.
           IF DataSet1-zoom-exe-mcg-KEY-Asc
              START zoom-exe-mcg KEY >= zem-key
           ELSE
              START zoom-exe-mcg KEY <= zem-key
           END-IF
           .

       DataSet1-zoom-exe-mcg-START-NOTGREATER.
           IF DataSet1-zoom-exe-mcg-KEY-Asc
              START zoom-exe-mcg KEY <= zem-key
           ELSE
              START zoom-exe-mcg KEY >= zem-key
           END-IF
           .

       DataSet1-zoom-exe-mcg-START-GREATER.
           IF DataSet1-zoom-exe-mcg-KEY-Asc
              START zoom-exe-mcg KEY > zem-key
           ELSE
              START zoom-exe-mcg KEY < zem-key
           END-IF
           .

       DataSet1-zoom-exe-mcg-START-LESS.
           IF DataSet1-zoom-exe-mcg-KEY-Asc
              START zoom-exe-mcg KEY < zem-key
           ELSE
              START zoom-exe-mcg KEY > zem-key
           END-IF
           .

       DataSet1-zoom-exe-mcg-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-zoom-exe-mcg-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-zoom-exe-mcg-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-zoom-exe-mcg-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeWrite>
      * <TOTEM:END>
           WRITE zem-rec OF zoom-exe-mcg.
           MOVE STATUS-zoom-exe-mcg TO TOTEM-ERR-STAT
           MOVE "zoom-exe-mcg" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-zoom-exe-mcg-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-zoom-exe-mcg TO TOTEM-ERR-STAT
           MOVE "zoom-exe-mcg" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-zoom-exe-mcg-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-zoom-exe-mcg TO TOTEM-ERR-STAT
           MOVE "zoom-exe-mcg" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-exe-mcg, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-hit-INITSTART.
           IF DataSet1-tmp-hit-KEY-Asc
              MOVE Low-Value TO th-key
           ELSE
              MOVE High-Value TO th-key
           END-IF
           .

       DataSet1-tmp-hit-INITEND.
           IF DataSet1-tmp-hit-KEY-Asc
              MOVE High-Value TO th-key
           ELSE
              MOVE Low-Value TO th-key
           END-IF
           .

      * tmp-hit
       DataSet1-tmp-hit-START.
           IF DataSet1-tmp-hit-KEY-Asc
              START tmp-hit KEY >= th-key
           ELSE
              START tmp-hit KEY <= th-key
           END-IF
           .

       DataSet1-tmp-hit-START-NOTGREATER.
           IF DataSet1-tmp-hit-KEY-Asc
              START tmp-hit KEY <= th-key
           ELSE
              START tmp-hit KEY >= th-key
           END-IF
           .

       DataSet1-tmp-hit-START-GREATER.
           IF DataSet1-tmp-hit-KEY-Asc
              START tmp-hit KEY > th-key
           ELSE
              START tmp-hit KEY < th-key
           END-IF
           .

       DataSet1-tmp-hit-START-LESS.
           IF DataSet1-tmp-hit-KEY-Asc
              START tmp-hit KEY < th-key
           ELSE
              START tmp-hit KEY > th-key
           END-IF
           .

       DataSet1-tmp-hit-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-hit-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-hit-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-hit-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeWrite>
      * <TOTEM:END>
           WRITE th-rec OF tmp-hit.
           MOVE STATUS-tmp-hit TO TOTEM-ERR-STAT
           MOVE "tmp-hit" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-hit-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-hit TO TOTEM-ERR-STAT
           MOVE "tmp-hit" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-hit-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-hit TO TOTEM-ERR-STAT
           MOVE "tmp-hit" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-hit, AfterDelete>
      * <TOTEM:END>
           .

       tmp-grp-exe-tge-k-prg-MERGE-SPLITBUF.
           INITIALIZE tmp-grp-exe-tge-k-prg-SPLITBUF
           MOVE tge-prg OF tge-data OF tge-rec(1:3) TO 
           tmp-grp-exe-tge-k-prg-SPLITBUF(1:3)
           .

       DataSet1-tmp-grp-exe-INITSTART.
           IF DataSet1-tmp-grp-exe-KEY-Asc
              MOVE Low-Value TO tge-key
           ELSE
              MOVE High-Value TO tge-key
           END-IF
           .

       DataSet1-tmp-grp-exe-INITEND.
           IF DataSet1-tmp-grp-exe-KEY-Asc
              MOVE High-Value TO tge-key
           ELSE
              MOVE Low-Value TO tge-key
           END-IF
           .

      * tmp-grp-exe
       DataSet1-tmp-grp-exe-START.
           IF DataSet1-tmp-grp-exe-KEY-Asc
              START tmp-grp-exe KEY >= tge-key
           ELSE
              START tmp-grp-exe KEY <= tge-key
           END-IF
           .

       DataSet1-tmp-grp-exe-START-NOTGREATER.
           IF DataSet1-tmp-grp-exe-KEY-Asc
              START tmp-grp-exe KEY <= tge-key
           ELSE
              START tmp-grp-exe KEY >= tge-key
           END-IF
           .

       DataSet1-tmp-grp-exe-START-GREATER.
           IF DataSet1-tmp-grp-exe-KEY-Asc
              START tmp-grp-exe KEY > tge-key
           ELSE
              START tmp-grp-exe KEY < tge-key
           END-IF
           .

       DataSet1-tmp-grp-exe-START-LESS.
           IF DataSet1-tmp-grp-exe-KEY-Asc
              START tmp-grp-exe KEY < tge-key
           ELSE
              START tmp-grp-exe KEY > tge-key
           END-IF
           .

       DataSet1-tmp-grp-exe-START-EQUAL.
           START tmp-grp-exe KEY = tge-key
           .

       DataSet1-tmp-grp-exe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-grp-exe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-grp-exe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-grp-exe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeWrite>
      * <TOTEM:END>
           WRITE tge-rec OF tmp-grp-exe.
           MOVE STATUS-tmp-grp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-grp-exe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-grp-exe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-grp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-grp-exe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-grp-exe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-grp-exe TO TOTEM-ERR-STAT
           MOVE "tmp-grp-exe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-grp-exe, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE exe-rec OF exercises
           INITIALIZE grp-rec OF groups
           INITIALIZE mcg-rec OF macrogroups
           INITIALIZE dur-rec OF duration
           INITIALIZE tee-rec OF tmp-exe-effort
           INITIALIZE wod-rec OF wodbook
           INITIALIZE wom-rec OF wodmap
           INITIALIZE twe-rec OF tmp-wod-exe
           INITIALIZE tex-rec OF tmp-exe
           INITIALIZE int-rec OF intexe
           INITIALIZE ted-rec OF tmp-exe-dupl
           INITIALIZE zem-rec OF zoom-exe-mcg
           INITIALIZE th-rec OF tmp-hit
           INITIALIZE tge-rec OF tmp-grp-exe
           .


      * COMBO-BOX
       cb-mg1-Content.
           .

      * COMBO-BOX
       cb-mg2-Content.
           .

      * COMBO-BOX
       cb-mg3-Content.
           .

      * COMBO-BOX
       cb-mg4-Content.
           .

      * COMBO-BOX
       cb-mg5-Content.
           .

      * COMBO-BOX
       cb-mg6-Content.
           .

      * COMBO-BOX
       cb-mg7-Content.
           .

      * COMBO-BOX
       cb-mul-Content.
           .

      * COMBO-BOX
       cb-int-Content.
           .

      * COMBO-BOX
       cb-dur-Content.
           .

      * COMBO-BOX
       cb-gio-Content.
           .

      * COMBO-BOX
       cb-wod-Content.
           .

      * GRID
       gd1-Content.
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 1,
                CELL-DATA = "D",
      * CELLS' SETTING
              MODIFY gd1, X = 2, Y = 1,
                CELL-DATA = "#",
      * CELLS' SETTING
              MODIFY gd1, X = 3, Y = 1,
                CELL-DATA = "Gruppo",
      * CELLS' SETTING
              MODIFY gd1, X = 4, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd1, X = 5, Y = 1,
                CELL-DATA = "Ex",
      * CELLS' SETTING
              MODIFY gd1, X = 6, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd1, X = 7, Y = 1,
                CELL-DATA = "Series",
      * CELLS' SETTING
              MODIFY gd1, X = 8, Y = 1,
                CELL-DATA = "Reps",
           .

      * GRID
       gd-schema-Content.
      * CELLS' SETTING
              MODIFY gd-schema, X = 1, Y = 1,
                CELL-DATA = "Day",
      * CELLS' SETTING
              MODIFY gd-schema, X = 2, Y = 1,
                CELL-DATA = "#1",
      * CELLS' SETTING
              MODIFY gd-schema, X = 3, Y = 1,
                CELL-DATA = "#2",
      * CELLS' SETTING
              MODIFY gd-schema, X = 4, Y = 1,
                CELL-DATA = "#3",
      * CELLS' SETTING
              MODIFY gd-schema, X = 5, Y = 1,
                CELL-DATA = "#4",
      * CELLS' SETTING
              MODIFY gd-schema, X = 6, Y = 1,
                CELL-DATA = "#5",
      * CELLS' SETTING
              MODIFY gd-schema, X = 7, Y = 1,
                CELL-DATA = "#6",
      * CELLS' SETTING
              MODIFY gd-schema, X = 8, Y = 1,
                CELL-DATA = "#7",
      * CELLS' SETTING
              MODIFY gd-schema, X = 9, Y = 1,
                CELL-DATA = "#8",
      * CELLS' SETTING
              MODIFY gd-schema, X = 10, Y = 1,
                CELL-DATA = "#9",
      * CELLS' SETTING
              MODIFY gd-schema, X = 11, Y = 1,
                CELL-DATA = "#10",
      * CELLS' SETTING
              MODIFY gd-schema, X = 12, Y = 1,
                CELL-DATA = "Durata stimata",
           .

      * FD's Initialize Paragraph
       DataSet1-exercises-INITREC.
           INITIALIZE exe-rec OF exercises
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-groups-INITREC.
           INITIALIZE grp-rec OF groups
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-macrogroups-INITREC.
           INITIALIZE mcg-rec OF macrogroups
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-duration-INITREC.
           INITIALIZE dur-rec OF duration
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-exe-effort-INITREC.
           INITIALIZE tee-rec OF tmp-exe-effort
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-wodbook-INITREC.
           INITIALIZE wod-rec OF wodbook
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-wodmap-INITREC.
           INITIALIZE wom-rec OF wodmap
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-wod-exe-INITREC.
           INITIALIZE twe-rec OF tmp-wod-exe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-exe-INITREC.
           INITIALIZE tex-rec OF tmp-exe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-intexe-INITREC.
           INITIALIZE int-rec OF intexe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-exe-dupl-INITREC.
           INITIALIZE ted-rec OF tmp-exe-dupl
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-zoom-exe-mcg-INITREC.
           INITIALIZE zem-rec OF zoom-exe-mcg
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-hit-INITREC.
           INITIALIZE th-rec OF tmp-hit
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-grp-exe-INITREC.
           INITIALIZE tge-rec OF tmp-grp-exe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form1-Buf-To-Fld
           END-EVALUATE
           .

       Form1-DISPLAY-STATUS-MSG.
            MODIFY Form1-St-1-Handle PANEL-INDEX = 1
                PANEL-TEXT = TOTEM-HINT-TEXT
           .

       Form1-CLEAR-STATUS-MSG.
           MOVE SPACES TO TOTEM-MSG-1, TOTEM-MSG-2, TOTEM-MSG-3, 
           TOTEM-MSG-TEXT
           PERFORM Form1-DISPLAY-STATUS-MSG
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              SCREEN LINE 2,
              SCREEN COLUMN 2,
              LINES 38,39,
              SIZE 149,50,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 131329,
              CONTROL FONT Calibri14-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 3,30,   
              CONTROL FONT IS Calibri14-Occidentale
              HANDLE IN Form1-Tb-1-Handle
           DISPLAY Form1-Tb-1 UPON Form1-Tb-1-Handle

      * Status-bar
           DISPLAY STATUS-BAR
              FONT IS Calibri14-Occidentale,
              GRIP,
              PANEL-WIDTHS (65, 28, 999),
              PANEL-STYLE  (1, 1, 1),
              PANEL-TEXT   (SPACE, SPACE, SPACE),
              HANDLE IS Form1-St-1-Handle
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd1, DISPLAY-COLUMNS (1, 6, 9, 16, 36, 43, 73, 78)
              MODIFY gd-schema, DISPLAY-COLUMNS (1, 6, 13, 20, 27, 34, 
           41, 48, 55, 62, 69, 76)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           perform INIT.
           perform ABILITA-TOOLBAR.
           perform ABILITAZIONI.
           perform STATUS-BAR-MSG.
           display form1.
                                                  
           modify cb-mg1, item-to-add = "Nessuno".
           modify cb-mg2, item-to-add = "Nessuno".
           modify cb-mg3, item-to-add = "Nessuno".
           modify cb-mg4, item-to-add = "Nessuno". 
           modify cb-mg5, item-to-add = "Nessuno".
           modify cb-mg6, item-to-add = "Nessuno".
           modify cb-mg7, item-to-add = "Nessuno".

           modify cb-mul, item-to-add = "No".
           modify cb-mul, item-to-add = "Si".     
                                                   
           modify cb-int, item-to-add = "Tutto".
           modify cb-dur, item-to-add = "Tutto".
           modify cb-wod, item-to-add = "Nessuno".
                                           
           modify cb-gio, item-to-add = "Tutto".
           modify cb-gio, item-to-add = "1".
           modify cb-gio, item-to-add = "2".
           modify cb-gio, item-to-add = "3".
           modify cb-gio, item-to-add = "4".
           modify cb-gio, item-to-add = "5".

           move low-value to mcg-desc.
           start macrogroups key >= mcg-k-desc
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read macrogroups next at end exit perform end-read
                                                   
                    modify cb-mg1, item-to-add = mcg-desc
                    modify cb-mg2, item-to-add = mcg-desc
                    modify cb-mg3, item-to-add = mcg-desc
                    modify cb-mg4, item-to-add = mcg-desc
                    modify cb-mg5, item-to-add = mcg-desc
                    modify cb-mg6, item-to-add = mcg-desc
                    modify cb-mg7, item-to-add = mcg-desc
                                      
                    if mcg-isPrimary = 1             
                       add 1         to tot-mcg-p
                       move mcg-desc to el-mcg-desc-p(tot-mcg-p)
                    else                           
                       add 1         to tot-mcg
                       move mcg-desc to el-mcg-desc(tot-mcg)
                    end-if
                 end-perform
           end-start. 
           move low-value to dur-rec.
           start duration key >= dur-k-desc
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read duration next at end exit perform end-read
                    modify cb-dur, item-to-add = dur-desc
                 end-perform
           end-start.               

           modify cb-int, item-to-add "Light wod effort".
           modify cb-int, item-to-add "Medium wod effort".
           modify cb-int, item-to-add "Heavy wod effort".

           perform DATI-DEFAULT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
           evaluate true
           when ApriLookup
                set ApriLookup to false            
                perform X-Y
                inquire gd1(riga, 78-col-exe-code), 
                        cell-data in exe-code
                inquire gd1(riga, 78-col-grp-code), 
                        cell-data in grp-code
                perform LOOKUP-EXE
           end-evaluate

      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1005
                 PERFORM pb-mcg1-LinkTo
              WHEN Key-Status = 1006
                 PERFORM pb-mcg2-LinkTo
              WHEN Key-Status = 1011
                 PERFORM pb-mcg3-LinkTo
              WHEN Key-Status = 1010
                 PERFORM pb-mcg4-LinkTo
              WHEN Key-Status = 1009
                 PERFORM pb-mcg5-LinkTo
              WHEN Key-Status = 1008
                 PERFORM pb-mcg6-LinkTo
              WHEN Key-Status = 1007
                 PERFORM pb-mcg7-LinkTo
              WHEN Key-Status = 1000
                 PERFORM pb-genera-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-random-LinkTo
              WHEN Key-Status = 1012
                 PERFORM pb-aggiungi-LinkTo
              WHEN Key-Status = 1004
                 PERFORM pb-elimina-LinkTo
              WHEN Key-Status = 1001
                 PERFORM pb-su-LinkTo
              WHEN Key-Status = 1003
                 PERFORM pb-giu-LinkTo
              WHEN Key-Status = 2
                 PERFORM NUOVO-LinkTo
              WHEN Key-Status = 3
                 PERFORM TOOL-SALVA-LinkTo
              WHEN Key-Status = 6
                 PERFORM ANTEPRIMA-LinkTo
              WHEN Key-Status = 7
                 PERFORM STAMPA-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * COMBO-BOX
           PERFORM cb-mg1-Content
      * COMBO-BOX
           PERFORM cb-mg2-Content
      * COMBO-BOX
           PERFORM cb-mg3-Content
      * COMBO-BOX
           PERFORM cb-mg4-Content
      * COMBO-BOX
           PERFORM cb-mg5-Content
      * COMBO-BOX
           PERFORM cb-mg6-Content
      * COMBO-BOX
           PERFORM cb-mg7-Content
      * COMBO-BOX
           PERFORM cb-mul-Content
      * COMBO-BOX
           PERFORM cb-int-Content
      * COMBO-BOX
           PERFORM cb-dur-Content
      * COMBO-BOX
           PERFORM cb-gio-Content
      * COMBO-BOX
           PERFORM cb-wod-Content
      * GRID
           PERFORM gd1-Content
      * GRID
           PERFORM gd-schema-Content
           .

       Form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-wodbook-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Update-Key.
           MOVE wod-rec OF wodbook TO
                     Form1-MULKEY-TMPBUF
           PERFORM Form1-CLEAR
           PERFORM Form1-INIT-DATA
           MOVE Form1-MULKEY-TMPBUF TO
                     wod-rec OF wodbook
           PERFORM DataSet1-wodbook-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
           .

       Form1-DUPLICATE-MOVEKEY.
           .

       Form1-First.
           PERFORM Form1-DUMMY-FIRST
           PERFORM DataSet1-wodbook-INITSTART
           PERFORM DataSet1-wodbook-START
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Next
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFirst>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Previous.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-wodbook-START-LESS
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Prev
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-PREVIOUS
           PERFORM Form1-IUD-Display
           .

       Form1-Next.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-wodbook-START-GREATER
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Next
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterNext>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-NEXT
           PERFORM Form1-IUD-Display
           .
      
       Form1-Last.
           PERFORM Form1-DUMMY-LAST
           PERFORM DataSet1-wodbook-INITEND
           PERFORM DataSet1-wodbook-START-NOTGREATER
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-wodbook-Read-Prev
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterLast>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Curr.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-wodbook-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCurrent>
      * <TOTEM:END>
           .

       Form1-IUD-Display.
           IF Valid-STATUS-wodbook
              PERFORM Form1-ALLGRID-RESET
              PERFORM Form1-Fld-To-Buf
              PERFORM Form1-NAVI-FOR-MASTERGRID
              PERFORM Form1-DISPLAY
           ELSE
              IF Form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form1-Extended-File-Status
              END-IF
           END-IF
           .

       Form1-Add.
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-ADD
           PERFORM DataSet1-wodbook-INITREC
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-wodbook-Rec-Write
           IF Valid-STATUS-wodbook
              PERFORM Form1-RESUMMARY-INS
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAdd>
      * <TOTEM:END>
           .
     
       Form1-Update.
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-wodbook-START              
           IF NOT Valid-STATUS-wodbook
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-wodbook-Read
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-UPDATE
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-wodbook-Rec-Rewrite
           IF Valid-STATUS-wodbook
              PERFORM Form1-RESUMMARY-DEL
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterUpdate>
      * <TOTEM:END>
           .

       Form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form1-DUMMY-DELETE
      * delete
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-wodbook-Rec-Delete
           IF Valid-STATUS-wodbook
              PERFORM Form1-CLEAR
              PERFORM Form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-wodbook
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDelete>
      * <TOTEM:END>
           PERFORM Form1-ERR-CHECKING
           .

       Form1-NAVI-FOR-MASTERGRID.
           .

       Form1-ERR-CHECKING.
           IF Valid-STATUS-wodbook
              PERFORM Form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form1-Extended-File-Status
           END-IF
           .

       Form1-RESUMMARY-INS.
           .

       Form1-RESUMMARY-DEL.
           .


       Form1-DUMMY-FIRST.
           .

       Form1-DUMMY-PREVIOUS.
           .

       Form1-DUMMY-NEXT.
           .

       Form1-DUMMY-LAST.
           .

       Form1-DUMMY-CURR.
           .

       Form1-DUMMY-ADD.
           .

       Form1-DUMMY-UPDATE.
           .

       Form1-DUMMY-UPDATE-INIT.
           .

       Form1-DUMMY-DELETE.
           .

       Form1-DUMMY-DELETE-INIT.
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * FORM : Form1
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
           perform ABILITAZIONI. 
           perform VALORIZZA-OLD.

           .
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           MOVE DataSet1-wodbook-KEY1-ORDER TO TMP-Form1-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form1-KEYIS
           MOVE wod-rec OF wodbook TO 
              TMP-Form1-wodbook-RESTOREBUF
           .             

       Form1-Restore-Status.
           MOVE TMP-Form1-KEY1-ORDER TO DataSet1-wodbook-KEY1-ORDER
           MOVE TMP-Form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form1-wodbook-RESTOREBUF TO
              wod-rec OF wodbook
           PERFORM DataSet1-wodbook-START
           IF Valid-STATUS-wodbook
              PERFORM DataSet1-wodbook-Read-Next
           ELSE
              PERFORM DataSet1-wodbook-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-wodbook OR
              (Valid-STATUS-wodbook AND
                 wod-rec OF wodbook = 
                   TMP-Form1-wodbook-RESTOREBUF)
              PERFORM DataSet1-wodbook-Read-Next
           END-PERFORM
           .

       scr-attesa-Open-Routine.
           PERFORM scr-attesa-Scrn
           PERFORM scr-attesa-Proc
           .

       scr-attesa-Scrn.
           PERFORM scr-attesa-Create-Win
           PERFORM scr-attesa-Init-Value
           PERFORM scr-attesa-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-attesa-DISPLAY
           .

       scr-attesa-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 3,85,
              SIZE 44,27,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 131329,
              CONTROL FONT Calibri16B-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              No WRAP,
              EVENT PROCEDURE scr-attesa-Event-Proc,
              HANDLE IS scr-attesa-Handle,
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-attesa UPON scr-attesa-Handle
      * DISPLAY-COLUMNS settings
           .

       scr-attesa-PROC.
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, BeforeAccept>
           perform GENERA-WOD.
           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-attesa-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-attesa-Handle
           INITIALIZE Key-Status
           .

       scr-attesa-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-attesa-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-attesa-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-attesa-CLEAR.
           PERFORM scr-attesa-INIT-VALUE
           PERFORM scr-attesa-DISPLAY
           .

       scr-attesa-DISPLAY.
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-attesa UPON scr-attesa-Handle
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-attesa-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-attesa-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-attesa-Init-Value.
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, SetDefault>
      * <TOTEM:END>
           PERFORM scr-attesa-FLD-TO-BUF
           .


       scr-attesa-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-attesa-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-attesa-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-attesa-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-attesa, FORM:scr-attesa, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-attesa-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-attesa-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-attesa-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-attesa-SHOW-MSG-ROUTINE
           .

       scr-attesa-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-attesa-DISPLAY-MESSAGE
           .

       scr-attesa-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-attesa-Save-Status.
           .             

       scr-attesa-Restore-Status.
           .



       Screen1-Event-Proc.
           .

       cb-wod-Exception-Proc.
           IF Event-Occurred
              EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
              WHEN Ntf-Selchange ALSO 34 ALSO
                    form1-Handle
                 PERFORM cb-wod-Ex-Ntf-Selchange
              END-EVALUATE
           END-IF
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5008 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5008 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5008 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5008 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5008 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5008 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5008 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Begin-Entry ALSO 37 ALSO
                    form1-Handle 
              PERFORM gd-schema-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

       scr-attesa-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "abilita-toolbar.cpy".
           copy "color-custom.cpy".
           copy "status.cpy".
           copy "utydata.cpy" 
           .
      * <TOTEM:END>

       ABILITA-MACROGRUPPI.
      * <TOTEM:PARA. ABILITA-MACROGRUPPI>
           inquire cb-mg1, value cb-mg1-buf.
           inquire cb-mg2, value cb-mg2-buf.
           inquire cb-mg3, value cb-mg3-buf.
           inquire cb-mg4, value cb-mg4-buf.
           inquire cb-mg5, value cb-mg5-buf.
           inquire cb-mg6, value cb-mg6-buf.
           inquire cb-mg7, value cb-mg7-buf.
           inquire cb-mul, value cb-mul-buf.
           inquire cb-int, value cb-int-buf.
           inquire cb-dur, value cb-dur-buf.
           inquire cb-gio, value cb-gio-buf.
           inquire cb-wod, value cb-wod-buf.

           if cb-mg1-buf = s-cb-mg1-buf and
              cb-mg2-buf = s-cb-mg2-buf and
              cb-mg3-buf = s-cb-mg3-buf and
              cb-mg4-buf = s-cb-mg4-buf and
              cb-mg5-buf = s-cb-mg5-buf and
              cb-mg6-buf = s-cb-mg6-buf and
              cb-mg7-buf = s-cb-mg7-buf and
              cb-mul-buf = s-cb-mul-buf and
              cb-int-buf = s-cb-int-buf and
              cb-dur-buf = s-cb-dur-buf and
              cb-gio-buf = s-cb-gio-buf and
              cb-wod-buf = s-cb-wod-buf
              exit paragraph 
           end-if.                           
           inquire cb-wod, value in wom-desc.     

           read wodmap key wom-k-desc
                invalid                           
                initialize wom-data replacing numeric data by zeroes
                                         alphanumeric data by spaces
                modify cb-mg1, value "Nessuno"
                modify cb-mg2, value "Nessuno"  
                modify cb-mg3, value "Nessuno"  
                modify cb-mg4, value "Nessuno"  
                modify cb-mg5, value "Nessuno"  
                modify cb-mg6, value "Nessuno"  
                modify cb-mg7, value "Nessuno"  

            not invalid                     
                if cb-wod-buf not = s-cb-wod-buf            
                                   
                   initialize mcg-sigle-tab replacing numeric data by 
           zeroes
                                                 alphanumeric data by 
           spaces

                   modify cb-mg1, value "Nessuno", 
                   modify cb-mg2, value "Nessuno"  
                   modify cb-mg3, value "Nessuno"  
                   modify cb-mg4, value "Nessuno"  
                   modify cb-mg5, value "Nessuno"  
                   modify cb-mg6, value "Nessuno"  
                   modify cb-mg7, value "Nessuno"  

                   move wom-sigla-default(1) to el-mcg-sigla(1)
                   move wom-sigla-default(2) to el-mcg-sigla(2)
                   move wom-sigla-default(3) to el-mcg-sigla(3)
                   move wom-sigla-default(4) to el-mcg-sigla(4)
                   move wom-sigla-default(5) to el-mcg-sigla(5)
                   move wom-sigla-default(6) to el-mcg-sigla(6)
                   move wom-sigla-default(7) to el-mcg-sigla(7)
                
                   move wom-mcg-code-default(1) to mcg-code
                   read macrogroups 
                        invalid continue
                    not invalid modify cb-mg1, value mcg-desc
                   end-read
                   move wom-mcg-code-default(2) to mcg-code
                   read macrogroups 
                        invalid continue
                    not invalid modify cb-mg2, value mcg-desc
                   end-read
                   move wom-mcg-code-default(3) to mcg-code
                   read macrogroups 
                        invalid continue
                    not invalid modify cb-mg3, value mcg-desc
                   end-read
                   move wom-mcg-code-default(4) to mcg-code
                   read macrogroups 
                        invalid continue
                    not invalid modify cb-mg4, value mcg-desc
                   end-read
                   move wom-mcg-code-default(5) to mcg-code
                   read macrogroups 
                        invalid continue
                    not invalid modify cb-mg5, value mcg-desc
                   end-read
                   move wom-mcg-code-default(6) to mcg-code
                   read macrogroups 
                        invalid continue
                    not invalid modify cb-mg6, value mcg-desc
                   end-read
                   move wom-mcg-code-default(7) to mcg-code
                   read macrogroups 
                        invalid continue
                    not invalid modify cb-mg7, value mcg-desc
                   end-read  
                end-if
           end-read.                          

           initialize como-tit-macro.
           string "Macrogruppo "  delimited size
                  el-mcg-sigla(1) delimited size
             into como-tit-macro
           end-string
           modify lab-a, title como-tit-macro.
           if el-mcg-sigla(1) = space     
              modify cb-mg1, enabled false
           else
              modify cb-mg1, enabled true
           end-if.

           initialize como-tit-macro.
           string "Macrogruppo "  delimited size
                  el-mcg-sigla(2) delimited size
             into como-tit-macro
           end-string
           modify lab-b, title como-tit-macro.
           if el-mcg-sigla(2) = space     
              modify cb-mg2, enabled false
           else
              modify cb-mg2, enabled true
           end-if.

           initialize como-tit-macro.
           string "Macrogruppo "  delimited size
                  el-mcg-sigla(3) delimited size
             into como-tit-macro
           end-string
           modify lab-c, title como-tit-macro.
           if el-mcg-sigla(3) = space     
              modify cb-mg3, enabled false
           else
              modify cb-mg3, enabled true
           end-if.

           initialize como-tit-macro.
           string "Macrogruppo "  delimited size
                  el-mcg-sigla(4) delimited size
             into como-tit-macro
           end-string
           modify lab-d, title como-tit-macro.
           if el-mcg-sigla(4) = space     
              modify cb-mg4, enabled false
           else
              modify cb-mg4, enabled true
           end-if.

           initialize como-tit-macro.
           string "Macrogruppo "  delimited size
                  el-mcg-sigla(5) delimited size
             into como-tit-macro
           end-string
           modify lab-e, title como-tit-macro.
           if el-mcg-sigla(5) = space     
              modify cb-mg5, enabled false
           else
              modify cb-mg5, enabled true
           end-if.

           initialize como-tit-macro.
           string "Macrogruppo "  delimited size
                  el-mcg-sigla(6) delimited size
             into como-tit-macro
           end-string
           modify lab-f, title como-tit-macro.
           if el-mcg-sigla(6) = space     
              modify cb-mg6, enabled false
           else
              modify cb-mg6, enabled true
           end-if.

           initialize como-tit-macro.
           string "Macrogruppo "  delimited size
                  el-mcg-sigla(7) delimited size
             into como-tit-macro
           end-string
           modify lab-g, title como-tit-macro.
           if el-mcg-sigla(7) = space     
              modify cb-mg7, enabled false
           else
              modify cb-mg7, enabled true
           end-if.

           move 0 to como-prim(1).
           move 0 to como-prim(2).
           move 0 to como-prim(3).
           move 0 to como-prim(4).
           move 0 to como-prim(5).
           move 0 to como-prim(6).
           move 0 to como-prim(7).
           move 0 to como-prim(8).
           move 0 to como-prim(9).
           move 0 to como-prim(10).

           modify lab-a, font Calibri14-Occidentale.
           modify lab-b, font Calibri14-Occidentale.
           modify lab-c, font Calibri14-Occidentale.
           modify lab-d, font Calibri14-Occidentale.
           modify lab-e, font Calibri14-Occidentale.
           modify lab-f, font Calibri14-Occidentale.
           modify lab-g, font Calibri14-Occidentale.      
                                                      
           modify pb-mcg1, enabled false, title "Mai".
           modify pb-mcg2, enabled false, title "Mai".
           modify pb-mcg3, enabled false, title "Mai".
           modify pb-mcg4, enabled false, title "Mai".
           modify pb-mcg5, enabled false, title "Mai".
           modify pb-mcg6, enabled false, title "Mai".
           modify pb-mcg7, enabled false, title "Mai".
                                          
           modify lab-a, color = 513.
           modify lab-b, color = 513.
           modify lab-c, color = 513.
           modify lab-d, color = 513.
           modify lab-e, color = 513.
           modify lab-f, color = 513.
           modify lab-g, color = 513.

           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.
           move 0 to mod.
           perform ABILITAZIONI.

           modify gd-schema, reset-grid = 1.
           perform GD-SCHEMA-CONTENT.
           move 1 to riga.
           move 304 to colore. 
                                            
           modify pb-genera, enabled false.

           perform varying idx-days from 1 by 1
                     until idx-days > wom-days
              initialize rec-schema
                         replacing numeric data by zeroes
                              alphanumeric data by spaces
              perform varying idx-split from 1 by 1
                        until idx-split > 20
                 if wom-split-el-split-sigla(idx-days, idx-split) = 
           space
                    exit perform
                 end-if                                
                 evaluate wom-split-el-split-sigla(idx-days, idx-split)
                 when el-mcg-sigla(1) 
                      if wom-split-el-split-primary(idx-days, 
           idx-split) = 1
                         modify lab-a, font Calibri14BU-Occidentale
                         move 1 to como-prim(1)
                      end-if
                      inquire cb-mg1, value = mcg-desc
                 when el-mcg-sigla(2) 
                      inquire cb-mg2, value = mcg-desc
                      if wom-split-el-split-primary(idx-days, 
           idx-split) = 1
                         modify lab-b, font Calibri14BU-Occidentale
                         move 1 to como-prim(2)
                      end-if
                 when el-mcg-sigla(3) 
                      inquire cb-mg3, value = mcg-desc
                      if wom-split-el-split-primary(idx-days, 
           idx-split) = 1
                         modify lab-c, font Calibri14BU-Occidentale
                         move 1 to como-prim(3)
                      end-if
                 when el-mcg-sigla(4)  
                      inquire cb-mg4, value = mcg-desc
                      if wom-split-el-split-primary(idx-days, 
           idx-split) = 1
                         modify lab-d, font Calibri14BU-Occidentale
                         move 1 to como-prim(4)
                      end-if
                 when el-mcg-sigla(5)  
                      inquire cb-mg5, value = mcg-desc
                      if wom-split-el-split-primary(idx-days, 
           idx-split) = 1
                         modify lab-e, font Calibri14BU-Occidentale
                         move 1 to como-prim(5)
                      end-if
                 when el-mcg-sigla(6) 
                      inquire cb-mg6, value = mcg-desc
                      if wom-split-el-split-primary(idx-days, 
           idx-split) = 1
                         modify lab-f, font Calibri14BU-Occidentale
                         move 1 to como-prim(6)
                      end-if
                 when el-mcg-sigla(7) 
                      inquire cb-mg7, value = mcg-desc
                      if wom-split-el-split-primary(idx-days, 
           idx-split) = 1
                         modify lab-g, font Calibri14BU-Occidentale
                         move 1 to como-prim(7)
                      end-if
                 end-evaluate
                 read macrogroups key mcg-k-desc
                      invalid move spaces to mcg-desc mcg-code
                 end-read

                 move wom-split-el-split-int-code(idx-days, idx-split)
                   to int-code
                 read intexe no lock
                 
                 initialize como-day
                 inspect como-day replacing trailing spaces by low-value
                 string  wom-split-el-split-sigla(idx-days, idx-split)
                         " - "          
                         int-desc(1:4)
                    into como-day
                 end-string
                 evaluate idx-split
                 when 1 move como-day to sigle-effort-1
                        move mcg-code to mcg-1
                 when 2 move como-day to sigle-effort-2
                        move mcg-code to mcg-2
                 when 3 move como-day to sigle-effort-3
                        move mcg-code to mcg-3
                 when 4 move como-day to sigle-effort-4
                        move mcg-code to mcg-4
                 when 5 move como-day to sigle-effort-5
                        move mcg-code to mcg-5
                 when 6 move como-day to sigle-effort-6
                        move mcg-code to mcg-6
                 when 7 move como-day to sigle-effort-7
                        move mcg-code to mcg-7
                 end-evaluate
              end-perform
              if colore = 304 
                 move 0 to colore
              else
                 move 304 to colore
              end-if
              add 1 to riga 
              modify gd-schema(riga,  1), cell-data = idx-days
              modify gd-schema(riga,  2), cell-data = sigle-effort-1
              modify gd-schema(riga,  3), cell-data = sigle-effort-2
              modify gd-schema(riga,  4), cell-data = sigle-effort-3
              modify gd-schema(riga,  5), cell-data = sigle-effort-4
              modify gd-schema(riga,  6), cell-data = sigle-effort-5
              modify gd-schema(riga,  7), cell-data = sigle-effort-6
              modify gd-schema(riga,  8), cell-data = sigle-effort-7
              modify gd-schema(riga,  9), cell-data = sigle-effort-8
              modify gd-schema(riga, 10), cell-data = sigle-effort-9
              modify gd-schema(riga, 11), cell-data = sigle-effort-10
              modify gd-schema(riga, 12), cell-data = spaces            
               

              modify gd-schema(riga), row-color = colore
              add 1 to riga      
              if mcg-1 not = spaces or
                 mcg-2 not = spaces or
                 mcg-3 not = spaces or
                 mcg-4 not = spaces or
                 mcg-5 not = spaces or
                 mcg-6 not = spaces or
                 mcg-7 not = spaces
                 inquire pb-genera, enabled in como-e
                 if como-e = 0
                    move 1 to como-e              
                    modify pb-genera, enabled true
                 end-if
              end-if
              modify gd-schema(riga,  1), cell-data = spaces
              modify gd-schema(riga,  2), cell-data = mcg-1
              modify gd-schema(riga,  3), cell-data = mcg-2
              modify gd-schema(riga,  4), cell-data = mcg-3
              modify gd-schema(riga,  5), cell-data = mcg-4
              modify gd-schema(riga,  6), cell-data = mcg-5
              modify gd-schema(riga,  7), cell-data = mcg-6
              modify gd-schema(riga,  8), cell-data = mcg-7
              modify gd-schema(riga,  9), cell-data = mcg-8
              modify gd-schema(riga, 10), cell-data = mcg-9 
              modify gd-schema(riga, 11), cell-data = mcg-10
              modify gd-schema(riga, 12), cell-data = spaces
              modify gd-schema(riga), row-color = colore    
           end-perform.        
        

           evaluate wom-macrogroups
           when 1                          
                modify cb-mg1, enabled true
           when 2                           
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
           when 3            
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
           when 4            
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
           when 5                          
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
                modify cb-mg5, enabled true
           when 6                          
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
                modify cb-mg5, enabled true
                modify cb-mg6, enabled true
           when 7                          
                modify cb-mg1, enabled true
                modify cb-mg2, enabled true
                modify cb-mg3, enabled true
                modify cb-mg4, enabled true
                modify cb-mg5, enabled true
                modify cb-mg6, enabled true
                modify cb-mg7, enabled true
           end-evaluate.    
           
           move cb-mg1-buf to s-cb-mg1-buf.
           move cb-mg2-buf to s-cb-mg2-buf.
           move cb-mg3-buf to s-cb-mg3-buf.
           move cb-mg4-buf to s-cb-mg4-buf.
           move cb-mg5-buf to s-cb-mg5-buf.
           move cb-mg6-buf to s-cb-mg6-buf.
           move cb-mg7-buf to s-cb-mg7-buf.
           move cb-mul-buf to s-cb-mul-buf.
           move cb-int-buf to s-cb-int-buf.
           move cb-dur-buf to s-cb-dur-buf.
           move cb-gio-buf to s-cb-gio-buf.
           move cb-wod-buf to s-cb-wod-buf.
           
           inquire cb-mg1, enabled in como-e, value in como-nome.
           if como-e = 1 and como-nome = "Nessuno"
              modify pb-genera, enabled false
           end-if.             
           
           inquire cb-mg2, enabled in como-e, value in como-nome.
           if como-e = 1 and como-nome = "Nessuno"
              modify pb-genera, enabled false
           end-if.
           
           inquire cb-mg3, enabled in como-e, value in como-nome.
           if como-e = 1 and como-nome = "Nessuno"
              modify pb-genera, enabled false
           end-if.
           
           inquire cb-mg4, enabled in como-e, value in como-nome.
           if como-e = 1 and como-nome = "Nessuno"
              modify pb-genera, enabled false
           end-if.
           
           inquire cb-mg5, enabled in como-e, value in como-nome.
           if como-e = 1 and como-nome = "Nessuno"
              modify pb-genera, enabled false
           end-if.
           
           inquire cb-mg6, enabled in como-e, value in como-nome.
           if como-e = 1 and como-nome = "Nessuno"
              modify pb-genera, enabled false
           end-if.
           
           inquire cb-mg7, enabled in como-e, value in como-nome.
           if como-e = 1 and como-nome = "Nessuno"
              modify pb-genera, enabled false
           end-if.

           if cb-wod-buf = "Nessuno"         
              modify pb-random, enabled false
           else
              modify pb-random, enabled true
           end-if 
           .
      * <TOTEM:END>

       ABILITAZIONI.
      * <TOTEM:PARA. ABILITAZIONI>
           if mod = 1              
              move BitmapDeleteEnabled  to BitmapNumDelete
              move BitmapSaveEnabled    to BitmapNumSave
              move BitmapPrintEnabled   to BitmapNumPrint
              move BitmapPreviewEnabled to BitmapNumPreview
              move 1 to e-salva e-cancella e-stampa e-anteprima 
              modify pb-aggiungi, enabled true
              modify pb-elimina,  enabled true
              modify pb-su,       enabled true
              modify pb-giu,      enabled true
           else           
              move BitmapDeleteDisabled  to BitmapNumDelete
              move BitmapSaveDisabled    to BitmapNumSave   
              move BitmapPrintDisabled   to BitmapNumPrint
              move BitmapPreviewDisabled to BitmapNumPreview
              move 0 to e-salva e-cancella e-stampa e-anteprima 
              modify pb-aggiungi, enabled false
              modify pb-elimina,  enabled false
              modify pb-su,       enabled false
              modify pb-giu,      enabled false
           end-if.      

                                         
           modify tool-cancella,  enabled = e-cancella.
           modify tool-salva,     enabled = e-salva.
           modify tool-stampa,    enabled = e-stampa.
           modify tool-anteprima, enabled = e-anteprima. 
       
      * ISACCO (SERVE SEMPRE PER LA MODIFICA PRCEDENTE E PER RIPRISTINARE
      * LE BITMAP DISABILITATE. - 10/11/2003
      *     perform FORM1-DISPLAY.
           display tool-nuovo, tool-salva, tool-cancella, tool-modifica
                   tool-stampa tool-anteprima.
      * FINE 
           .
      * <TOTEM:END>

       ANTEPRIMA.
      * <TOTEM:PARA. ANTEPRIMA>
           set s-anteprima to true.
           perform STAMPA-ANTEPRIMA 
           .
      * <TOTEM:END>

       CALCOLA-HIT-BOTTONI.
      * <TOTEM:PARA. CALCOLA-HIT-BOTTONI>
           open input tmp-hit.

           perform varying idx from 1 by 1 
                     until idx > tot-gruppi
              move el-mcg-code(idx) to th-mcg-code
              move 0 to tot-hit
              move low-value to th-day
              start tmp-hit key >= th-key
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read tmp-hit next at end exit perform end-read
                       if th-mcg-code not = el-mcg-code(idx)
                          exit perform
                       end-if
                       add 1 to tot-hit
                    end-perform
              end-start

                                      
              evaluate tot-hit
              when 0
                   evaluate idx                                       
                   when 1 modify pb-mcg1, enabled, false, title = "Mai" 
                                        
                   when 2 modify pb-mcg2, enabled, false, title = "Mai" 
                                        
                   when 3 modify pb-mcg3, enabled, false, title = "Mai" 
                                        
                   when 4 modify pb-mcg4, enabled, false, title = "Mai" 
                                        
                   when 5 modify pb-mcg5, enabled, false, title = "Mai" 
                                        
                   when 6 modify pb-mcg6, enabled, false, title = "Mai" 
                                        
                   when 7 modify pb-mcg7, enabled, false, title = "Mai"
                   end-evaluate
              when 1
                   evaluate idx         
                   when 1 modify pb-mcg1, enabled, true, title = "1 volt
      -    "a"
                   when 2 modify pb-mcg2, enabled, true, title = "1 volt
      -    "a"
                   when 3 modify pb-mcg3, enabled, true, title = "1 volt
      -    "a"
                   when 4 modify pb-mcg4, enabled, true, title = "1 volt
      -    "a"
                   when 5 modify pb-mcg5, enabled, true, title = "1 volt
      -    "a"
                   when 6 modify pb-mcg6, enabled, true, title = "1 volt
      -    "a"
                   when 7 modify pb-mcg7, enabled, true, title = "1 volt
      -    "a"
                   end-evaluate
              when other                                        
                   move tot-hit to como-hit
                   inspect como-hit replacing leading x"30" by x"20"
                   call "C$JUSTIFY" using como-hit, "L"
                   inspect como-hit replacing trailing spaces by 
           low-value
                   initialize como-day
                   string como-hit delimited low-value
                          " volte" delimited size
                     into como-day
                   end-string
                   evaluate idx
                   when 1 modify pb-mcg1, enabled, true, title como-day
                   when 2 modify pb-mcg2, enabled, true, title como-day
                   when 3 modify pb-mcg3, enabled, true, title como-day
                   when 4 modify pb-mcg4, enabled, true, title como-day
                   when 5 modify pb-mcg5, enabled, true, title como-day
                   when 6 modify pb-mcg6, enabled, true, title como-day
                   when 7 modify pb-mcg7, enabled, true, title como-day
                   end-evaluate
              end-evaluate
                 
              evaluate idx                            
              when 1 inquire cb-mg1, enabled in como-e
              when 2 inquire cb-mg2, enabled in como-e
              when 3 inquire cb-mg3, enabled in como-e
              when 4 inquire cb-mg4, enabled in como-e
              when 5 inquire cb-mg5, enabled in como-e
              when 6 inquire cb-mg6, enabled in como-e
              when 7 inquire cb-mg7, enabled in como-e
              end-evaluate

              if como-e = 1
                 evaluate tot-hit
                 when 0
                      evaluate idx
                      when 1 modify lab-a, color 176
                      when 2 modify lab-b, color 176
                      when 3 modify lab-c, color 176
                      when 4 modify lab-d, color 176
                      when 5 modify lab-e, color 176
                      when 6 modify lab-f, color 176
                      when 7 modify lab-g, color 176
                      end-evaluate
                      move 176 to el-mcg-color(idx)
                 when 1
                      evaluate idx
                      when 1 modify lab-a, color 481
                      when 2 modify lab-b, color 481
                      when 3 modify lab-c, color 481
                      when 4 modify lab-d, color 481
                      when 5 modify lab-e, color 481
                      when 6 modify lab-f, color 481
                      when 7 modify lab-g, color 481
                      end-evaluate
                      move 481 to el-mcg-color(idx)
                 when other
                      evaluate idx
                      when 1 modify lab-a, color 112
                      when 2 modify lab-b, color 112
                      when 3 modify lab-c, color 112
                      when 4 modify lab-d, color 112
                      when 5 modify lab-e, color 112
                      when 6 modify lab-f, color 112
                      when 7 modify lab-g, color 112
                      end-evaluate
                      move 112 to el-mcg-color(idx)
                 end-evaluate
              end-if

           end-perform.

           close tmp-hit 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate CONTROL-ID
      *
      *     when 78-ID-ef-cliente           
      *          set SceltoCliente to false
      *          inquire ef-cliente, value in cli-codice
      *          move "clienti-alfa" to como-file
      *          call "zoom-gt"   using como-file, cli-rec
      *                          giving stato-zoom
      *          cancel "zoom-gt"
      *          if stato-zoom = 0
      *             set SceltoCliente to true
      *             move cli-codice   to tsc-cliente
      *             modify ef-cliente, value tsc-cliente
      *             move 4                to ACCEPT-CONTROL   
      *          end-if
      *
           when 78-ID-gd1
                perform X-Y
                evaluate colonna
                when 78-col-exe-code
                     perform X-Y
                     inquire gd1(riga, 78-col-exe-code), 
                             cell-data in exe-code
                     inquire gd1(riga, 78-col-grp-code), 
                             cell-data in grp-code
                     perform LOOKUP-EXE
      *
      *          when 78-col-prz
      *               perform VALORE-RIGA
      *               move riga to store-riga
      *               perform FORM-PREZZI-OPEN-ROUTINE
      *               move store-riga to riga
      *               if prezzo-scelto not = 0
      *                  move prezzo-scelto to col-prz
      *                  modify gd1(riga, 78-col-prz), cell-data col-prz
      *                  if como-col-sc1 = 0 |and como-col-sc2 = 0
      *                     move cli-sconto1 to como-col-sc1 col-sc1
      ******                     move cli-sconto2 to como-col-sc2 col-sc2
      *                     modify gd1(riga, 78-col-sc1), cell-data col-sc1
      ******                     modify gd1(riga, 78-col-sc2), cell-data col-sc2
      *                  end-if
      *                  perform VALORE-RIGA
      *                  perform CALCOLA-NETTO
      *                  if col-prz not = old-col-prz
      *                     move riga        to RigaCambiata
      *                     move 78-col-prz  to ColonnaCambiata
      *                  end-if
      *               end-if
      *               move 78-ID-gd1 to control-id
      *               move 4         to accept-control
      *               modify gd1, cursor-y riga, cursor-x 78-col-prz
      
      *          end-evaluate
           end-evaluate  
           .
      * <TOTEM:END>

       CLEAR-SCREEN.
      * <TOTEM:PARA. CLEAR-SCREEN>
      *     move tsc-chiave to old-tsc-chiave.
      *
      *     initialize tsc-dati of tschede 
      *               replacing numeric data by zeroes
      *                    alphanumeric data by spaces.
      *                   
      *     perform FORM1-FLD-TO-BUF. 
      *
      *     perform INIT-OLD-REC.
      *
      *     perform CLEAR-CLIENTE.
      *                                   
      *     display form1. 
      *
      *     perform RESETTA-GRID.
      *
      *     unlock tschede all records    
           .
      * <TOTEM:END>

       CHECK-INSERIMENTO.
      * <TOTEM:PARA. CHECK-INSERIMENTO>
      * MODIFICA LA STATUS-BAR
      * CONTROLLO SE DA INSERIMENTO SCORRO. ALLORA DEVO SEGNALARE CHE
      * SONO TORNATO IN MODIFICA.
           inquire tool-modifica, value in mod.

           evaluate mod
           when 1  
                set StatusModifica to true
           when 0
                set StatusVisua    to true   
           end-evaluate.
      
           perform STATUS-BAR-MSG 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
      *     set tutto-ok to true. 
      *
      *     evaluate CONTROL-ID
      *     when 78-ID-ef-cliente
      *          perform RIEMPI-CHIAVE           
      *          if ef-cliente-buf not = spaces
      *             read tschede no lock key tsc-k-cliente
      *                  invalid
      *                  if vecchio
      *                     display message MSG-record-inesistente
      *                               title tit-err
      *                                icon 2
      *                     perform CLEAR-SCREEN
      *                     set errori to true
      *                  else
      *                     perform DISPLAY-CLIENTE
      *                     display form1
      *                  end-if
      *              not invalid      
      *                  if old-tsc-chiave not = tsc-chiave or mod = 0
      *                     perform CURRENT-RECORD 
      *                  end-if
      *             end-read
      *
      *          else
      *             set errori to true  
      *             move 78-ID-ef-cliente to control-id
      *             display message box MSG-record-inesistente
      *                     title = tit-err
      *                     icon mb-warning-icon
      *          end-if
      *          if errori
      *             move 78-ID-ef-cliente to control-id
      *             move 4               to accept-control
      *          end-if
      *
      *     end-evaluate.
      *
      *     if errori
      *        perform CANCELLA-COLORE
      *        move CONTROL-ID to store-id
      *        move 4          to ACCEPT-CONTROL
      *     end-if 
           .
      * <TOTEM:END>

       CONTROLLO-RIGA.
      * <TOTEM:PARA. CONTROLLO-RIGA>
           set tutto-ok to true.
           if mod = 0 
              exit paragraph 
           end-if.
      
           evaluate colonna
           when 78-col-day
                inquire gd1(riga, 78-col-day), cell-data col-day
                if col-day = 0                 
                   perform ELIMINA-RIGA
                else
                   if col-day not = hid-tex-day
                      move hid-tex-day to col-day
                      modify gd1(riga, 78-col-day), cell-data col-day
                   end-if
                end-if
           when 78-col-series
                inquire gd1(riga, 78-col-series), cell-data in 
           col-series
                if col-series = 0
                   set event-action to event-action-fail
                else
                   inquire gd1(riga, 78-col-day), hidden-data hiddenData
                   move hid-tex-key to tex-key
                   open i-o tmp-exe
                   read tmp-exe
                   move col-series to tex-series
                   rewrite tex-rec
                   close tmp-exe
                   perform RICALCOLA-HIT-DIV
                end-if
           when 78-col-reps
                inquire gd1(riga, 78-col-reps), cell-data in col-reps
                if col-reps = spaces
                   set event-action to event-action-fail
                else                        
                   inquire gd1(riga, 78-col-day), hidden-data hiddenData
                   move hid-tex-key to tex-key
                   open i-o tmp-exe
                   read tmp-exe
                   move col-reps to tex-reps
                   rewrite tex-rec
                   close tmp-exe            
                end-if

           end-evaluate 
           .
      * <TOTEM:END>

       CREA-OCCURS-GRUPPI.
      * <TOTEM:PARA. CREA-OCCURS-GRUPPI>
           initialize tab-mgroups replacing numeric data by zeroes
                                       alphanumeric data by spaces.

           move 0 to idx-gruppi.
                        
           inquire cb-gio, value in cb-gio-buf.
           inquire cb-dur, value in dur-desc.
           read duration key dur-k-desc.
                                             
           inquire cb-mg1, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg2, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg3, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg4, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.                                  
           inquire cb-mg5, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.
           inquire cb-mg6, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.
           inquire cb-mg7, value in mcg-desc.
           perform ADD-ELEM-GRUPPO.       
                                     
           modify lab-a, color = 513.
           modify lab-b, color = 513.
           modify lab-c, color = 513.
           modify lab-d, color = 513.
           modify lab-e, color = 513.
           modify lab-f, color = 513.
           modify lab-g, color = 513.


      ***---
       ADD-ELEM-GRUPPO.
           read macrogroups key  mcg-k-desc 
                invalid continue
            not invalid 
                add 1 to idx-gruppi                   
                move mcg-desc    to el-mgroup(idx-gruppi)  
                move mcg-code    to el-mcg-code(idx-gruppi)
           end-read.
           move idx-gruppi to tot-gruppi 
           .
      * <TOTEM:END>

       CREA-TMP-GRP-EXE.
      * <TOTEM:PARA. CREA-TMP-GRP-EXE>
           accept  path-tmp-grp-exe from environment "PATH_ST".
           inspect path-tmp-grp-exe replacing trailing spaces by 
           low-value.
           string  path-tmp-grp-exe delimited low-value
                   "tmp-grp-exe_"   delimited size
                   como-data        delimited size
                   "_"              delimited size
                   como-ora         delimited size
              into path-tmp-grp-exe
           end-string.                                                  
                 
           inspect path-tmp-grp-exe replacing trailing low-value by 
           spaces.
           open output tmp-grp-exe.    
           close       tmp-grp-exe.
           open i-o    tmp-grp-exe.

           move el-mcg-code(idx) to mcg-code.
                       
           open input tmp-exe.
           move low-value to tex-rec.
           move mcg-code  to tex-mcg-code.
           start tmp-exe key >= tex-k-mcg
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-exe next at end exit perform end-read   
                    
                    if tex-mcg-code not = mcg-code
                       exit perform
                    end-if

                    move tex-exe-code to exe-code
                    read exercises
                    move exe-grp-code to grp-code
                    read groups                                   

                    move tex-day    to tge-day
                    move grp-desc   to tge-grp-desc 
                    move exe-desc   to tge-exe-desc
                    move tex-series to tge-series
                    inspect tge-series replacing leading x"30" by x"20"
                    call "C$JUSTIFY" using tge-series, "L"
                    move tex-reps   to tge-reps  
                    move 0 to tge-prg
                    write tge-rec 
                 end-perform
           end-start.         
           close tmp-exe.  
                    
           move spaces to como-nome.
           move 0      to tot-series store-riga.  
           move low-value to tge-key.
           start tmp-grp-exe key >= tge-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-grp-exe next 
                      at end perform RIGA-TOT
                             exit perform
                    end-read                 
                    if como-nome = spaces
                       move tge-grp-desc to como-nome
                    end-if
                    if como-nome not = tge-grp-desc     
                       move tge-grp-desc to grp-desc  
                       move tge-exe-desc to exe-desc
                       move tge-day      to save-day
                       perform RIGA-TOT                  
                       move grp-desc to tge-grp-desc  
                       move exe-desc to tge-exe-desc
                       move save-day to tge-day  
                       start tmp-grp-exe key >= tge-key
                             invalid exit perform
                       end-start
                       read tmp-grp-exe next
                       move 0 to tot-series
                       move tge-grp-desc to como-nome
                    end-if                      
                    add 1 to store-riga
                    move store-riga to tge-prg
                    rewrite tge-rec           
                    call "C$JUSTIFY" using tge-series; "R"
                    inspect tge-series replacing leading x"20" by x"30"
                    move tge-series  to como-series
                    add como-series  to tot-series
                 end-perform
           end-start.        
                            
           close       tmp-grp-exe.
           move path-tmp-grp-exe to ext-file
           move "tmp-grp-exe"    to Como-File
           call   "zoom-gt"   using como-file, tge-rec
                             giving stato-zoom
           cancel "zoom-gt".
                              
           delete file tmp-grp-exe.

      ***---
       RIGA-TOT.                 
           add 1 to store-riga.      
           initialize tge-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           move store-riga to tge-prg.
      *     move "TOTALE"   to tge-grp-desc.
           move spaces     to tge-day.
           initialize tge-exe-desc.
           string "TOT "    delimited size
                  como-nome delimited size
             into tge-exe-desc
           end-string.
           call "C$TOUPPER" using tge-exe-desc, value 100
           move tot-series to tge-series.                          
           inspect tge-series replacing leading x"30" by x"20".
           call "C$JUSTIFY" using tge-series, "L".
           write tge-rec 
           .
      * <TOTEM:END>

       CURRENT-RECORD.
      * <TOTEM:PARA. CURRENT-RECORD>
      *     perform RIEMPI-CHIAVE.
      *     set tutto-ok  to true.
      *     set ReadSecca to true.
      *     if nuovo move 0 to mod end-if.
      *
      *     if mod = 1
      *        read tschede lock key tsc-k-cliente
      *           invalid
      *              set errori to true 
      *        end-read
      *     else
      *        read tschede no lock key tsc-k-cliente
      *           invalid 
      *              set errori to true 
      *        end-read
      *     end-if.                    
      *     set ReadSecca to false.
      *
      *     if RecLocked
      *        set RecLocked to false
      *     else
      *        if tutto-ok
      *           perform CANCELLA-COLORE
      *           if nuovo
      *              move 0      to mod
      *              move 1      to mod-k
      *              move 78-ID-ef-cliente to control-id
      *              move 4                to accept-control
      *           else
      *              move 78-ID-gd1 to control-id
      *              move 4         to accept-control
      *           end-if   
      *           perform FORM1-IUD-DISPLAY
      *           set vecchio to true
      *           if mod = 1
      *              set StatusModifica to true
      *           else                         
      *              set StatusVisua    to true
      *           end-if
      *           perform STATUS-BAR-MSG 
      *           perform VALORIZZA-OLD
      *           perform RIEMPI-GRID
      *        else
      *           move 0 to mod
      *           move 1 to mod-k
      *           if vecchio
      *              perform CLEAR-SCREEN
      *              if YesMessage
      *                 move 78-ID-ef-cliente to CONTROL-ID
      *                 move 4                to accept-control
      *                 display message MSG-Record-inesistente
      *                           title tit-err
      *                            icon 2
      *              end-if
      *           end-if
      *        end-if
      *     end-if 
           .
      * <TOTEM:END>

       DATI-DEFAULT.
      * <TOTEM:PARA. DATI-DEFAULT>
           modify cb-mg1, value "Nessuno".
           modify lab-a, color  513, font Calibri14-Occidentale.
           modify cb-mg2, value "Nessuno".
           modify lab-b, color  513, font Calibri14-Occidentale.
           modify cb-mg3, value "Nessuno".
           modify lab-c, color  513, font Calibri14-Occidentale.
           modify cb-mg4, value "Nessuno".
           modify lab-d, color  513, font Calibri14-Occidentale.
           modify cb-mg5, value "Nessuno".
           modify lab-e, color  513, font Calibri14-Occidentale.
           modify cb-mg6, value "Nessuno".
           modify lab-f, color  513, font Calibri14-Occidentale.
           modify cb-mg7, value "Nessuno".
           modify lab-g, color  513, font Calibri14-Occidentale.

           modify cb-mul,  value "Si".
                                          
           modify cb-int, value "Tutto".
           modify cb-dur, value "Tutto".
           modify cb-wod, value "Nessuno".

           modify cb-gio, value "Tutto".
                                        
           modify cb-mg1, enabled false.
           modify cb-mg2, enabled false.
           modify cb-mg3, enabled false.
           modify cb-mg4, enabled false.
           modify cb-mg5, enabled false.
           modify cb-mg6, enabled false.
           modify cb-mg7, enabled false.
           
           perform VALORIZZA-WOD.
                                         
           modify pb-mcg1, enabled false, title "Mai".
           modify pb-mcg2, enabled false, title "Mai".
           modify pb-mcg3, enabled false, title "Mai".
           modify pb-mcg4, enabled false, title "Mai".
           modify pb-mcg5, enabled false, title "Mai".
           modify pb-mcg6, enabled false, title "Mai".
           modify pb-mcg7, enabled false, title "Mai". 
                                     
           modify lab-a, color = 513.
           modify lab-b, color = 513.
           modify lab-c, color = 513.
           modify lab-d, color = 513.
           modify lab-e, color = 513.
           modify lab-f, color = 513.
           modify lab-g, color = 513.

           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.
           move 0 to mod.
           perform ABILITAZIONI.

           modify gd-schema, reset-grid = 1.
           perform GD-SCHEMA-CONTENT.    

           modify pb-genera, enabled false 
           .
      * <TOTEM:END>

       ELIMINA-RIGA.
      * <TOTEM:PARA. ELIMINA-RIGA>
           inquire gd1(riga, 78-col-day), hidden-data hiddenData.
           inquire gd1(riga, 78-col-day), cell-data col-day.
           open i-o tmp-exe.
           move hid-tex-key to tex-key.
           delete tmp-exe record.
           close tmp-exe.  
           modify gd1, record-to-delete = riga.

           perform RICALCOLA-HIT-DIV.
           perform CALCOLA-HIT-BOTTONI         
           .
      * <TOTEM:END>

       EVIDENZIA-GRUPPI.
      * <TOTEM:PARA. EVIDENZIA-GRUPPI>
           inquire gd1, last-row in tot-righe, 
           modify gd1, mass-update = 1.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              inquire gd1(riga, 1), hidden-data in hiddenData
              if hid-mcg-code = el-mcg-code(idx)
                 modify gd1(riga), row-font = Calibri12B-Occidentale,
                                   row-color = el-mcg-color(idx)
              end-if
           end-perform.
           modify gd1, mass-update = 0 
           .
      * <TOTEM:END>

       GENERA-WOD.
      * <TOTEM:PARA. GENERA-WOD>
           move "Creo i gruppi" to lab-attesa-buf.
           display lab-attesa
           perform CREA-OCCURS-GRUPPI.
                                         
           move 0 to int-effort.
           inquire cb-int, value in cb-int-buf.
           evaluate cb-int-buf
           when "Light wod effort" move 1  to effort-wod
           when "Light wod effort" move 2  to effort-wod
           when "Light wod effort" move 3  to effort-wod
           when other              move 99 to effort-wod
           end-evaluate.
           
           inquire cb-wod, value in wom-desc.
           read wodmap key wom-k-desc.

           perform OPEN-TMP.
                                         
           modify pb-mcg1, enabled false, title "Mai".
           modify pb-mcg2, enabled false, title "Mai".
           modify pb-mcg3, enabled false, title "Mai".
           modify pb-mcg4, enabled false, title "Mai".
           modify pb-mcg5, enabled false, title "Mai".
           modify pb-mcg6, enabled false, title "Mai".
           modify pb-mcg7, enabled false, title "Mai".  
                                     
           modify lab-a, color = 513.
           modify lab-b, color = 513.
           modify lab-c, color = 513.
           modify lab-d, color = 513.
           modify lab-e, color = 513.
           modify lab-f, color = 513.
           modify lab-g, color = 513.

           modify gd1, mass-update = 1.  
           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.
                                     
           initialize tex-rec replacing numeric data by zeroes 
                                   alphanumeric data by spaces.         
                                 
           perform LOAD-EXERCISES-ALLOWED-BY-EFFORT. 
           perform LOAD-EXERCISES-MULTIJOINT.
           perform LOAD-EXERCISES.           
           perform REMOVE-DUPLICATES.           
           move "Carico la griglia" to lab-attesa-buf.
           display lab-attesa.
           set fromAggiungi to false.
           perform LOAD-GRID.          
           move "Calcolo coperture" to lab-attesa-buf.
           display lab-attesa
           perform CALCOLA-HIT-BOTTONI.

           perform CLOSE-TMP.
                                  
           move cb-mg1-buf to s-cb-mg1-buf.
           move cb-mg2-buf to s-cb-mg2-buf.
           move cb-mg3-buf to s-cb-mg3-buf.
           move cb-mg4-buf to s-cb-mg4-buf.
           move cb-mg5-buf to s-cb-mg5-buf.
           move cb-mg6-buf to s-cb-mg6-buf.
           move cb-mg7-buf to s-cb-mg7-buf.
           move cb-mul-buf to s-cb-mul-buf.
           move cb-int-buf to s-cb-int-buf.
           move cb-dur-buf to s-cb-dur-buf.
           move cb-gio-buf to s-cb-gio-buf.
           move cb-wod-buf to s-cb-wod-buf.
            
      ***---
       OPEN-TMP. 
           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  path-tmp-exe-effort from environment "PATH_ST".
           inspect path-tmp-exe-effort replacing trailing spaces by 
           low-value.
           string  path-tmp-exe-effort delimited low-value
                   "tmp-exe-effort_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
              into path-tmp-exe-effort
           end-string.                                                  
                 
           inspect path-tmp-exe-effort replacing trailing low-value by 
           spaces.
           open output tmp-exe-effort.    
           close       tmp-exe-effort.
           open i-o    tmp-exe-effort.
                 
           accept  path-tmp-wod-exe from environment "PATH_ST".
           inspect path-tmp-wod-exe replacing trailing spaces by 
           low-value.
           string  path-tmp-wod-exe delimited low-value
                   "tmp-wod-exe_"   delimited size
                   como-data        delimited size
                   "_"              delimited size
                   como-ora         delimited size
              into path-tmp-wod-exe
           end-string.                                                  
                 
           inspect path-tmp-wod-exe replacing trailing low-value by 
           spaces.
           open output tmp-wod-exe.
           close       tmp-wod-exe.
           open i-o    tmp-wod-exe.
                 
           accept  path-tmp-exe from environment "PATH_ST".
           inspect path-tmp-exe replacing trailing spaces by low-value.
           string  path-tmp-exe delimited low-value
                   "tmp-exe_"   delimited size
                   como-data    delimited size
                   "_"          delimited size
                   como-ora     delimited size
              into path-tmp-exe
           end-string.                                                  
                 
           inspect path-tmp-exe replacing trailing low-value by spaces.
           open output tmp-exe.
           close       tmp-exe.
           open i-o    tmp-exe. 

           accept  path-tmp-exe-dupl from environment "PATH_ST".
           inspect path-tmp-exe-dupl replacing trailing spaces by 
           low-value.
           string  path-tmp-exe-dupl delimited low-value
                   "path-tmp-exe-dupl_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
              into path-tmp-exe-dupl
           end-string.                                                  
                 
           inspect path-tmp-exe-dupl replacing trailing low-value by 
           spaces.
           open output tmp-exe-dupl.    
           close       tmp-exe-dupl.
           open i-o    tmp-exe-dupl.

           accept  path-tmp-hit from environment "PATH_ST".
           inspect path-tmp-hit replacing trailing spaces by low-value.
           string  path-tmp-hit delimited low-value
                   "tmp-hit_"   delimited size
                   como-data    delimited size
                   "_"          delimited size
                   como-ora     delimited size
              into path-tmp-hit
           end-string.                                                  
                 
           inspect path-tmp-hit replacing trailing low-value by spaces.
           open output tmp-hit.    
           close       tmp-hit.
           open i-o    tmp-hit.                                    

      ***---
       CLOSE-TMP.                  
           close       tmp-exe-effort.
           delete file tmp-exe-effort.

           close       tmp-wod-exe.
           delete file tmp-wod-exe.
                                        
           close       tmp-exe-dupl.
           delete file tmp-exe-dupl.

           close       tmp-exe.
      
      ***---
       LOAD-GRID.
           move low-value to tex-rec.
           move 0 to save-day col-exe-prg.
           start tmp-exe key >= tex-key
                 invalid continue 
             not invalid
                 move 1 to riga
                 perform until 1 = 2
                    read tmp-exe next 
                      at end 
                         perform RIGA-DIV
                         perform DISPLAY-DURATA
                         exit perform 
                    end-read    
                    if save-day = 0                    
                       move 0 to tot-durata tot-exe tot-series
                       move tex-day to save-day
                    end-if
                    if tex-day not = save-day  
                       perform RIGA-DIV
                       move 0 to tot-exe tot-series
                       perform DISPLAY-DURATA
                       move 0 to col-exe-prg tot-durata
                       move tex-day to save-day
                    end-if   
                    move tex-split to col-exe-prg
                    add 1 to tot-exe
                    move tex-day to col-day
                    move tex-exe-code to exe-code
                    read exercises
                    move exe-grp-code to col-grp-code grp-code
                    read groups
                    move grp-desc to col-grp-desc
                    move tex-exe-code to col-exe-code
                    move tex-exe-desc to col-exe-desc
                                         
                    move wom-split-el-split-int-code(tex-day, tex-split)
                      to int-code
                    read intexe

                    if fromAggiungi
                       move tex-series to col-series
                       move tex-reps   to col-reps
                    else
                       if exe-isMulti = 1
                          evaluate wom-effort
                          when 1 move  5 to col-series
                                 move  5 to col-reps
                          when 2 move  6 to col-series
                                 move 10 to col-reps
                          when 3 move 10 to col-series
                                 move  8 to col-reps
                          end-evaluate                               
                          inspect col-reps 
                                  replacing leading x"30" by x"20"
                          call "C$JUSTIFY" using col-reps, "L"
                       else                  
                          move int-series to col-series
                                                
                          initialize col-reps
                          if int-restpause > 0  
                             move int-restpause to como-range-from
                             inspect como-range-from 
                                     replacing leading x"30" by x"20"
                             inspect int-desc replacing trailing spaces 
           by low-value
                             call "C$JUSTIFY" using como-range-from, "L"
                             inspect como-range-from replacing trailing 
           spaces by low-value
                             string int-desc       delimited low-value
                                    " ("           delimited size
                                    int-restpause  delimited low-value
                                    ")"            delimited size
                               into col-reps
                             end-string
                          else
                             if int-range-from = 99 and int-range-to = 
           99
                                move "Max" to col-reps
                             else
                                move int-range-from to como-range-from
                                inspect como-range-from replacing 
           leading x"30" by x"20"
                                call "C$JUSTIFY" using como-range-from, 
           "L"
                                inspect como-range-from replacing 
           trailing spaces by low-value
                             
                                move int-range-to to como-range-to      
                         
                                inspect como-range-to replacing leading 
           x"30" by x"20"  
                                call "C$JUSTIFY" using como-range-to, "L
      -    ""          
                                inspect como-range-to replacing 
           trailing spaces by low-value
                             
                                initialize col-reps
                                string como-range-from delimited 
           low-value
                                       "-"             delimited size
                                       como-range-to   delimited 
           low-value
                                  into col-reps
                                end-string
                             end-if
                          end-if
                       end-if
                    end-if
                    add 1 to riga                                
                    modify gd1(riga, 78-col-day),      cell-data = 
           col-day
                    modify gd1(riga, 78-col-prg),      cell-data = 
           col-exe-prg
                    modify gd1(riga, 78-col-grp-code), cell-data = 
           col-grp-code
                    modify gd1(riga, 78-col-grp-desc), cell-data = 
           col-grp-desc
                    modify gd1(riga, 78-col-exe-code), cell-data = 
           col-exe-code
                    modify gd1(riga, 78-col-exe-desc), cell-data = 
           col-exe-desc
                    if col-series = 0
                       modify gd1(riga, 78-col-series),   cell-data = 
           spaces
                    else
                       modify gd1(riga, 78-col-series),   cell-data = 
           col-series
                    end-if
                    modify gd1(riga, 78-col-reps),     cell-data = 
           col-reps

                    add col-series to tot-series

                    move col-reps   to tex-reps
                    move col-series to tex-series
                    rewrite tex-rec

                    move int-restpause to hid-restpause
                    move col-day       to hid-tex-day
                    move tex-split     to hid-tex-split
                    move grp-mcg-code  to hid-mcg-code
                    modify gd1(riga, 78-col-day), hidden-data hiddenData

                    compute tot-durata  = tot-durata +
                            exe-setting +
                          ( col-series * int-time  ) +
                          ( int-rest   * ( col-series - 1 ) )

                    move tex-day      to th-day
                    move tex-mcg-code to th-mcg-code
                    write th-rec invalid rewrite th-rec end-write

                 end-perform
           end-start.

           close tmp-hit.

           modify gd1, mass-update = 0.

           inquire gd1, last-row in tot-righe.
           if tot-righe > 1
              move 1 to mod
           else
              move 0 to mod
           end-if.         
           perform ABILITAZIONI.

      ***---
       RIGA-DIV.                 
           move 0 to schema-exe.
           perform varying idx from 1 by 1 
                     until idx > 20
              if wom-split-el-split-sigla(save-day, idx) = spaces
                 exit perform
              end-if
              add 1 to schema-exe
           end-perform.   
           add 1 to riga.           
           move riga to riga-div.
           perform VALORI-RIGA-DIV.
           move schema-exe to hid-tot-exe.
           modify gd1(riga-div, 78-col-day), hidden-data hid-tot-exe.

      ***---
       DISPLAY-DURATA.
           initialize como-durata.
           if tot-durata > 3600
              divide tot-durata by 3600 giving hh remainder resto
              if resto > 0
                 if resto > 60
                    compute mm = resto / 60
                 else
                    move resto to mm
                 end-if
              else
                 move 0 to mm 
              end-if
              move mm to como-mm
              inspect como-mm replacing leading x"30" by x"20"
              call "C$JUSTIFY" using como-mm, "L"                   
              inspect como-mm replacing trailing spaces by low-value

              move hh to como-hh
              inspect como-hh replacing leading x"30" by x"20"
              call "C$JUSTIFY" using como-hh, "L"
              inspect como-hh replacing trailing spaces by low-value
                    
              if hh = 1             
                 move "ora" to como-ora-e
              else
                 move "ore" to como-ora-e
              end-if

              if mm = 1             
                 move "minuto" to como-minuto-i
              else
                 move "minuti" to como-minuto-i
              end-if

              string  como-hh       delimited low-value
                      " "           delimited size
                      como-ora-e    delimited size
                      " "           delimited size
                      como-mm       delimited low-value
                      " "           delimited size
                      como-minuto-i delimited size
                 into como-durata
              end-string
           else
              compute mm = tot-durata / 60
              move mm to como-mm
              inspect como-mm replacing leading x"30" by x"20"
              call "C$JUSTIFY" using como-mm, "L"
              inspect como-mm replacing trailing spaces by low-value

              if mm = 1             
                 move "minuto" to como-minuto-i
              else
                 move "minuti" to como-minuto-i
              end-if

              string  como-mm       delimited low-value
                      " "           delimited size
                      como-minuto-i delimited size
                 into como-durata
              end-string
           end-if.

           evaluate save-day
           when 1 modify gd-schema( 2, 12), cell-data como-durata
           when 2 modify gd-schema( 4, 12), cell-data como-durata
           when 3 modify gd-schema( 6, 12), cell-data como-durata
           when 4 modify gd-schema( 8, 12), cell-data como-durata
           when 5 modify gd-schema(10, 12), cell-data como-durata
           when 6 modify gd-schema(12, 12), cell-data como-durata
           when 7 modify gd-schema(14, 12), cell-data como-durata
           end-evaluate.
                                                    
      ***---     
       LOAD-EXERCISES-ALLOWED-BY-EFFORT.
           move "Carico gli esercizi" to lab-attesa-buf.
           display lab-attesa
           
           move low-value to exe-key.
           start exercises key >= exe-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read exercises next at end exit perform end-read
                                                    
                    if exe-isDisable = 1 exit perform cycle end-if
                    move exe-int-code to int-code
                    read intexe no lock
                    move exe-grp-code to grp-code
                    read groups no lock                                 
                    if exe-isMulti = 1 and cb-mul-buf = "No"
                       exit perform cycle
                    end-if
                    if int-effort <= effort-wod or 
                       exe-isMulti = 1 and cb-mul-buf = "Si"
                       perform varying idx-gruppi from 1 by 1 
                                 until idx-gruppi > tot-gruppi          
                      
                                                    
                          if el-mcg-code(idx-gruppi) = grp-mcg-code
                             move exe-code      to twe-exe-code
                             move exe-desc      to twe-exe-desc
                             move grp-mcg-code  to twe-mcg-code
                             move int-effort    to twe-effort
                             move exe-isMulti   to twe-exe-isMulti
                             move exe-int-code  to twe-int-code
                             move exe-isRestpause to twe-exe-restpause
                             write twe-rec 
                          end-if
                       end-perform
                    end-if
                 end-perform
           end-start.           
       
      ***---
       LOAD-EXERCISES-MULTIJOINT.                  
           if cb-mul-buf = "No" exit paragraph end-if.
           
           move "Carico i multiarticolari" to lab-attesa-buf.
           display lab-attesa
           
                                    
           perform varying idx-gruppi from 1 by 1 
                     until idx-gruppi > tot-gruppi
              move low-value to twe-rec
              move el-mcg-code(idx-gruppi) to twe-mcg-code
              set twe-exe-isMulti-yes to true
              move 0 to tot-exe 

              start tmp-wod-exe key >= twe-key
                    invalid continue
                not invalid
                    perform until 1 = 2        
                       read tmp-wod-exe next
                         at end exit perform 
                       end-read           
                                                 
                       if twe-mcg-code not = el-mcg-code(idx-gruppi) or
                          twe-exe-isMulti = 0
                          exit perform
                       end-if
                       add 1 to tot-exe    
                       move twe-exe-code      to el-exe-code(tot-exe)
                       move twe-exe-desc      to el-exe-desc(tot-exe)
                       move 0                 to el-exe-used(tot-exe)
                    end-perform
              end-start

             |Phase 2
              if tot-exe > 0
                 move tot-exe to ex-remain  
                 perform varying idx-days from 1 by 1 
                           until idx-days > wom-days
                    perform varying idx-split from 1 by 1 
                              until idx-split > 20
                       
                       if wom-split-el-split-sigla(idx-days, idx-split) 
            = space
                          exit perform
                       end-if

                       evaluate wom-split-el-split-sigla(idx-days, 
           idx-split)
                       when el-mcg-sigla(1) move el-mcg-code(1) to 
           mcg-code
                       when el-mcg-sigla(2) move el-mcg-code(2) to 
           mcg-code
                       when el-mcg-sigla(3) move el-mcg-code(3) to 
           mcg-code
                       when el-mcg-sigla(4) move el-mcg-code(4) to 
           mcg-code
                       when el-mcg-sigla(5) move el-mcg-code(5) to 
           mcg-code
                       when el-mcg-sigla(6) move el-mcg-code(6) to 
           mcg-code
                       when el-mcg-sigla(7) move el-mcg-code(7) to 
           mcg-code
                       when other exit perform
                       end-evaluate

                       move wom-split-el-split-int-code(idx-days, 
           idx-split)
                         to int-code
                       read intexe no lock
                       if int-effort not = 4
                          exit perform
                       end-if

                       if el-mcg-code(idx-gruppi) = mcg-code
                          perform until 1 = 2
                             compute idx = function random * (tot-exe)
                             add 1 to idx
                             if el-exe-used(idx) = 0 or
                                ex-remain = 0
                                move idx-days         to tex-day
                                move idx-split        to tex-split
                                move mcg-code         to tex-mcg-code
                                move el-exe-code(idx) to tex-exe-code
                                move el-exe-desc(idx) to tex-exe-desc
                                move int-code         to tex-int-code
                                set tex-exe-isMulti-yes to true
                                write tex-rec

                                move 1                to 
           el-exe-used(idx)
                                if ex-remain > 0
                                   subtract 1 from ex-remain
                                end-if
                                exit perform
                             end-if
                          end-perform
                          exit perform
                       end-if
                    end-perform
                 end-perform
              end-if
           end-perform.

      ***---
       LOAD-EXERCISES.      
           move "Dispongo gli esercizi" to lab-attesa-buf.
           display lab-attesa
           
           perform varying idx-days from 1 by 1 
                     until idx-days > wom-days    
              perform varying idx-split from 1 by 1 
                        until idx-split > 20 
                                           
                 move idx-days  to tex-day
                 move idx-split to tex-split
                 read tmp-exe
                      invalid continue
                  not invalid exit perform cycle |Salto i multi se già messi
                 end-read                           

                 move low-value to twe-rec
                 evaluate wom-split-el-split-sigla(idx-days, idx-split)
                 when el-mcg-sigla(1) move el-mcg-code(1) to mcg-code 
           twe-mcg-code
                 when el-mcg-sigla(2) move el-mcg-code(2) to mcg-code 
           twe-mcg-code
                 when el-mcg-sigla(3) move el-mcg-code(3) to mcg-code 
           twe-mcg-code
                 when el-mcg-sigla(4) move el-mcg-code(4) to mcg-code 
           twe-mcg-code
                 when el-mcg-sigla(5) move el-mcg-code(5) to mcg-code 
           twe-mcg-code
                 when el-mcg-sigla(6) move el-mcg-code(6) to mcg-code 
           twe-mcg-code
                 when el-mcg-sigla(7) move el-mcg-code(7) to mcg-code 
           twe-mcg-code
                 when other exit perform
                 end-evaluate       

                 move wom-split-el-split-int-code(idx-days, idx-split)
                   to int-code  

                 move spaces to como-dupl
                 perform ADD-RANDOM-EXERCISE

              end-perform
           end-perform.

      ***---
       ADD-RANDOM-EXERCISE.
           set twe-exe-isMulti-no to true.    
                                              
           read intexe no lock.
           move int-effort to twe-effort.     

           move 0 to tot-exe.
                              
           start tmp-wod-exe key >= twe-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-wod-exe next at end exit perform end-read
                                              
                    if twe-mcg-code  not = mcg-code or
                       twe-exe-isMulti-yes          or
                       twe-effort    not = int-effort
                       exit perform
                    end-if

                    if twe-exe-restpause = 0 and
                       int-restpause > 0         
                       exit perform cycle
                    end-if             
                       
                    add 1 to tot-exe    
                    move twe-exe-code      to el-exe-code(tot-exe)
                    move twe-exe-desc      to el-exe-desc(tot-exe)
                    move twe-effort        to el-exe-effort(tot-exe)
                    move 0                 to el-exe-used(tot-exe)
                    move twe-exe-restpause to el-exe-restpause(tot-exe)
                 end-perform
           end-start.      
           
           if ( como-dupl not = spaces and tot-exe > 1 ) or
              ( como-dupl     = spaces and tot-exe > 0 )
              move tot-exe to ex-remain  
              perform until 1 = 2
                                           
                 compute idx = function random * (tot-exe)
                 add 1 to idx
                 if el-exe-used(idx) = 0 or
                    ex-remain = 0

                    if como-dupl not = spaces
                       if como-dupl not = el-exe-desc(idx)
                          move idx-days         to tex-day
                          move idx-split        to tex-split     
                          move mcg-code         to tex-mcg-code
                          move el-exe-code(idx) to tex-exe-code
                          move el-exe-desc(idx) to tex-exe-desc
                          move int-code         to tex-int-code
                          set tex-exe-isMulti-no to true
                          write tex-rec invalid rewrite tex-rec 
           end-write
                    
                          move 1                to el-exe-used(idx)
                          if ex-remain > 0
                             subtract 1 from ex-remain
                          end-if  
                                                     
                          if ted-num > 0 and 
                             como-dupl not = el-exe-desc(idx)
                             subtract 1 from ted-num 
                          end-if
                          exit perform
                       end-if
                    else               
                       move idx-days         to tex-day
                       move idx-split        to tex-split     
                       move mcg-code         to tex-mcg-code
                       move el-exe-code(idx) to tex-exe-code
                       move el-exe-desc(idx) to tex-exe-desc
                       move int-code         to tex-int-code
                       set tex-exe-isMulti-no to true
                       write tex-rec invalid rewrite tex-rec end-write
                    
                       move 1                to el-exe-used(idx)
                       if ex-remain > 0
                          subtract 1 from ex-remain
                       end-if   
                       exit perform
                    end-if
                 end-if
              end-perform 
           end-if.

      ***---
       REMOVE-DUPLICATES.
           move "Rimuovo i duplicati" to lab-attesa-buf.
           display lab-attesa
           
           perform 5 times |Se non riesco dopo 5 tentativi esco, significa che non ho esercizi sufficienti
              move 0 to tot-subst

              perform varying como-giorno from 1 by 1 
                        until como-giorno > wom-days  

                 close       tmp-exe-dupl
                 open output tmp-exe-dupl
                 close       tmp-exe-dupl
                 open i-o    tmp-exe-dupl
                 move low-value to tex-rec
                 move como-giorno  to tex-day
                 move 0 to col-exe-prg
                 start tmp-exe key >= tex-key
                       invalid continue 
                   not invalid
                       move 1 to riga
                       perform until 1 = 2
                          read tmp-exe next 
                            at end exit perform 
                          end-read 
                          if tex-day not = como-giorno
                             exit perform
                          end-if                      
                                                    
                          if tex-exe-isMulti-yes exit perform cycle 
           end-if
                          initialize como-nome counter
                          inspect tex-exe-desc replacing trailing 
           spaces by low-value
                          inspect tex-exe-desc tallying counter for 
           characters before low-value
                          if tex-exe-desc(counter - 3 : 4) = "HARD"
                             move tex-exe-desc(1:counter - 4)to 
           como-nome
                          end-if 
                          if tex-exe-desc(counter - 5 : 6) = "MEDIUM"
                             move tex-exe-desc(1:counter - 6)to 
           como-nome
                          end-if
                          if tex-exe-desc(counter - 4 : 5) = "LIGHT"
                             move tex-exe-desc(1:counter - 5)to 
           como-nome
                          end-if
                          if como-nome = spaces
                             move tex-exe-desc to como-nome
                          end-if
                          inspect tex-exe-desc replacing trailing 
           low-value by spaces
                          move tex-day   to ted-day
                          move como-nome to ted-nome-dupl
                          read tmp-exe-dupl
                               invalid 
                               move 1 to ted-num
                               write ted-rec end-write
                           not invalid
                               add  1 to ted-num
                               add  1 to tot-subst
                               rewrite ted-rec end-rewrite
                          end-read
                          move como-nome to tex-nome-dupl
                          rewrite tex-rec
                       end-perform
                 end-start
                                                                    
                 move low-value to ted-key
                 move 2         to ted-num
                 start tmp-exe-dupl key >= ted-k-num
                       invalid continue
                   not invalid
                       perform until 1 = 2
                          read tmp-exe-dupl next at end exit perform 
           end-read 
                          if ted-num < 2
                             exit perform
                          end-if
                          move ted-day       to tex-day
                          move ted-nome-dupl to tex-nome-dupl
                          start tmp-exe key >= tex-k-dupl
                                invalid continue
                            not invalid
                                perform until 1 = 2
                                   read tmp-exe next 
                                     at end exit perform 
                                   end-read
                                   if tex-day       not = ted-day    or
                                      tex-nome-dupl not = ted-nome-dupl
                                      exit perform
                                   end-if    
                                                             
                                   move low-value to twe-rec
                                   move tex-mcg-code to mcg-code 
           twe-mcg-code
                                   move tex-int-code to int-code
                                                                    
                                   initialize tab-exe 
                                              replacing numeric data by 
           zeroes
                                                   alphanumeric data by 
           spaces
                                   move tex-day      to idx-days   
                                   move tex-split    to idx-split 
                                   move tex-exe-desc to como-dupl
                                   perform ADD-RANDOM-EXERCISE

                                   if ted-num < 2
                                      exit perform
                                   end-if
              
                                end-perform
                          end-start
                       end-perform
                 end-start 
              end-perform 
              if tot-subst = 0
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       INIT.
      * <TOTEM:PARA. INIT>
           move 0 to StatusHelp.
           move 1 to mod-k.
           set StatusVisua    to true  
           .
      * <TOTEM:END>

       INIT-OLD-REC.
      * <TOTEM:PARA. INIT-OLD-REC>
      *     initialize old-tsc-rec replacing numeric data by zeroes
      *                                 alphanumeric data by spaces.
      *
      *     initialize old-rsc-rec replacing numeric data by zeroes
      *                                 alphanumeric data by spaces.
      *
      *     move tsc-cliente to old-tsc-cliente 
           .
      * <TOTEM:END>

       LOOKUP-EXE.
      * <TOTEM:PARA. LOOKUP-EXE>
           read exercises no lock
           move exe-int-code to int-code
           read intexe
           move int-effort to s-int-effort
           read groups no lock invalid move spaces to grp-mcg-code 
           end-read.
           move grp-mcg-code to s-mcg-code
           perform CREA-ZOOM-EXE-MCG.
           move low-value to zem-rec
           move s-int-effort to zem-int-effort
           move path-zoom-exe-mcg to ext-file
           move "zoom-exe-mcg"  to Como-File
           call   "zoom-gt"  using  como-file, zem-rec
                            giving stato-zoom
           cancel "zoom-gt".
           if stato-zoom = 0
              move zem-exe-code to col-exe-code exe-code
              read exercises
              move exe-int-code to int-code
              read intexe 
              move int-restpause to hid-restpause

              move zem-exe-desc to col-exe-desc
              move zem-grp-desc to col-grp-desc
              move zem-grp-code to col-grp-code
              modify gd1(riga, 78-col-exe-code), 
                     cell-data = col-exe-code
              modify gd1(riga, 78-col-exe-desc), 
                     cell-data = col-exe-desc
              modify gd1(riga, 78-col-grp-code), 
                     cell-data = col-grp-code
              modify gd1(riga, 78-col-grp-desc), 
                     cell-data = col-grp-desc
                                        
              inquire gd1(riga, 78-col-day), 
                     hidden-data = hiddenData
              move hid-tex-key to tex-key
              open i-o tmp-exe
              read tmp-exe 
              move exe-code     to tex-exe-code
              move exe-desc     to tex-exe-desc
              move exe-int-code to tex-int-code
              move exe-isMulti  to tex-exe-isMulti
              rewrite tex-rec
              close tmp-exe
           end-if.    

      ***---
       CREA-ZOOM-EXE-MCG.          
           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  path-zoom-exe-mcg from environment "PATH_ST".
           inspect path-zoom-exe-mcg replacing trailing spaces by 
           low-value.
           string  path-zoom-exe-mcg delimited low-value
                   "path-zoom-exe-mcg_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
              into path-zoom-exe-mcg
           end-string.                                                  
                 
           inspect path-zoom-exe-mcg replacing trailing low-value by 
           spaces.
           open output zoom-exe-mcg.    
           close       zoom-exe-mcg
           open i-o    zoom-exe-mcg

           move low-value to exe-code.
           start exercises key >= exe-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read exercises next at end exit perform end-read
                    if exe-isDisable = 1 exit perform cycle end-if
                    move exe-grp-code to grp-code
                    read groups no lock
                         invalid move spaces to grp-mcg-code
                    end-read
                    if grp-mcg-code not = s-mcg-code and 
                       s-mcg-code   not = spaces
                       exit perform cycle
                    end-if
                    move exe-code to zem-exe-code
                    move exe-desc to zem-exe-desc
                    move exe-int-code to int-code
                    read intexe
                    move int-desc   to zem-int-desc
                    move grp-desc   to zem-grp-desc
                    move grp-code   to zem-grp-code
                    move int-effort to zem-int-effort
                    write zem-rec
                 end-perform
           end-start.
           
           close zoom-exe-mcg 
           .
      * <TOTEM:END>

       NUOVO.
      * <TOTEM:PARA. NUOVO>
           perform SALV-MOD.
      
           if tutto-ok  
              perform DATI-DEFAULT
           end-if 
           .
      * <TOTEM:END>

       RESETTA-FONT.
      * <TOTEM:PARA. RESETTA-FONT>
           inquire gd1, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              inquire gd1(riga, 78-col-day), 
                     hidden-data = hiddenData
              if hid-tex-day > 0
                 modify gd1(riga), row-font = Calibri12-Occidentale,
                                   row-color 0
              end-if
           end-perform 
           .
      * <TOTEM:END>

       RICALCOLA-HIT-DIV.
      * <TOTEM:PARA. RICALCOLA-HIT-DIV>
           modify gd1, mass-update = 1.
           open output tmp-hit.
           close       tmp-hit
           open i-o    tmp-hit.
           move 0 to save-day tot-series tot-exe.
           inquire gd1, last-row in tot-righe.
           perform varying store-riga from 2 by 1 
                     until store-riga > tot-righe                       
              
              inquire gd1(store-riga, 78-col-day), hidden-data 
           hiddenData
                                                     cell-data th-day
              if hid-mcg-code = spaces and tot-exe = 0
                 move 0 to col-series
                 modify gd1(store-riga, 78-col-series), cell-data 
           col-series
              end-if
              if hid-mcg-code = spaces 
                 if save-day not = 0 
                    inquire gd1(store-riga, 78-col-day), hidden-data 
           hid-tot-exe
                    move hid-tot-exe to schema-exe
                    move store-riga to riga-div
                    perform VALORI-RIGA-DIV
                    move 0 to tot-series tot-exe
                 end-if
                 exit perform cycle
              end-if
              if save-day = 0
                 move th-day to save-day
              end-if
              add 1 to tot-exe
              inquire gd1(store-riga, 78-col-series), cell-data 
           col-series
              add col-series to tot-series
              move hid-mcg-code to th-mcg-code
              write th-rec invalid rewrite th-rec end-write
           end-perform.
           close tmp-hit.

           perform varying store-riga from 2 by 1 
                     until store-riga > tot-righe                       
              
              inquire gd1(store-riga, 78-col-day), hidden-data 
           hiddenData
              if hid-mcg-code not = spaces
                 exit perform cycle
              end-if
              inquire gd1(store-riga, 78-col-day), hidden-data 
           hid-tot-exe
              if hid-tot-exe = 0
                 exit perform cycle
              end-if
              inquire gd1(store-riga, 78-col-series), cell-data in 
           col-series
              if col-series = 0
                 modify gd1, record-to-delete store-riga
              end-if
           end-perform.
           modify gd1, mass-update = 0 
           .
      * <TOTEM:END>

       RIEMPI-CHIAVE.
      * <TOTEM:PARA. RIEMPI-CHIAVE>
      *     inquire ef-cliente, value in ef-cliente-buf.
      *     move ef-cliente-buf to tsc-cliente 
           .
      * <TOTEM:END>

       RIEMPI-GRID.
      * <TOTEM:PARA. RIEMPI-GRID>
      *     move 0 to store-riga.
      *     modify gd1, mass-update = 1.
      *     perform RESETTA-GRID.
      *     move low-value  to rsc-rec.
      *     move tsc-codice to rsc-codice.
      *
      *     set tutto-ok   to true.
      *     start rschede key >= rsc-chiave
      *           invalid  set errori  to true
      *     end-start.
      *
      *     if tutto-ok
      *        move 2 to riga
      *        perform until 1 = 2
      *           read rschede next no lock 
      *              at end 
      *                 exit perform 
      *           end-read
      *           if rsc-codice not = tsc-codice
      *              exit perform
      *           end-if
      *           move rsc-data  to como-data
      *           perform DATE-TO-SCREEN
      *           move como-data to col-data
      *           move rsc-articolo to art-codice col-art
      *           if col-art = spaces 
      *              move rsc-descrizione to art-descrizione
      *           else
      *              read articoli no lock 
      *                invalid move "** NON TROVATO **" to art-descrizione
      *              end-read
      *           end-if
      *           move art-descrizione to col-des
      *           move rsc-qta         to col-qta
      *           move rsc-prz         to col-prz
      *           move rsc-sconto1     to col-sc1
      ******           move rsc-sconto2     to col-sc2
      *           move rsc-netto       to col-netto
      *           move rsc-note        to col-note
      *           move 0               to col-numdoc
      *           move 0               to col-datadoc
      *           move spaces          to hid-documento
      *           if rsc-numfat not = 0
      *              move rsc-numfat  to col-numdoc
      *              move rsc-datafat to como-data
      *              perform DATE-TO-SCREEN
      *              move como-data   to col-datadoc
      *              modify gd1(riga, 78-col-numdoc),  cell-color 481
      *              modify gd1(riga, 78-col-datadoc), cell-color 481
      *              set hid-fattura to true
      *           end-if
      *           if rsc-numcor not = 0
      *              move rsc-numcor  to col-numdoc
      *              move rsc-datacor to como-data
      *              perform DATE-TO-SCREEN
      *              move como-data   to col-datadoc
      *              modify gd1(riga, 78-col-numdoc),  cell-color 193
      *              modify gd1(riga, 78-col-datadoc), cell-color 193
      *              set hid-corrisp to true
      *           end-if
      *           if rsc-numcor      = 0 and 
      *              rsc-numfat      = 0 and 
      *              num-doc     not = 0 and
      *              store-riga      = 0
      *              move riga to store-riga
      *           end-if
      *           modify gd1(riga, 78-col-data),    cell-data col-data
      *           modify gd1(riga, 78-col-art),     cell-data col-art
      *           modify gd1(riga, 78-col-des),     cell-data col-des
      *           modify gd1(riga, 78-col-qta),     cell-data col-qta
      *           modify gd1(riga, 78-col-prz),     cell-data col-prz
      *           modify gd1(riga, 78-col-sc1),     cell-data col-sc1
      ******           modify gd1(riga, 78-col-sc2),     cell-data col-sc2
      *           modify gd1(riga, 78-col-netto),   cell-data col-netto
      *           modify gd1(riga, 78-col-note),    cell-data col-note
      *           modify gd1(riga, 78-col-numdoc),  cell-data col-numdoc
      *           modify gd1(riga, 78-col-datadoc), cell-data col-datadoc
      *           modify gd1(riga, 1), hidden-data gruppo-hidden
      *           add 1 to riga
      *        end-perform
      *        subtract 2 from riga giving RigheIniziali
      *     end-if.
      *     modify gd1, mass-update = 0.
      *     if store-riga = 0
      *        move 2 to store-riga
      *     end-if.
      *     move store-riga to riga.
      *     move 1          to colonna.
      *     perform PUNTA-CELLA.
      *     perform VALORE-RIGA.
      *     move rsc-rec      to old-rsc-rec.
      *     move rsc-data     to como-old-rsc-data.
      *     move rsc-articolo to como-old-rsc-articolo 
           .
      * <TOTEM:END>

       SALV-MOD.
      * <TOTEM:PARA. SALV-MOD>
           set tutto-ok to true.
           set SiSalvato to true.

           inquire gd1, last-row in tot-righe.
           if tot-righe > 1
              set NoSalvato to true
           end-if.

           if NoSalvato
              display message "Vuoi resettare il lavoro fatto?"
                        title titolo
                         type mb-yes-no
                       giving scelta       
       
              if scelta = mb-no
                 set errori to true
              end-if
           end-if 
           .
      * <TOTEM:END>

       SALVA.
      * <TOTEM:PARA. SALVA>
      *     if mod = 0 
      *        exit paragraph 
      *     end-if.
      *
      *     set tutto-ok to true.
      *
      *     set controllo-finale to true.
      *     perform varying control-id from 78-ID-ef-cliente by 1
      *               until control-id > 78-ID-ef-cliente
      *        perform CONTROLLO
      *        if errori 
      *           exit perform
      *        end-if
      *     end-perform.
      *
      *     if tutto-ok
      *        perform X-Y
      *        if tot-righe = 1
      *           set errori to true
      *           display message "Nessun articolo inserito"
      *                     title tit-err
      *                      icon 2
      *           move 78-ID-gd1 to control-id
      *           move 1 to colonna
      *        else
      *           perform VALORE-RIGA
      *           if not RigaVuota
      *              perform varying colonna from 78-col-data by 1
      *                        until colonna > 78-max-colonne|78-col-tipo-imp
      *                 perform CONTROLLO-RIGA
      *                 if errori exit perform end-if
      *              end-perform
      *           end-if
      *        end-if
      *     end-if.
      *            
      *     set controllo-finale to false.
      *
      *     if errori
      *        perform ABILITAZIONI
      *        if store-id = 78-ID-gd1
      *           perform CANCELLA-COLORE
      *           perform PUNTA-CELLA
      *        else
      *           move store-id to control-id
      *           move 4        to accept-control
      *        end-if
      *     else
      *
      *        if nuovo
      *           move high-value to      tsc-codice
      *           start tschede key <=    tsc-codice
      *                 invalid move 1 to tsc-codice
      *             not invalid
      *                 read tschede previous with no lock
      *                      at end move 1 to tsc-codice
      *                  not at end add  1 to tsc-codice
      *                 end-read
      *           end-start
      *           accept tsc-data-creazione from century-date
      *        end-if
      *
      *        perform DELETE-RIGHE
      *        perform FORM1-BUF-TO-FLD
      *        perform varying riga from 2 by 1 
      *                  until riga > tot-righe
      *           perform VALORE-RIGA
      *           perform SCRIVI-RIGA
      *        end-perform
      *
      *        perform CANCELLA-COLORE
      *        write tsc-rec invalid rewrite tsc-rec end-write 
      *
      *        if nuovo
      *           set vecchio to true
      *           perform STAMPA
      *        end-if
      *
      *        set vecchio      to true
      *        set stampa       to true
      *
      *        perform TORNA-IN-VISUA
      *        perform VALORIZZA-OLD
      *
      *     end-if.
      *
      *     display form1 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           set tutto-ok to true.
           perform X-Y.

           |Se abbandono una riga nuova
           if riga not = event-data-2
              inquire gd1(riga, 78-col-day), cell-data col-day
              if col-day = 0
                 modify gd1, record-to-delete = riga
              end-if
           end-if.

           move 0 to StatusHelp
                             
           modify gd1, start-x = 1,
                             x = 78-col-reps,
                       start-y = event-data-2,
                             y = event-data-2,
                  region-color = 257,
                  cursor-color = colore-nu.

           evaluate event-data-1
           when 78-col-exe-code move 1 to StatusHelp
           end-evaluate.
           perform STATUS-HELP 
           .
      * <TOTEM:END>

       STAMPA.
      * <TOTEM:PARA. STAMPA>
           set s-stampa to true.
           perform STAMPA-ANTEPRIMA 
           .
      * <TOTEM:END>

       STAMPA-ANTEPRIMA.
      * <TOTEM:PARA. STAMPA-ANTEPRIMA>
           if s-anteprima
              accept link-stampante from environment "STAMPANTE_ANTEPRIM
      -    "A"
           else
              move spaces to link-stampante
           end-if.
           call   "st-wod" using path-tmp-exe, link-stampante
           cancel "st-wod"
           .
      * <TOTEM:END>

       VALORE-RIGA.
      * <TOTEM:PARA. VALORE-RIGA>
      *     inquire gd1(riga, 78-col-data),    cell-data col-data.
      *     inquire gd1(riga, 78-col-art),     cell-data col-art. 
      *     inquire gd1(riga, 78-col-des),     cell-data col-des.
      *     inquire gd1(riga, 78-col-qta),     cell-data col-qta.
      *     inquire gd1(riga, 78-col-prz),     cell-data col-prz.
      *     inquire gd1(riga, 78-col-sc1),     cell-data col-sc1.
      ******     inquire gd1(riga, 78-col-sc2),     cell-data col-sc2.
      *     inquire gd1(riga, 78-col-netto),   cell-data col-netto.
      *     inquire gd1(riga, 78-col-note),    cell-data col-note.
      *     inquire gd1(riga, 78-col-numdoc),  cell-data col-numdoc.
      *     inquire gd1(riga, 78-col-datadoc), cell-data col-datadoc.
      *     inquire gd1(riga, 1), hidden-data gruppo-hidden.
      *
      *     move col-data    to como-col-data.
      *     move col-qta     to como-col-qta.
      *     move col-prz     to como-col-prz.
      *     move col-sc1     to como-col-sc1.
      ******     move col-sc2     to como-col-sc2.
      *     move col-netto   to como-col-netto.
      *     move col-numdoc  to como-col-numdoc.
      *     move col-datadoc to como-col-datadoc.
      *
      *     if como-col-data    = 0 and
      *        col-art          = spaces and
      *        col-des          = spaces and
      *        como-col-qta     = 0 and
      *        como-col-prz     = 0 and
      *        como-col-sc1     = 0 and
      ******        como-col-sc2     = 0 and
      *        como-col-netto   = 0 and
      *        col-note         = spaces and
      *        como-col-numdoc  = 0 and
      *        como-col-datadoc = 0
      *        set RigaVuota to true
      *     else
      *        set RigaVuota to false
      *     end-if 
           .
      * <TOTEM:END>

       VALORIZZA-OLD.
      * <TOTEM:PARA. VALORIZZA-OLD>
      *     move tsc-rec to old-tsc-rec.
      *
      *     set vecchio to true.
      *
      *     move 0 to StatusHelp
      *     perform STATUS-HELP.
      *
      *     inquire gd1, last-row in tot-righe.
      *     move 0 to RigaCambiata ColonnaCambiata 
           .
      * <TOTEM:END>

       VALORIZZA-NUOVO.
      * <TOTEM:PARA. VALORIZZA-NUOVO>
      *     move "00"       to status-tschede.
      *     move cli-codice to tsc-cliente.
      *     perform FORM1-IUD-DISPLAY.
      *     display form1.
      *
      *     perform RESETTA-GRID.
      *
      *     move 0 to RigheIniziali.
      *     move 0 to RigaCambiata ColonnaCambiata 
           .
      * <TOTEM:END>

       VALORIZZA-WOD.
      * <TOTEM:PARA. VALORIZZA-WOD>
           inquire cb-int, value cb-int-buf.
           inquire cb-dur, value cb-dur-buf.
           inquire cb-gio, value cb-gio-buf.

           if cb-int-buf = s-cb-int-buf and
              cb-dur-buf = s-cb-dur-buf and
              cb-gio-buf = s-cb-gio-buf 
              exit paragraph 
           end-if.

           inquire cb-dur, value in dur-desc.
           read duration key dur-k-desc 
                invalid move 0 to dur-code
           end-read.

           if cb-int-buf = s-int-buf and
              dur-desc = s-dur-desc and
              cb-gio-buf = s-gio-buf
              exit paragraph
           end-if.              

           move cb-int-buf to s-int-buf.
           move dur-desc   to s-dur-desc.
           move cb-gio-buf to s-gio-buf.

           if cb-gio-buf = "Tutto"
              move 0 to como-giorni
           else
              move cb-gio-buf to como-giorni convert
           end-if.
                                        
           move 0 to effort-wod.

           evaluate cb-int-buf     
           when "Light wod effort"  move 1 to effort-wod
           when "Medium wod effort" move 2 to effort-wod
           when "Heavy wod effort"  move 3 to effort-wod
           end-evaluate.  
                                 
           modify cb-wod, reset-list = 1.
           modify cb-wod, item-to-add = "Nessuno".

           move low-value to wom-desc.
           start wodmap key >= wom-k-desc
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read wodmap next at end exit perform end-read
                    if effort-wod > 0
                       if wom-effort not = effort-wod
                          exit perform cycle
                       end-if
                    end-if
                    if dur-code > 0
                       if wom-dur-code not = dur-code
                          exit perform cycle
                       end-if
                    end-if
                    if como-giorni > 0
                       if wom-days not = cb-gio-buf
                          exit perform cycle
                       end-if
                    end-if
                    modify cb-wod, item-to-add = wom-desc
                 end-perform
           end-start.
                                               
           modify cb-wod, value = "Nessuno".
           modify cb-wod, enabled true.

           perform ABILITA-MACROGRUPPI.
           
           move cb-int-buf to s-cb-int-buf.
           move cb-dur-buf to s-cb-dur-buf.
           move cb-gio-buf to s-cb-gio-buf 
           

           .
      * <TOTEM:END>

       X-Y.
      * <TOTEM:PARA. X-Y>
           inquire gd1, cursor-y in riga,
                        cursor-x in colonna,
                        last-row in tot-righe 
           .
      * <TOTEM:END>

       VALORI-RIGA-DIV.
      * <TOTEM:PARA. VALORI-RIGA-DIV>
           move tot-exe to como-xx1.
           inspect como-xx1 replacing leading x"30" by x"20"
           call "C$JUSTIFY" using como-xx1, "L"
           inspect como-xx1 replacing trailing spaces by low-value
           move schema-exe to como-xx2.
           inspect como-xx2 replacing leading x"30" by x"20"
           call "C$JUSTIFY" using como-xx2, "L"
           inspect como-xx2 replacing trailing spaces by low-value

           initialize como-nome.
           string como-xx1 delimited low-value
                  "/"      delimited size
                  como-xx2 delimited low-value
             into como-nome
           end-string.
                                                                
           modify gd1(riga-div, 78-col-day),      cell-data = como-nome
           modify gd1(riga-div, 78-col-prg),      cell-data = spaces
           modify gd1(riga-div, 78-col-grp-code), cell-data = spaces
           modify gd1(riga-div, 78-col-grp-desc), cell-data = spaces
           modify gd1(riga-div, 78-col-exe-code), cell-data = spaces
           modify gd1(riga-div, 78-col-exe-desc), cell-data = spaces
           
           move tot-series to como-xx1                    
           inspect como-xx1 replacing leading x"30" by x"20"
           call "C$JUSTIFY" using como-xx1, "L"

           modify gd1(riga-div, 78-col-series),   cell-data = como-xx1 
           modify gd1(riga-div, 78-col-reps),     cell-data = spaces 
           modify gd1(riga-div), row-color 304, row-font = 
           Calibri12B-Occidentale 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       TOOL-SALVA-LinkTo.
      * <TOTEM:PARA. TOOL-SALVA-LinkTo>
           INQUIRE TOOL-MODIFICA, VALUE IN MOD           

           INQUIRE TOOL-SALVA, ENABLED IN E-SALVA
           IF E-SALVA = 1
              PERFORM SALVA
           END-IF           
           .
      * <TOTEM:END>
       ANTEPRIMA-LinkTo.
      * <TOTEM:PARA. ANTEPRIMA-LinkTo>
           INQUIRE TOOL-ANTEPRIMA, ENABLED IN E-ANTEPRIMA.
           IF E-ANTEPRIMA = 1
              PERFORM ANTEPRIMA
           END-IF 
           .
      * <TOTEM:END>
       STAMPA-LinkTo.
      * <TOTEM:PARA. STAMPA-LinkTo>
           INQUIRE TOOL-STAMPA, ENABLED IN E-STAMPA
           IF E-STAMPA = 1
              PERFORM STAMPA
           END-IF 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       ginqui-Ev-Before-Program.
      * <TOTEM:PARA. ginqui-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           set environment "KEYSTROKE" to "DATA=44 44".
           set environment "KEYSTROKE" to "DATA=46 46".
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
               
           if path-tmp-hit not = spaces
              delete file tmp-hit
           end-if.
           if path-tmp-exe not = spaces
              delete file tmp-exe
           end-if 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Entry>
           if event-data-1 = 78-col-prg or 
                             78-col-grp-code or 
                             78-col-grp-desc or 
                             78-col-exe-code or 
                             78-col-exe-desc
              set  event-action to event-action-fail-terminate
           end-if.

           inquire gd1(event-data-2, 78-col-day), hidden-data in 
           hiddenData
           if hid-tex-day = 0                   
              set  event-action to event-action-fail-terminate
           end-if.

           if event-data-1 = 78-col-exe-code
              inquire gd1, entry-reason in como-x
              if como-x = x"00" or x"0d" or x"0D"
                 set ApriLookup to true
              end-if
           end-if.

      *     else
      *        perform X-Y
      *        inquire gd1(riga, 78-col-data), cell-data OLD-col-data
      *        move OLD-col-data to como-data
      *        inquire gd1(riga, 78-col-art),  cell-data OLD-col-art
      *
      *        if como-col-data = 0 and colonna not = 78-col-data
      *           set event-action to event-action-fail
      *        end-if
      *
      *        inquire gd1(riga, 78-col-des),     cell-data OLD-col-des
      *        inquire gd1(riga, 78-col-qta),     cell-data OLD-col-qta
      *        inquire gd1(riga, 78-col-sc1),     cell-data OLD-col-sc1
      ******        inquire gd1(riga, 78-col-sc2),     cell-data OLD-col-sc2
      *        inquire gd1(riga, 78-col-netto),   cell-data OLD-col-netto
      *        inquire gd1(riga, 78-col-note),    cell-data OLD-col-note
      *        inquire gd1(riga, 78-col-numdoc),  cell-data OLD-col-numdoc
      *        inquire gd1(riga, 78-col-datadoc), cell-data OLD-col-datadoc
      *
      *        move OLD-col-numdoc to como-col-numdoc
      *        if como-col-numdoc not = 0
      *           if colonna >= 78-col-numdoc
      *              set  event-action to event-action-fail-terminate
      *              inquire gd1, entry-reason in como-x
      *              evaluate como-x
      *              when X"00"|doppio click
      *              when X"0D"|invio
      ******                   move OLD-col-numdoc  to tfa-numero
      ******                   move OLD-col-datadoc to como-data
      ******                   perform DATE-TO-FILE
      ******                   move como-data(1:4)  to tfa-numero
      *                   set VediFattura to true
      *              end-evaluate
      *           else
      *              set event-action to event-action-fail
      *           end-if
      *        else
      *           evaluate colonna
      *           when 78-col-data
      *           when 78-col-art
      *                continue
      *           when 78-col-des
      *                if col-art = spaces
      *                   continue
      *                else
      *                   set event-action to event-action-fail 
      *                end-if
      *           when 78-col-netto
      *           when 78-col-numdoc
      *           when 78-col-datadoc
      *                set event-action to event-action-fail 
      *           when 78-col-qta 
      *           when 78-col-note
      *                continue
      *           when other
      *                set environment "KEYSTROKE" to "DATA=44 46"    
      *           end-evaluate
      *        end-if
      *
      *     end-if 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Finish-Entry>
           set tutto-ok to true.
           perform X-Y.
           perform VALORE-RIGA.
           perform CONTROLLO-RIGA.
      *
      *     evaluate colonna
      *     when 78-col-data
      *          if como-col-data = 0
      *             if not RigaVuota
      *                display message "Cancellare la riga?"
      *                          title titolo
      *                           type mb-yes-no
      *                        default mb-no
      *                         giving scelta
      *                if scelta = mb-no
      *                   set errori to true
      *                else
      *                   initialize rec-grid 
      *                              replacing numeric data by zeroes
      *                                   alphanumeric data by spaces
      *
      *                   move riga to store-riga
      *                   add 1 to riga
      *                   perform VALORE-RIGA
      *                   move rsc-rec to old-rsc-rec
      *                   move store-riga to riga
      *           
      *                   modify gd1, record-to-delete = riga
      *                   modify gd1, insert-rows = 1
      *                end-if
      *             end-if
      *          else
      *             perform CONTROLLO-RIGA
      *          end-if
      *          if tutto-ok
      *             if rsc-data not = old-rsc-data
      *                move riga to RigaCambiata
      *                move 1    to ColonnaCambiata
      *             end-if
      *          end-if
      *
      *     when 78-col-art
      *          perform CONTROLLO-RIGA
      *          if tutto-ok
      *             if col-art not = old-col-art
      *                move riga        to RigaCambiata
      *                move 78-col-art  to ColonnaCambiata
      *             end-if
      *          end-if
      *
      *     when 78-col-des
      *          if col-des not = old-col-des
      *             move riga        to RigaCambiata
      *             move 78-col-des  to ColonnaCambiata
      *          end-if
      *
      *     when 78-col-qta
      *          if col-qta not = old-col-qta
      *             move riga        to RigaCambiata
      *             move 78-col-qta  to ColonnaCambiata
      *          end-if
      *
      *     when 78-col-prz 
      *          if como-col-prz not = 0
      *             if como-col-sc1 = 0 |and como-col-sc2 = 0
      *                move cli-sconto1 to como-col-sc1 col-sc1
      ******                move cli-sconto2 to como-col-sc2 col-sc2
      *                modify gd1(riga, 78-col-sc1), cell-data col-sc1
      ******                modify gd1(riga, 78-col-sc2), cell-data col-sc2
      *             end-if
      *          end-if
      *          perform CONTROLLO-RIGA
      *          if tutto-ok
      *             if col-prz not = old-col-prz
      *                move riga        to RigaCambiata
      *                move 78-col-prz  to ColonnaCambiata
      *             end-if
      *          end-if
      *
      *     when 78-col-sc1
      *          perform CONTROLLO-RIGA
      *          if col-sc1 not = old-col-sc1
      *             move riga        to RigaCambiata
      *             move 78-col-sc1  to ColonnaCambiata
      *          end-if
      *
      ******     when 78-col-sc2
      ******          perform CONTROLLO-RIGA
      ******          if col-sc1 not = old-col-sc1
      ******             move riga        to RigaCambiata
      ******             move 78-col-sc2  to ColonnaCambiata
      ******          end-if
      *
      *     when 78-col-note
      *          if col-note not = old-col-note
      *             move riga        to RigaCambiata
      *             move 78-col-note to ColonnaCambiata
      *          end-if 
      *     end-evaluate.
      *
      *     if errori
      *        move 78-ID-gd1 to store-id
      *        set event-action to event-action-fail
      *     else                                              
      *        modify gd1(riga, 78-col-qta),   cell-data col-qta
      *        modify gd1(riga, 78-col-prz),   cell-data col-prz
      *        modify gd1(riga, 78-col-sc1),   cell-data col-sc1
      ******        modify gd1(riga, 78-col-sc2),   cell-data col-sc2
      *        modify gd1(riga, 78-col-netto), cell-data col-netto
      *        set environment "KEYSTROKE" to "DATA=44 44"
      *        set environment "KEYSTROKE" to "DATA=46 46"
      *     end-if 
           .
      * <TOTEM:END>
       cb-mg1-BeforeProcedure.
      * <TOTEM:PARA. cb-mg1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       cb-mg2-BeforeProcedure.
      * <TOTEM:PARA. cb-mg2-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 2 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       cb-mg3-BeforeProcedure.
      * <TOTEM:PARA. cb-mg3-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 3 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       cb-mg4-BeforeProcedure.
      * <TOTEM:PARA. cb-mg4-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 4 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       cb-mg5-BeforeProcedure.
      * <TOTEM:PARA. cb-mg5-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 5 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       cb-mg1-AfterProcedure.
      * <TOTEM:PARA. cb-mg1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI.
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       cb-mg2-AfterProcedure.
      * <TOTEM:PARA. cb-mg2-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI.
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       cb-mg3-AfterProcedure.
      * <TOTEM:PARA. cb-mg3-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI.
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       cb-mg4-AfterProcedure.
      * <TOTEM:PARA. cb-mg4-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI.
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       cb-mg5-AfterProcedure.
      * <TOTEM:PARA. cb-mg5-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI.
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       cb-int-BeforeProcedure.
      * <TOTEM:PARA. cb-int-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-dur-BeforeProcedure.
      * <TOTEM:PARA. cb-dur-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-rnd-BeforeProcedure.
      * <TOTEM:PARA. cb-rnd-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-int-AfterProcedure.
      * <TOTEM:PARA. cb-int-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform VALORIZZA-WOD 
           .
      * <TOTEM:END>
       cb-dur-AfterProcedure.
      * <TOTEM:PARA. cb-dur-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform VALORIZZA-WOD 
           .
      * <TOTEM:END>
       cb-rnd-AfterProcedure.
      * <TOTEM:PARA. cb-rnd-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>
       pb-genera-LinkTo.
      * <TOTEM:PARA. pb-genera-LinkTo>
           perform SCR-ATTESA-OPEN-ROUTINE 
           .
      * <TOTEM:END>
       pb-random-LinkTo.
      * <TOTEM:PARA. pb-random-LinkTo>
           inquire cb-wod, value in wom-desc.
           read wodmap key wom-k-desc.
                                      
           move tab-mcg   to como-tab-mcg.
           move tab-mcg-p to como-tab-mcg-p.

           perform varying idx1 from 1 by 1 
                     until idx1 > 10
              if como-el-mcg-desc(idx1) = spaces
                 subtract 1 from idx1
                 exit perform
              end-if
           end-perform.

           perform varying idx1-p from 1 by 1 
                     until idx1-p > 10
              if como-el-mcg-desc-p(idx1-p) = spaces
                 subtract 1 from idx1-p
                 exit perform
              end-if
           end-perform.

           if idx1 = 0 or idx1-p = 0
              exit paragraph
           end-if.

           perform varying riga from 1 by 1 
                     until riga > 7
              evaluate riga
              when 1 inquire cb-mg1, enabled = como-e
              when 2 inquire cb-mg2, enabled = como-e
              when 3 inquire cb-mg3, enabled = como-e
              when 4 inquire cb-mg4, enabled = como-e
              when 5 inquire cb-mg5, enabled = como-e
              when 6 inquire cb-mg6, enabled = como-e
              when 7 inquire cb-mg7, enabled = como-e
              end-evaluate

              if como-e = 0
                 exit perform cycle
              end-if

              perform until 1 = 2 
                 if como-prim(riga) = 1
                    compute idx = function random * (tot-mcg-p)
                    add 1 to idx
                    if como-el-mcg-desc-p(idx) not = spaces
                       move como-el-mcg-desc(idx) to mcg-desc
                       read macrogroups key mcg-k-desc
                       evaluate riga
                       when 1 modify cb-mg1, value = 
           como-el-mcg-desc-p(idx)
                       when 2 modify cb-mg2, value = 
           como-el-mcg-desc-p(idx)
                       when 3 modify cb-mg3, value = 
           como-el-mcg-desc-p(idx)
                       when 4 modify cb-mg4, value = 
           como-el-mcg-desc-p(idx)
                       when 5 modify cb-mg5, value = 
           como-el-mcg-desc-p(idx)
                       when 6 modify cb-mg6, value = 
           como-el-mcg-desc-p(idx)
                       when 7 modify cb-mg7, value = 
           como-el-mcg-desc-p(idx)
                       end-evaluate
                       move spaces to como-el-mcg-desc-p(idx) 
                       if idx1-p = 1 |Ho finito i gruppi e riparto
                          move tab-mcg-p to como-tab-mcg-p
                       else
                          subtract 1 from idx1-p
                       end-if                                        
                       exit perform
                    end-if
                 else
                    compute idx = function random * (tot-mcg)
                    add 1 to idx
                    if como-el-mcg-desc(idx) not = spaces
                       move como-el-mcg-desc(idx) to mcg-desc
                       read macrogroups key mcg-k-desc
                       evaluate riga
                       when 1 modify cb-mg1, value = 
           como-el-mcg-desc(idx)
                       when 2 modify cb-mg2, value = 
           como-el-mcg-desc(idx)
                       when 3 modify cb-mg3, value = 
           como-el-mcg-desc(idx)
                       when 4 modify cb-mg4, value = 
           como-el-mcg-desc(idx)
                       when 5 modify cb-mg5, value = 
           como-el-mcg-desc(idx)
                       when 6 modify cb-mg6, value = 
           como-el-mcg-desc(idx)
                       when 7 modify cb-mg7, value = 
           como-el-mcg-desc(idx)
                       end-evaluate
                       move spaces to como-el-mcg-desc(idx) 
                       if idx1 = 1 |Ho finito i gruppi e riparto
                          move tab-mcg to como-tab-mcg
                       else
                          subtract 1 from idx1
                       end-if                             
                       exit perform
                    end-if
                 end-if
              end-perform                
           end-perform.

           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>
       cb-wod-AfterProcedure.
      * <TOTEM:PARA. cb-wod-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       cb-gio-AfterProcedure.
      * <TOTEM:PARA. cb-gio-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform VALORIZZA-WOD 
           .
      * <TOTEM:END>
       cb-gio-BeforeProcedure.
      * <TOTEM:PARA. cb-gio-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-wod-BeforeProcedure.
      * <TOTEM:PARA. cb-wod-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       gd-schema-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-schema-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       NUOVO-LinkTo.
      * <TOTEM:PARA. NUOVO-LinkTo>
           perform NUOVO 
           .
      * <TOTEM:END>
       pb-mcg1-LinkTo.
      * <TOTEM:PARA. pb-mcg1-LinkTo>
           move 1 to idx.               
           perform CREA-TMP-GRP-EXE     
           .
      * <TOTEM:END>
       pb-mcg2-LinkTo.
      * <TOTEM:PARA. pb-mcg2-LinkTo>
           move 2 to idx.
           perform CREA-TMP-GRP-EXE     
           .
      * <TOTEM:END>
       pb-mcg7-LinkTo.
      * <TOTEM:PARA. pb-mcg7-LinkTo>
           move 7 to idx.
           perform CREA-TMP-GRP-EXE     
           .
      * <TOTEM:END>
       pb-mcg6-LinkTo.
      * <TOTEM:PARA. pb-mcg6-LinkTo>
           move 6 to idx.
           perform CREA-TMP-GRP-EXE     
           .
      * <TOTEM:END>
       pb-mcg5-LinkTo.
      * <TOTEM:PARA. pb-mcg5-LinkTo>
           move 5 to idx.
           perform CREA-TMP-GRP-EXE     
           .
      * <TOTEM:END>
       pb-mcg4-LinkTo.
      * <TOTEM:PARA. pb-mcg4-LinkTo>
           move 4 to idx.
           perform CREA-TMP-GRP-EXE     
           .
      * <TOTEM:END>
       pb-mcg3-LinkTo.
      * <TOTEM:PARA. pb-mcg3-LinkTo>
           move 3 to idx.
           perform CREA-TMP-GRP-EXE     
           .
      * <TOTEM:END>
       cb-mg6-BeforeProcedure.
      * <TOTEM:PARA. cb-mg6-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 6 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       cb-mg6-AfterProcedure.
      * <TOTEM:PARA. cb-mg6-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI.
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       cb-mg7-BeforeProcedure.
      * <TOTEM:PARA. cb-mg7-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 7 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       cb-mg7-AfterProcedure.
      * <TOTEM:PARA. cb-mg7-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform ABILITA-MACROGRUPPI.
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       pb-su-LinkTo.
      * <TOTEM:PARA. pb-su-LinkTo>
           inquire gd1, cursor-y in riga.
           if riga = 2
              exit paragraph 
           end-if.  
                                                                      
           inquire gd1(riga - 1, 78-col-exe-code), cell-data exe-code.
           read exercises no lock
                invalid move spaces to grp-mcg-code exe-desc grp-desc 
           grp-code
            not invalid
                move exe-grp-code to grp-code
                read groups no lock
                     invalid move spaces to grp-mcg-code exe-desc 
           grp-desc grp-code
                end-read
           end-read.
           move exe-code     to tex-exe-code.
           move grp-mcg-code to tex-mcg-code
           move exe-desc     to tex-exe-desc
           move grp-desc     to como-grp-desc.
           move grp-code     to como-grp-code.

           inquire gd1(riga, 78-col-exe-code), cell-data exe-code.
           read exercises no lock
                invalid move spaces to grp-mcg-code exe-desc grp-desc 
           grp-code
            not invalid
                move exe-grp-code to grp-code
                read groups no lock
                     invalid move spaces to grp-mcg-code exe-desc 
           grp-desc grp-code
                end-read
           end-read.
           move grp-mcg-code to mcg-code
           move exe-desc     to exe-desc

           if tex-mcg-code not = mcg-code
              exit paragraph
           end-if.
                                                                      
           modify gd1(riga, 78-col-grp-code),     cell-data 
           como-grp-code.
           modify gd1(riga, 78-col-grp-desc),     cell-data 
           como-grp-desc.
           modify gd1(riga, 78-col-exe-code),     cell-data 
           tex-exe-code.
           modify gd1(riga, 78-col-exe-desc),     cell-data 
           tex-exe-desc.

           modify gd1(riga - 1, 78-col-grp-code), cell-data grp-code.
           modify gd1(riga - 1, 78-col-grp-desc), cell-data grp-desc.
           modify gd1(riga - 1, 78-col-exe-code), cell-data exe-code.
           modify gd1(riga - 1, 78-col-exe-desc), cell-data exe-desc.  
           
           open i-o tmp-exe.               

           inquire gd1(riga - 1, 78-col-day), cell-data in tex-day.
           inquire gd1(riga - 1, 78-col-prg), cell-data in tex-split.
           read tmp-exe no lock.       
           move tex-rec to como-tex-rec

           inquire gd1(riga, 78-col-day), cell-data in tex-day.
           inquire gd1(riga, 78-col-prg), cell-data in tex-split.    
           read tmp-exe no lock.    
           
           move tex-exe-code    to s-tex-exe-code.  
           move tex-exe-desc    to s-tex-exe-desc.   
           move tex-exe-isMulti to s-tex-exe-isMulti. 
           
           move como-tex-exe-code    to tex-exe-code.   
           move como-tex-exe-desc    to tex-exe-desc.   
           move como-tex-exe-isMulti to tex-exe-isMulti.
           rewrite tex-rec.                              

           move como-tex-key to tex-key.
           read tmp-exe no lock.

           move s-tex-exe-code    to tex-exe-code.   
           move s-tex-exe-desc    to tex-exe-desc.   
           move s-tex-exe-isMulti to tex-exe-isMulti.
           rewrite tex-rec.                

           close tmp-exe.               

           subtract 1 from riga giving event-data-2.
           perform SPOSTAMENTO.
           modify gd1, cursor-y event-data-2 
           .
      * <TOTEM:END>
       pb-giu-LinkTo.
      * <TOTEM:PARA. pb-giu-LinkTo>
           inquire gd1, cursor-y in riga, last-row in tot-righe.
           if riga = tot-righe
              exit paragraph 
           end-if.  
                                                                      
           inquire gd1(riga + 1, 78-col-exe-code), cell-data exe-code.
           read exercises no lock
                invalid move spaces to grp-mcg-code exe-desc grp-desc 
           grp-code
            not invalid
                move exe-grp-code to grp-code
                read groups no lock
                     invalid move spaces to grp-mcg-code exe-desc 
           grp-desc grp-code
                end-read
           end-read.
           move exe-code     to tex-exe-code.
           move grp-mcg-code to tex-mcg-code
           move exe-desc     to tex-exe-desc
           move grp-desc     to como-grp-desc.
           move grp-code     to como-grp-code.

           inquire gd1(riga, 78-col-exe-code), cell-data exe-code.
           read exercises no lock
                invalid move spaces to grp-mcg-code exe-desc grp-desc 
           grp-code
            not invalid
                move exe-grp-code to grp-code
                read groups no lock
                     invalid move spaces to grp-mcg-code exe-desc 
           grp-desc grp-code
                end-read
           end-read.
           move grp-mcg-code to mcg-code
           move exe-desc     to exe-desc

           if tex-mcg-code not = mcg-code
              exit paragraph
           end-if.  
                                                                      
           modify gd1(riga, 78-col-grp-code), cell-data como-grp-code.
           modify gd1(riga, 78-col-grp-desc), cell-data como-grp-desc.
           modify gd1(riga, 78-col-exe-code), cell-data tex-exe-code.
           modify gd1(riga, 78-col-exe-desc), cell-data tex-exe-desc.

           modify gd1(riga + 1, 78-col-grp-code), cell-data grp-code.
           modify gd1(riga + 1, 78-col-grp-desc), cell-data grp-desc.
           modify gd1(riga + 1, 78-col-exe-code), cell-data exe-code.
           modify gd1(riga + 1, 78-col-exe-desc), cell-data exe-desc.
           
           open i-o tmp-exe.               

           inquire gd1(riga + 1, 78-col-day), cell-data in tex-day.
           inquire gd1(riga + 1, 78-col-prg), cell-data in tex-split.
           read tmp-exe no lock.       
           move tex-rec to como-tex-rec

           inquire gd1(riga, 78-col-day), cell-data in tex-day.
           inquire gd1(riga, 78-col-prg), cell-data in tex-split.    
           read tmp-exe no lock.    
           
           move tex-exe-code    to s-tex-exe-code.  
           move tex-exe-desc    to s-tex-exe-desc.   
           move tex-exe-isMulti to s-tex-exe-isMulti. 
           
           move como-tex-exe-code    to tex-exe-code.   
           move como-tex-exe-desc    to tex-exe-desc.   
           move como-tex-exe-isMulti to tex-exe-isMulti.
           rewrite tex-rec.                              

           move como-tex-key to tex-key.
           read tmp-exe no lock.

           move s-tex-exe-code    to tex-exe-code.   
           move s-tex-exe-desc    to tex-exe-desc.   
           move s-tex-exe-isMulti to tex-exe-isMulti.
           rewrite tex-rec.                

           close tmp-exe.               

           add 1 to riga giving event-data-2.
           perform SPOSTAMENTO.
           modify gd1, cursor-y event-data-2 
           .
      * <TOTEM:END>
       pb-elimina-LinkTo.
      * <TOTEM:PARA. pb-elimina-LinkTo>
           inquire gd1, cursor-y in riga.                       
           if riga < 2 exit paragraph end-if.

           inquire gd1(riga, 78-col-day), hidden-data hiddenData.
           if hid-tex-day = 0
              inquire gd1(riga, 78-col-day), hidden-data hid-tot-exe
              if hid-tot-exe = 0
                 modify gd1, record-to-delete = riga
              end-if                                
              exit paragraph
           end-if.

           perform ELIMINA-RIGA.

           inquire gd1, last-row in tot-righe.
           if tot-righe = 1
              move 0 to mod
              perform ABILITAZIONI
           end-if 
           
           .
      * <TOTEM:END>
       pb-aggiungi-LinkTo.
      * <TOTEM:PARA. pb-aggiungi-LinkTo>
           inquire gd1, cursor-y riga, last-row in tot-righe.

           inquire gd1(riga, 78-col-day) hidden-data hiddenData
           if hid-tex-day = 0                                  
              inquire gd1(riga, 78-col-day) hidden-data hid-tot-exe
              if hid-tot-exe = 0
                 modify gd1, record-to-delete riga
              end-if
           end-if.

           if riga <= tot-righe
              inquire gd1(riga, 78-col-day), cell-data in col-day
              inquire gd1(riga, 78-col-prg), cell-data in col-exe-prg

              inquire gd1(riga, 78-col-exe-code), cell-data in exe-code
              inquire gd1(riga, 78-col-grp-code), cell-data in grp-code
      
              if col-exe-prg = 0
                 inquire gd1(riga - 1, 78-col-day), cell-data in col-day
                 inquire gd1(riga - 1, 78-col-prg), cell-data in 
           col-exe-prg
                 inquire gd1(riga - 1, 78-col-exe-code), cell-data in 
           exe-code
                 inquire gd1(riga - 1, 78-col-grp-code), cell-data in 
           grp-code 
                 add 1 to col-exe-prg
              end-if
           end-if.
                              

           modify gd1, insertion-index riga, record-to-add rec-grid.

           modify gd1(riga, 78-col-day),    cell-data col-day, 
                                          hidden-data hiddenData.
           modify gd1(riga, 78-col-prg),    cell-data col-exe-prg.
           modify gd1(riga, 78-col-reps),   cell-data spaces.
           modify gd1(riga, 78-col-series), cell-data spaces.
           modify gd1(riga, 78-col-grp-code), cell-data spaces.
           modify gd1(riga, 78-col-grp-desc), cell-data spaces.
           modify gd1(riga, 78-col-exe-code), cell-data spaces.
           modify gd1(riga, 78-col-exe-desc), cell-data spaces.

           move col-day     to s-tex-day.
           move col-exe-prg to s-tex-split.

           perform LOOKUP-EXE.
           if stato-zoom not = 0
              move 0 to grp-code
              perform LOOKUP-EXE
              if stato-zoom not = 0
                 modify gd1, record-to-delete riga
                 exit paragraph
              end-if
           end-if. 

           move riga to riga-aggiunta.
                   
           inquire gd1(event-data-2, 1), hidden-data hiddendata. 

           open output tmp-hit.
             
           open i-o tmp-exe.
           move low-value to tex-split.
           start tmp-exe key >= tex-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-exe next at end exit perform end-read
                    if tex-day not = s-tex-day
                       exit perform
                    end-if
                    delete tmp-exe record
                 end-perform
           end-start.     

           if riga > 2
              perform varying riga from riga by -1 
                        until riga = 2
                 inquire gd1(riga, 78-col-prg), cell-data col-exe-prg
                 if col-exe-prg = 0
                    add 1 to riga
                    exit perform
                 end-if
              end-perform
           end-if.

           perform varying riga from riga by 1 
                     until riga > tot-righe
              inquire gd1(riga, 78-col-prg), cell-data col-exe-prg
              if col-exe-prg = 0
                 inquire gd1(riga, 78-col-day), hidden-data hid-tot-exe
                 add 1 to hid-tot-exe                                  
                 modify gd1(riga, 78-col-day), hidden-data hid-tot-exe
                 exit perform
              end-if                             
              inquire gd1(riga, 78-col-day),    cell-data tex-day      
              inquire gd1(riga, 78-col-prg),    cell-data tex-split
              inquire gd1(riga, 78-col-series), cell-data col-series
              inquire gd1(riga, 78-col-reps),   cell-data col-reps

              inquire gd1(riga, 78-col-exe-code), cell-data exe-code
              read exercises no lock
              move exe-grp-code to grp-code
              read groups no lock

              move exe-code     to tex-exe-code
              move exe-desc     to tex-exe-desc
              move grp-mcg-code to tex-mcg-code
              move spaces       to tex-nome-dupl
              move exe-int-code to tex-int-code
              move exe-isMulti  to tex-exe-isMulti
              move col-series   to tex-series 
              move col-reps     to tex-reps
              perform until 1 = 2
                 write tex-rec
                       invalid add 1 to tex-split
                   not invalid exit perform
                 end-write
              end-perform
           end-perform.
                             
           modify gd1, mass-update = 1.
           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.

           set fromAggiungi to true.
           perform LOAD-GRID.       
           set fromAggiungi to false.
           close tmp-exe.  

           perform RICALCOLA-HIT-DIV.
           perform CALCOLA-HIT-BOTTONI.

           move 78-ID-gd1 to control-id.
           move 4         to accept-control.
           move riga-aggiunta to event-data-2.
           move 78-col-series to event-data-1.
           modify gd1, cursor-x event-data-1, cursor-y riga-aggiunta.
           perform SPOSTAMENTO.
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       pb-mcg2-BeforeProcedure.
      * <TOTEM:PARA. pb-mcg2-BeforeProcedure>
           move 2 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       pb-mcg1-BeforeProcedure.
      * <TOTEM:PARA. pb-mcg1-BeforeProcedure>
           move 1 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       pb-mcg3-BeforeProcedure.
      * <TOTEM:PARA. pb-mcg3-BeforeProcedure>
           move 3 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       pb-mcg4-BeforeProcedure.
      * <TOTEM:PARA. pb-mcg4-BeforeProcedure>
           move 4 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       pb-mcg5-BeforeProcedure.
      * <TOTEM:PARA. pb-mcg5-BeforeProcedure>
           move 5 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       pb-mcg6-BeforeProcedure.
      * <TOTEM:PARA. pb-mcg6-BeforeProcedure>
           move 6 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       pb-mcg7-BeforeProcedure.
      * <TOTEM:PARA. pb-mcg7-BeforeProcedure>
           move 7 to idx.
           perform EVIDENZIA-GRUPPI 
           .
      * <TOTEM:END>
       pb-mcg7-AfterProcedure.
      * <TOTEM:PARA. pb-mcg7-AfterProcedure>
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       pb-mcg6-AfterProcedure.
      * <TOTEM:PARA. pb-mcg6-AfterProcedure>
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       pb-mcg5-AfterProcedure.
      * <TOTEM:PARA. pb-mcg5-AfterProcedure>
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       pb-mcg4-AfterProcedure.
      * <TOTEM:PARA. pb-mcg4-AfterProcedure>
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       pb-mcg3-AfterProcedure.
      * <TOTEM:PARA. pb-mcg3-AfterProcedure>
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       pb-mcg2-AfterProcedure.
      * <TOTEM:PARA. pb-mcg2-AfterProcedure>
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       pb-mcg1-AfterProcedure.
      * <TOTEM:PARA. pb-mcg1-AfterProcedure>
           perform RESETTA-FONT 
           .
      * <TOTEM:END>
       cb-wod-Ex-Ntf-Selchange.
      * <TOTEM:PARA. cb-wod-Ex-Ntf-Selchange>

           perform ABILITA-MACROGRUPPI 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

