      *{TOTEM}PRG-COMMENT
      * texercises.Cbl
      * texercises.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          texercises.
       AUTHOR.              andre.
       DATE-WRITTEN.        venerdì 22 settembre 2023 18:02:00.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:texercises, INIT:texercises, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "exercises.sl".
           COPY "groups.sl".
           COPY "macrogroups.sl".
           COPY "intexe.sl".
           COPY "tmp-exe-mcg.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "exercises.fd".
           COPY "groups.fd".
           COPY "macrogroups.fd".
           COPY "intexe.fd".
           COPY "tmp-exe-mcg.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "comune.def".
               COPY "custom.def".
               COPY "UTYDATA.DEF".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
      * Properties & User defined Working Stoarge
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 TIPO-DATA        PIC  9(8)
                  VALUE IS 0.
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       78 titolo VALUE IS "Gestione esercizi". 
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-NUOVO          PIC  9
                  VALUE IS 1.
       77 E-CANCELLA       PIC  9
                  VALUE IS 1.
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       77 E-ANTEPRIMA      PIC  9
                  VALUE IS 0.
       77 E-MODIFICA       PIC  9
                  VALUE IS 1.
       77 E-STAMPA         PIC  9
                  VALUE IS 0.
       77 E-CERCA          PIC  9
                  VALUE IS 1.
       77 MESSAGGIO        PIC  X(300)
                  VALUE IS SPACE.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bmpNum           PIC  999.
       78 78-col-code VALUE IS 1. 
       78 78-col-desc VALUE IS 2. 
       78 78-col-desc-stampa VALUE IS 3. 
       78 78-col-grp-code VALUE IS 4. 
       78 78-col-grp-desc VALUE IS 5. 
       78 78-col-mcg-desc VALUE IS 6. 
       78 78-col-int-code VALUE IS 7. 
       78 78-col-int-desc VALUE IS 8. 
       78 78-col-ismulti VALUE IS 9. 
       78 78-col-setting VALUE IS 10. 
       78 78-col-restpause VALUE IS 11. 
       78 78-col-disable VALUE IS 12. 
       01 rec-grid.
           05 col-codice       PIC  x(5).
           05 col-des          PIC  X(50).
           05 col-des-stampa   PIC  X(20).
           05 col-group        PIC  x(5).
           05 col-grp-desc     PIC  x(100).
           05 col-mcg-desc     PIC  x(100).
           05 col-intensity    PIC  z9.
           05 col-int-desc     PIC  x(100).
           05 col-isMulti      PIC  9.
           05 col-setting      PIC  z.zz9.
           05 col-restpause    PIC  9.
           05 col-disab        PIC  9.
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 como-ord         PIC  xx.
           88 ord-code-asc VALUE IS "CA". 
           88 ord-code-disc VALUE IS "CD". 
           88 ord-desc-asc VALUE IS "DA". 
           88 ord-desc-disc VALUE IS "DD". 
           88 ord-mcg-asc VALUE IS "MA". 
           88 ord-mcg-disc VALUE IS "MD". 
           88 ord-multi-asc VALUE IS "UA". 
           88 ord-multi-disc VALUE IS "UD". 
           88 ord-disable-asc VALUE IS "IA". 
           88 ord-rp-disc VALUE IS "RU". 
           88 ord-rp-asc VALUE IS "RA". 
           88 ord-disable-disc VALUE IS "IU". 
       01 FILLER           PIC  9.
           88 ricarica VALUE IS 1    WHEN SET TO FALSE  0. 
       77 esegui-73x21-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 STATUS-exercises PIC  X(2).
           88 Valid-STATUS-exercises VALUE IS "00" THRU "09". 
       77 Calibri14-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 LOGO-PICCOLO-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-groups    PIC  X(2).
           88 Valid-STATUS-groups VALUE IS "00" THRU "09". 
       77 STATUS-intexe    PIC  X(2).
           88 Valid-STATUS-intexe VALUE IS "00" THRU "09". 
       77 STATUS-macrogroups           PIC  X(2).
           88 Valid-STATUS-macrogroups VALUE IS "00" THRU "09". 
       77 path-tmp-exe-mcg PIC  X(256).
       77 STATUS-tmp-exe-mcg           PIC  X(2).
           88 Valid-STATUS-tmp-exe-mcg VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form1-exercises-RESTOREBUF  PIC X(1189).
       77 TMP-Form1-KEYIS  PIC 9(3) VALUE 1.
       77 Form1-MULKEY-TMPBUF   PIC X(1189).
       77 TMP-DataSet1-exercises-BUF     PIC X(1189).
       77 TMP-DataSet1-groups-BUF     PIC X(1182).
       77 TMP-DataSet1-macrogroups-BUF     PIC X(1177).
       77 TMP-DataSet1-intexe-BUF     PIC X(1188).
       77 TMP-DataSet1-tmp-exe-mcg-BUF     PIC X(15).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-exercises-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-exercises-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-exercises-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-exercises-KEY1-Asc  VALUE "A".
          88 DataSet1-exercises-KEY1-Desc VALUE "D".
       77 DataSet1-groups-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-groups-LOCK  VALUE "Y".
       77 DataSet1-groups-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-groups-KEY-Asc  VALUE "A".
          88 DataSet1-groups-KEY-Desc VALUE "D".
       77 DataSet1-macrogroups-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-macrogroups-LOCK  VALUE "Y".
       77 DataSet1-macrogroups-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-macrogroups-KEY-Asc  VALUE "A".
          88 DataSet1-macrogroups-KEY-Desc VALUE "D".
       77 DataSet1-intexe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-intexe-LOCK  VALUE "Y".
       77 DataSet1-intexe-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-intexe-KEY-Asc  VALUE "A".
          88 DataSet1-intexe-KEY-Desc VALUE "D".
       77 DataSet1-tmp-exe-mcg-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-exe-mcg-LOCK  VALUE "Y".
       77 DataSet1-tmp-exe-mcg-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-exe-mcg-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-exe-mcg-KEY-Desc VALUE "D".

       77 exercises-exe-k-desc-SPLITBUF  PIC X(101).
       77 exercises-exe-k-group-SPLITBUF  PIC X(11).
       77 groups-grp-k-desc-SPLITBUF  PIC X(101).
       77 groups-grp-k-mcg-SPLITBUF  PIC X(11).
       77 macrogroups-mcg-k-desc-SPLITBUF  PIC X(101).
       77 intexe-int-k-desc-SPLITBUF  PIC X(101).
       77 intexe-int-k-effort-SPLITBUF  PIC X(3).
       77 tmp-exe-mcg-tem-k-multi-SPLITBUF  PIC X(14).
       77 tmp-exe-mcg-tem-k-disab-SPLITBUF  PIC X(14).
       77 tmp-exe-mcg-tem-k-rp-SPLITBUF  PIC X(14).

       01 old-exe-rec.
           05 old-exe-key.
               10 old-exe-code         PIC  x(5).
           05 old-exe-data.
               10 old-exe-desc         PIC  x(100).
               10 old-exe-grp-code     PIC  x(5).
               10 old-exe-int-code     PIC  99.
               10 old-exe-isMulti      PIC  9.
                   88 old-exe-isMulti-no VALUE IS 0. 
                   88 old-exe-isMulti-yes VALUE IS 1. 
               10 old-exe-setting      PIC  9(4).
               10 old-exe-restpause    PIC  9.
               10 old-exe-disab        PIC  9.
               10 old-exe-desc-stampa  PIC  x(20).
               10 old-exe-filler       PIC  x(978).
               10 old-exe-filler-n1    PIC  9(18).
               10 old-exe-filler-n2    PIC  9(18).
               10 old-exe-filler-n3    PIC  9(18).
               10 old-exe-filler-n4    PIC  9(18).
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "F:\STUDIOPOSTURA\COPYLIB\BLOCKPGM.LKS".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * LABEL
       05
           CST-BLOCKPGM, 
           Label, 
           COL 49,57, 
           LINE 1,00,
           LINES 0,48 ,
           SIZE 2,10 ,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * GRID
       05
           form1-gd-1, 
           Grid, 
           COL 1,40, 
           LINE 1,43,
           LINES 36,26 ,
           SIZE 172,00 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 6, 56, 76, 81, 181, 281, 283, 383, 384, 
           389, 390),
           ALIGNMENT ("U", "U", "U", "U", "U", "U", "C", "U", "C", "R", 
           "C", "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("U(5)", "X(100)", "X(20)", "U(5)", "X", "X", "zz"
           , "X", "X", "z.zz9", "9", "9"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RECORD-DATA rec-grid,
           TILED-HEADINGS,
           USE-TAB,
           VIRTUAL-WIDTH 170,
           VPADDING 10,
           VSCROLL,
           EVENT PROCEDURE Form1-Gd-1-Event-Proc,
           .

      * TOOLBAR
       01
           Form1-Tb-1,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 2,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-NUOVO, 
           Push-Button, 
           COL 6,30, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           ENABLED E-NUOVO,
           EXCEPTION-VALUE 2,
           FLAT,
           ID IS 6,
           SELF-ACT,
           TITLE "Nuovo (F2)",
           .

      * PUSH BUTTON
       05
           TOOL-CANCELLA, 
           Push-Button, 
           COL 16,90, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           UNFRAMED,
           SQUARE,
           ENABLED E-CANCELLA,
           EXCEPTION-VALUE 4,
           FLAT,
           ID IS 5,
           SELF-ACT,
           TITLE "Cancella (F4)",
           BITMAP-NUMBER BitmapNumDelete
           .

      * PUSH BUTTON
       05
           TOOL-SALVA, 
           Push-Button, 
           COL 11,60, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           UNFRAMED,
           SQUARE,
           ENABLED E-SALVA,
           EXCEPTION-VALUE 3,
           FLAT,
           ID IS 8,
           SELF-ACT,
           TITLE "Salva (F3)",
           BITMAP-NUMBER BitmapNumSave
           .

      * CHECK BOX
       05
           TOOL-MODIFICA, 
           Check-Box, 
           COL 22,20, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 5,
           UNFRAMED,
           SQUARE,
           ENABLED E-MODIFICA,
           EXCEPTION-VALUE 1005
           FLAT,
           ID IS 7,
           SELF-ACT,
           TITLE "Modifica (F5)",
           VALUE MOD,
           AFTER PROCEDURE TOOL-MODIFICA-AfterProcedure,
           BEFORE PROCEDURE TOOL-MODIFICA-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 27,50, 
           LINE 1,09,
           LINES 64,00 ,
           SIZE 48,00 ,
           BITMAP-HANDLE toolbar-bmp,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 11,
           SELF-ACT,
           TITLE "Cerca (F8)",
           VISIBLE 1,
           BITMAP-NUMBER BitmapNumZoom
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:texercises, INIT:texercises, BeforeDeclarative>
       exercises-ERR SECTION.
           use after error procedure on exercises.
           evaluate status-exercises
           when "35"
                display message "File [exercises] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [exercises] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[exercises] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true 
           when "93"             
                move 0 to mod
                modify tool-modifica, value = mod  
                set StatusVisua to true
                open input exercises
                display message box MSG-Gia-in-uso-su-altro-terminale
                            x"0d0a" MSG-SOLA-VISUA
                        title = tit-err
                        icon is mb-error-icon      
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM PAS004P-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:texercises, INIT:texercises, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Calibri14-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
      *    After-Program
           PERFORM I-O-BLOCCO
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Calibri14-Occidentale
           INITIALIZE WFONT-DATA Calibri14-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Calibri" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Calibri14-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-exercises
           PERFORM OPEN-groups
           PERFORM OPEN-macrogroups
           PERFORM OPEN-intexe
      *    tmp-exe-mcg OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-exe-mcg
      *    After Open
           .

       OPEN-exercises.
      * <TOTEM:EPT. INIT:texercises, FD:exercises, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O exercises
           IF STATUS-exercises = "35"
              OPEN OUTPUT exercises
                IF Valid-STATUS-exercises
                   CLOSE exercises
                   OPEN I-O exercises
                END-IF
           END-IF
           IF NOT Valid-STATUS-exercises
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:texercises, FD:exercises, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-groups.
      * <TOTEM:EPT. INIT:texercises, FD:groups, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT groups
           IF NOT Valid-STATUS-groups
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:texercises, FD:groups, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-macrogroups.
      * <TOTEM:EPT. INIT:texercises, FD:macrogroups, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT macrogroups
           IF NOT Valid-STATUS-macrogroups
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:texercises, FD:macrogroups, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-intexe.
      * <TOTEM:EPT. INIT:texercises, FD:intexe, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT intexe
           IF NOT Valid-STATUS-intexe
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:texercises, FD:intexe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-exe-mcg.
      * <TOTEM:EPT. INIT:texercises, FD:tmp-exe-mcg, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-exe-mcg
           IF NOT Valid-STATUS-tmp-exe-mcg
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:texercises, FD:tmp-exe-mcg, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-exercises
           PERFORM CLOSE-groups
           PERFORM CLOSE-macrogroups
           PERFORM CLOSE-intexe
      *    tmp-exe-mcg CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-exe-mcg
      *    After Close
           .

       CLOSE-exercises.
      * <TOTEM:EPT. INIT:texercises, FD:exercises, BeforeClose>
      * <TOTEM:END>
           CLOSE exercises
           .

       CLOSE-groups.
      * <TOTEM:EPT. INIT:texercises, FD:groups, BeforeClose>
      * <TOTEM:END>
           CLOSE groups
           .

       CLOSE-macrogroups.
      * <TOTEM:EPT. INIT:texercises, FD:macrogroups, BeforeClose>
      * <TOTEM:END>
           CLOSE macrogroups
           .

       CLOSE-intexe.
      * <TOTEM:EPT. INIT:texercises, FD:intexe, BeforeClose>
      * <TOTEM:END>
           CLOSE intexe
           .

       CLOSE-tmp-exe-mcg.
      * <TOTEM:EPT. INIT:texercises, FD:tmp-exe-mcg, BeforeClose>
      * <TOTEM:END>
           .

       exercises-exe-k-desc-MERGE-SPLITBUF.
           INITIALIZE exercises-exe-k-desc-SPLITBUF
           MOVE exe-desc(1:100) TO exercises-exe-k-desc-SPLITBUF(1:100)
           .

       exercises-exe-k-group-MERGE-SPLITBUF.
           INITIALIZE exercises-exe-k-group-SPLITBUF
           MOVE exe-grp-code(1:5) TO exercises-exe-k-group-SPLITBUF(1:5)
           MOVE exe-key(1:5) TO exercises-exe-k-group-SPLITBUF(6:5)
           .

       DataSet1-exercises-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 MOVE Low-Value TO exe-key
              ELSE
                 MOVE High-Value TO exe-key
              END-IF
           END-EVALUATE
           .

       DataSet1-exercises-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 MOVE High-Value TO exe-key
              ELSE
                 MOVE Low-Value TO exe-key
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-exercises-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-exercises-KEY1-ORDER
           END-EVALUATE
           .

      * exercises
       DataSet1-exercises-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 START exercises KEY >= exe-key
              ELSE
                 START exercises KEY <= exe-key
              END-IF
           END-EVALUATE
           .

       DataSet1-exercises-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 START exercises KEY <= exe-key
              ELSE
                 START exercises KEY >= exe-key
              END-IF
           END-EVALUATE
           .

       DataSet1-exercises-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 START exercises KEY > exe-key
              ELSE
                 START exercises KEY < exe-key
              END-IF
           END-EVALUATE
           .

       DataSet1-exercises-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 START exercises KEY < exe-key
              ELSE
                 START exercises KEY > exe-key
              END-IF
           END-EVALUATE
           .

       DataSet1-exercises-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-LOCK
                 READ exercises WITH LOCK 
                 KEY exe-key
              ELSE
                 READ exercises WITH NO LOCK 
                 KEY exe-key
              END-IF
           END-EVALUATE
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT 
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-exercises-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 IF DataSet1-exercises-LOCK
                    READ exercises NEXT WITH LOCK
                 ELSE
                    READ exercises NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-exercises-LOCK
                    READ exercises PREVIOUS WITH LOCK
                 ELSE
                    READ exercises PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-exercises-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-exercises-KEY1-Asc
                 IF DataSet1-exercises-LOCK
                    READ exercises PREVIOUS WITH LOCK
                 ELSE
                    READ exercises PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-exercises-LOCK
                    READ exercises NEXT WITH LOCK
                 ELSE
                    READ exercises NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM exercises-exe-k-desc-MERGE-SPLITBUF
           PERFORM exercises-exe-k-group-MERGE-SPLITBUF
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeWrite>
      * <TOTEM:END>
           WRITE exe-rec OF exercises.
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeRewrite>
      * <TOTEM:END>
           REWRITE exe-rec OF exercises.
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-exercises-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, BeforeDelete>
      * <TOTEM:END>
           DELETE exercises.
           MOVE STATUS-exercises TO TOTEM-ERR-STAT
           MOVE "exercises" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:exercises, AfterDelete>
      * <TOTEM:END>
           .

       groups-grp-k-desc-MERGE-SPLITBUF.
           INITIALIZE groups-grp-k-desc-SPLITBUF
           MOVE grp-desc(1:100) TO groups-grp-k-desc-SPLITBUF(1:100)
           .

       groups-grp-k-mcg-MERGE-SPLITBUF.
           INITIALIZE groups-grp-k-mcg-SPLITBUF
           MOVE grp-mcg-code(1:5) TO groups-grp-k-mcg-SPLITBUF(1:5)
           MOVE grp-key(1:5) TO groups-grp-k-mcg-SPLITBUF(6:5)
           .

       DataSet1-groups-INITSTART.
           IF DataSet1-groups-KEY-Asc
              MOVE Low-Value TO grp-key
           ELSE
              MOVE High-Value TO grp-key
           END-IF
           .

       DataSet1-groups-INITEND.
           IF DataSet1-groups-KEY-Asc
              MOVE High-Value TO grp-key
           ELSE
              MOVE Low-Value TO grp-key
           END-IF
           .

      * groups
       DataSet1-groups-START.
           IF DataSet1-groups-KEY-Asc
              START groups KEY >= grp-key
           ELSE
              START groups KEY <= grp-key
           END-IF
           .

       DataSet1-groups-START-NOTGREATER.
           IF DataSet1-groups-KEY-Asc
              START groups KEY <= grp-key
           ELSE
              START groups KEY >= grp-key
           END-IF
           .

       DataSet1-groups-START-GREATER.
           IF DataSet1-groups-KEY-Asc
              START groups KEY > grp-key
           ELSE
              START groups KEY < grp-key
           END-IF
           .

       DataSet1-groups-START-LESS.
           IF DataSet1-groups-KEY-Asc
              START groups KEY < grp-key
           ELSE
              START groups KEY > grp-key
           END-IF
           .

       DataSet1-groups-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-groups-LOCK
              READ groups WITH LOCK 
              KEY grp-key
           ELSE
              READ groups WITH NO LOCK 
              KEY grp-key
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT 
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-groups-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-groups-KEY-Asc
              IF DataSet1-groups-LOCK
                 READ groups NEXT WITH LOCK
              ELSE
                 READ groups NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-groups-LOCK
                 READ groups PREVIOUS WITH LOCK
              ELSE
                 READ groups PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-groups-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-groups-KEY-Asc
              IF DataSet1-groups-LOCK
                 READ groups PREVIOUS WITH LOCK
              ELSE
                 READ groups PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-groups-LOCK
                 READ groups NEXT WITH LOCK
              ELSE
                 READ groups NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM groups-grp-k-desc-MERGE-SPLITBUF
           PERFORM groups-grp-k-mcg-MERGE-SPLITBUF
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-groups-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:groups, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-groups TO TOTEM-ERR-STAT
           MOVE "groups" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:groups, AfterDelete>
      * <TOTEM:END>
           .

       macrogroups-mcg-k-desc-MERGE-SPLITBUF.
           INITIALIZE macrogroups-mcg-k-desc-SPLITBUF
           MOVE mcg-desc(1:100) TO 
           macrogroups-mcg-k-desc-SPLITBUF(1:100)
           .

       DataSet1-macrogroups-INITSTART.
           IF DataSet1-macrogroups-KEY-Asc
              MOVE Low-Value TO mcg-key
           ELSE
              MOVE High-Value TO mcg-key
           END-IF
           .

       DataSet1-macrogroups-INITEND.
           IF DataSet1-macrogroups-KEY-Asc
              MOVE High-Value TO mcg-key
           ELSE
              MOVE Low-Value TO mcg-key
           END-IF
           .

      * macrogroups
       DataSet1-macrogroups-START.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY >= mcg-key
           ELSE
              START macrogroups KEY <= mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-NOTGREATER.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY <= mcg-key
           ELSE
              START macrogroups KEY >= mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-GREATER.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY > mcg-key
           ELSE
              START macrogroups KEY < mcg-key
           END-IF
           .

       DataSet1-macrogroups-START-LESS.
           IF DataSet1-macrogroups-KEY-Asc
              START macrogroups KEY < mcg-key
           ELSE
              START macrogroups KEY > mcg-key
           END-IF
           .

       DataSet1-macrogroups-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-macrogroups-LOCK
              READ macrogroups WITH LOCK 
              KEY mcg-key
           ELSE
              READ macrogroups WITH NO LOCK 
              KEY mcg-key
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT 
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-macrogroups-KEY-Asc
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups NEXT WITH LOCK
              ELSE
                 READ macrogroups NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups PREVIOUS WITH LOCK
              ELSE
                 READ macrogroups PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-macrogroups-KEY-Asc
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups PREVIOUS WITH LOCK
              ELSE
                 READ macrogroups PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrogroups-LOCK
                 READ macrogroups NEXT WITH LOCK
              ELSE
                 READ macrogroups NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM macrogroups-mcg-k-desc-MERGE-SPLITBUF
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-macrogroups-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-macrogroups TO TOTEM-ERR-STAT
           MOVE "macrogroups" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrogroups, AfterDelete>
      * <TOTEM:END>
           .

       intexe-int-k-desc-MERGE-SPLITBUF.
           INITIALIZE intexe-int-k-desc-SPLITBUF
           MOVE int-desc(1:100) TO intexe-int-k-desc-SPLITBUF(1:100)
           .

       intexe-int-k-effort-MERGE-SPLITBUF.
           INITIALIZE intexe-int-k-effort-SPLITBUF
           MOVE int-effort(1:2) TO intexe-int-k-effort-SPLITBUF(1:2)
           .

       DataSet1-intexe-INITSTART.
           IF DataSet1-intexe-KEY-Asc
              MOVE Low-Value TO int-key
           ELSE
              MOVE High-Value TO int-key
           END-IF
           .

       DataSet1-intexe-INITEND.
           IF DataSet1-intexe-KEY-Asc
              MOVE High-Value TO int-key
           ELSE
              MOVE Low-Value TO int-key
           END-IF
           .

      * intexe
       DataSet1-intexe-START.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY >= int-key
           ELSE
              START intexe KEY <= int-key
           END-IF
           .

       DataSet1-intexe-START-NOTGREATER.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY <= int-key
           ELSE
              START intexe KEY >= int-key
           END-IF
           .

       DataSet1-intexe-START-GREATER.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY > int-key
           ELSE
              START intexe KEY < int-key
           END-IF
           .

       DataSet1-intexe-START-LESS.
           IF DataSet1-intexe-KEY-Asc
              START intexe KEY < int-key
           ELSE
              START intexe KEY > int-key
           END-IF
           .

       DataSet1-intexe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-intexe-LOCK
              READ intexe WITH LOCK 
              KEY int-key
           ELSE
              READ intexe WITH NO LOCK 
              KEY int-key
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT 
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-intexe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-intexe-KEY-Asc
              IF DataSet1-intexe-LOCK
                 READ intexe NEXT WITH LOCK
              ELSE
                 READ intexe NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-intexe-LOCK
                 READ intexe PREVIOUS WITH LOCK
              ELSE
                 READ intexe PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-intexe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-intexe-KEY-Asc
              IF DataSet1-intexe-LOCK
                 READ intexe PREVIOUS WITH LOCK
              ELSE
                 READ intexe PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-intexe-LOCK
                 READ intexe NEXT WITH LOCK
              ELSE
                 READ intexe NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM intexe-int-k-desc-MERGE-SPLITBUF
           PERFORM intexe-int-k-effort-MERGE-SPLITBUF
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-intexe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-intexe TO TOTEM-ERR-STAT
           MOVE "intexe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:intexe, AfterDelete>
      * <TOTEM:END>
           .

       tmp-exe-mcg-tem-k-multi-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-mcg-tem-k-multi-SPLITBUF
           MOVE tem-exe-isMulti(1:1) TO 
           tmp-exe-mcg-tem-k-multi-SPLITBUF(1:1)
           MOVE tem-key(1:12) TO tmp-exe-mcg-tem-k-multi-SPLITBUF(2:12)
           .

       tmp-exe-mcg-tem-k-disab-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-mcg-tem-k-disab-SPLITBUF
           MOVE tem-exe-isDisable(1:1) TO 
           tmp-exe-mcg-tem-k-disab-SPLITBUF(1:1)
           MOVE tem-key(1:12) TO tmp-exe-mcg-tem-k-disab-SPLITBUF(2:12)
           .

       tmp-exe-mcg-tem-k-rp-MERGE-SPLITBUF.
           INITIALIZE tmp-exe-mcg-tem-k-rp-SPLITBUF
           MOVE tem-exe-isRestPause(1:1) TO 
           tmp-exe-mcg-tem-k-rp-SPLITBUF(1:1)
           MOVE tem-key(1:12) TO tmp-exe-mcg-tem-k-rp-SPLITBUF(2:12)
           .

       DataSet1-tmp-exe-mcg-INITSTART.
           IF DataSet1-tmp-exe-mcg-KEY-Asc
              MOVE Low-Value TO tem-key
           ELSE
              MOVE High-Value TO tem-key
           END-IF
           .

       DataSet1-tmp-exe-mcg-INITEND.
           IF DataSet1-tmp-exe-mcg-KEY-Asc
              MOVE High-Value TO tem-key
           ELSE
              MOVE Low-Value TO tem-key
           END-IF
           .

      * tmp-exe-mcg
       DataSet1-tmp-exe-mcg-START.
           IF DataSet1-tmp-exe-mcg-KEY-Asc
              START tmp-exe-mcg KEY >= tem-key
           ELSE
              START tmp-exe-mcg KEY <= tem-key
           END-IF
           .

       DataSet1-tmp-exe-mcg-START-NOTGREATER.
           IF DataSet1-tmp-exe-mcg-KEY-Asc
              START tmp-exe-mcg KEY <= tem-key
           ELSE
              START tmp-exe-mcg KEY >= tem-key
           END-IF
           .

       DataSet1-tmp-exe-mcg-START-GREATER.
           IF DataSet1-tmp-exe-mcg-KEY-Asc
              START tmp-exe-mcg KEY > tem-key
           ELSE
              START tmp-exe-mcg KEY < tem-key
           END-IF
           .

       DataSet1-tmp-exe-mcg-START-LESS.
           IF DataSet1-tmp-exe-mcg-KEY-Asc
              START tmp-exe-mcg KEY < tem-key
           ELSE
              START tmp-exe-mcg KEY > tem-key
           END-IF
           .

       DataSet1-tmp-exe-mcg-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-mcg-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-mcg-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-mcg-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeWrite>
      * <TOTEM:END>
           WRITE tem-rec OF tmp-exe-mcg.
           MOVE STATUS-tmp-exe-mcg TO TOTEM-ERR-STAT
           MOVE "tmp-exe-mcg" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-mcg-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-mcg TO TOTEM-ERR-STAT
           MOVE "tmp-exe-mcg" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-exe-mcg-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-exe-mcg TO TOTEM-ERR-STAT
           MOVE "tmp-exe-mcg" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-exe-mcg, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE exe-rec OF exercises
           INITIALIZE grp-rec OF groups
           INITIALIZE mcg-rec OF macrogroups
           INITIALIZE int-rec OF intexe
           INITIALIZE tem-rec OF tmp-exe-mcg
           .


      * GRID
       form1-gd-1-Content.
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 1, Y = 1,
                CELL-DATA = "Codice",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 3, Y = 1,
                CELL-DATA = "Desc. stampa",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 4, Y = 1,
                CELL-DATA = "Gruppo",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 5, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 6, Y = 1,
                CELL-DATA = "Macrogruppo",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 7, Y = 1,
                CELL-DATA = "Intensità",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 8, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 9, Y = 1,
                CELL-DATA = "Multi",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 10, Y = 1,
                CELL-DATA = 'Setting (")',
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 11, Y = 1,
                CELL-DATA = "R/P",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 12, Y = 1,
                CELL-DATA = "Disable",
           .

      * FD's Initialize Paragraph
       DataSet1-exercises-INITREC.
           INITIALIZE exe-rec OF exercises
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-groups-INITREC.
           INITIALIZE grp-rec OF groups
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-macrogroups-INITREC.
           INITIALIZE mcg-rec OF macrogroups
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-intexe-INITREC.
           INITIALIZE int-rec OF intexe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-exe-mcg-INITREC.
           INITIALIZE tem-rec OF tmp-exe-mcg
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form1-Buf-To-Fld
           END-EVALUATE
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              SCREEN LINE 1,
              SCREEN COLUMN 0,
              LINES 37,91,
              SIZE 172,90,
              COLOR 131329,
              CONTROL FONT Calibri14-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Form1-Event-Proc,
              HANDLE IS Form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 3,35,   
              CONTROL FONT IS Calibri14-Occidentale
              HANDLE IN Form1-Tb-1-Handle
           DISPLAY Form1-Tb-1 UPON Form1-Tb-1-Handle

      * Status-bar
           DISPLAY Form1 UPON Form1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY form1-gd-1, DISPLAY-COLUMNS (1, 9, 47, 65, 72, 97, 
           115, 123, 138, 146, 154, 161)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           perform ABILITA-TOOLBAR.

           perform INTESTAZIONE.
           set ord-mcg-asc to true.
           perform LOAD-TMP-EXE-MCG.
           perform LOAD-RECORD.

           move 2  to event-data-2.
           perform SPOSTAMENTO.

           perform INIT.

           |specifico dei pgm. con grid-control
           perform ABILITAZIONI.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      *    per il bottone modifica
           if key-status = 5
              inquire tool-modifica, enabled in e-modifica
              if e-modifica = 1
                 if mod = zero
                    move 1    to mod
                 else 
                    move zero to mod
                 end-if
                 modify tool-modifica, value = mod
                 perform MODIFICA
              end-if
           end-if.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 2
                 PERFORM NUOVO-LinkTo
              WHEN Key-Status = 4
                 PERFORM CANCELLA-LinkTo
              WHEN Key-Status = 3
                 PERFORM TOOL-SALVA-LinkTo
              WHEN Key-Status = 1005
                 PERFORM TOOL-MODIFICA-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1
           DISPLAY Form1 UPON Form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
           perform SALV-MOD.
           if errori
              move 28 to key-status
              exit paragraph
           end-if.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM form1-gd-1-Content
           .

       Form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-exercises-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-exercises-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Update-Key.
           MOVE exe-rec OF exercises TO
                     Form1-MULKEY-TMPBUF
           PERFORM Form1-CLEAR
           PERFORM Form1-INIT-DATA
           MOVE Form1-MULKEY-TMPBUF TO
                     exe-rec OF exercises
           PERFORM DataSet1-exercises-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
           .

       Form1-DUPLICATE-MOVEKEY.
           .

       Form1-First.
           PERFORM Form1-DUMMY-FIRST
           PERFORM DataSet1-exercises-INITSTART
           PERFORM DataSet1-exercises-START
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-exercises-Read-Next
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFirst>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Previous.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-exercises-START-LESS
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-exercises-Read-Prev
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-PREVIOUS
           PERFORM Form1-IUD-Display
           .

       Form1-Next.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-exercises-START-GREATER
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-exercises-Read-Next
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterNext>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-NEXT
           PERFORM Form1-IUD-Display
           .
      
       Form1-Last.
           PERFORM Form1-DUMMY-LAST
           PERFORM DataSet1-exercises-INITEND
           PERFORM DataSet1-exercises-START-NOTGREATER
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-exercises-Read-Prev
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterLast>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Curr.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-exercises-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCurrent>
      * <TOTEM:END>
           .

       Form1-IUD-Display.
           IF Valid-STATUS-exercises
              PERFORM Form1-ALLGRID-RESET
              PERFORM Form1-Fld-To-Buf
              PERFORM Form1-NAVI-FOR-MASTERGRID
              PERFORM Form1-DISPLAY
           ELSE
              IF Form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form1-Extended-File-Status
              END-IF
           END-IF
           .

       Form1-Add.
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-ADD
           PERFORM DataSet1-exercises-INITREC
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-exercises-Rec-Write
           IF Valid-STATUS-exercises
              PERFORM Form1-RESUMMARY-INS
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAdd>
      * <TOTEM:END>
           .
     
       Form1-Update.
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-exercises-START              
           IF NOT Valid-STATUS-exercises
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-exercises-Read
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-UPDATE
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-exercises-Rec-Rewrite
           IF Valid-STATUS-exercises
              PERFORM Form1-RESUMMARY-DEL
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterUpdate>
      * <TOTEM:END>
           .

       Form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form1-DUMMY-DELETE
      * delete
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-exercises-Rec-Delete
           IF Valid-STATUS-exercises
              PERFORM Form1-CLEAR
              PERFORM Form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-exercises
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDelete>
      * <TOTEM:END>
           PERFORM Form1-ERR-CHECKING
           .

       Form1-NAVI-FOR-MASTERGRID.
           .

       Form1-ERR-CHECKING.
           IF Valid-STATUS-exercises
              PERFORM Form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form1-Extended-File-Status
           END-IF
           .

       Form1-RESUMMARY-INS.
           .

       Form1-RESUMMARY-DEL.
           .


       Form1-DUMMY-FIRST.
           .

       Form1-DUMMY-PREVIOUS.
           .

       Form1-DUMMY-NEXT.
           .

       Form1-DUMMY-LAST.
           .

       Form1-DUMMY-CURR.
           .

       Form1-DUMMY-ADD.
           .

       Form1-DUMMY-UPDATE.
           .

       Form1-DUMMY-UPDATE-INIT.
           .

       Form1-DUMMY-DELETE.
           .

       Form1-DUMMY-DELETE-INIT.
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * FORM : Form1
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
           set SiSalvato to true.

           .
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           MOVE DataSet1-exercises-KEY1-ORDER TO TMP-Form1-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form1-KEYIS
           MOVE exe-rec OF exercises TO 
              TMP-Form1-exercises-RESTOREBUF
           .             

       Form1-Restore-Status.
           MOVE TMP-Form1-KEY1-ORDER TO DataSet1-exercises-KEY1-ORDER
           MOVE TMP-Form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form1-exercises-RESTOREBUF TO
              exe-rec OF exercises
           PERFORM DataSet1-exercises-START
           IF Valid-STATUS-exercises
              PERFORM DataSet1-exercises-Read-Next
           ELSE
              PERFORM DataSet1-exercises-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-exercises OR
              (Valid-STATUS-exercises AND
                 exe-rec OF exercises = 
                   TMP-Form1-exercises-RESTOREBUF)
              PERFORM DataSet1-exercises-Read-Next
           END-PERFORM
           .



       Form1-Event-Proc.
           .

       Form1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Heading-Clicked ALSO 1 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Heading-Clicked
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       ABILITAZIONI.
      * <TOTEM:PARA. ABILITAZIONI>
           if mod = 1
              move BitmapDeleteEnabled to BitmapNumDelete
              move BitmapSaveEnabled   to BitmapNumSave
              move 1 to e-salva e-cancella
           else
              |se sono in visua           
              move BitmapDeleteDisabled to BitmapNumDelete
              move BitmapSaveDisabled   to BitmapNumSave
              move 0 to e-salva e-cancella
           end-if.     

      ****** ISACCO (CORREZIONE SU LIVELLO ABILITAZIONE 2) - 10/11/2003
      ****** (CANCELLAZIONE NON PERMESSA)
      *****     if livello-abil = 2 
      *****        move ZERO to e-cancella
      *****        move BitmapDeleteDisabled to BitmapNumDelete
      *****     end-if.
      ****** FINE

           modify tool-cancella, enabled = e-cancella.
           modify tool-salva,    enabled = e-salva.
       
      * ISACCO (SERVE SEMPRE PER LA MODIFICA PRCEDENTE E PER RIPRISTINARE
      * LE BITMAP DISABILITATE. - 10/11/2003
      *     perform FORM1-DISPLAY.
           display tool-nuovo, tool-salva, tool-cancella, tool-modifica.
      * FINE 
           .
      * <TOTEM:END>

       ANTEPRIMA.
      * <TOTEM:PARA. ANTEPRIMA>
           set anteprima       to true.
      *     perform paragrafo-stampa 
           .
      * <TOTEM:END>

       CANCELLA.
      * <TOTEM:PARA. CANCELLA>
      * <TOTEM:PARA. CANCELLA>
      *--->modifica (isacco)
           if mod = 0 exit paragraph end-if.
      *--->fine.                 

           display message box MSG-cancellare-il-record-corrente
                   title = titolo
                   type mb-yes-no
                   default mb-no
                   giving scelta.

           if scelta = mb-yes

              inquire form1-gd-1, cursor-y in riga
              perform VALORE-RIGA

              delete exercises record invalid continue end-delete

              modify  form1-gd-1, record-to-delete = riga
              inquire form1-gd-1, last-row in tot-righe
              if riga > tot-righe move tot-righe to riga end-if
              modify form1-gd-1, cursor-y = riga, cursor-x = 1
              move riga to event-data-2
              perform COLORE-RIGA
              display message MSG-cancellazione-avvenuta-con-successo
                        title titolo
           end-if 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate colonna
           when 78-col-grp-code
                inquire form1-gd-1(riga, colonna), cell-data in grp-code
                move "groups"       to Como-File
                call   "zoom-gt" using como-file, grp-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move grp-code to col-group mcg-code 
                   move grp-desc to col-grp-desc                     
                   read macrogroups no lock invalid move spaces to 
           mcg-desc end-read
                   modify form1-gd-1(riga, 78-col-grp-code), cell-data 
           col-group   
                   modify form1-gd-1(riga, 78-col-grp-desc), cell-data 
           col-grp-desc
                   modify form1-gd-1(riga, 78-col-mcg-desc), cell-data 
           col-mcg-desc
                end-if 
           when 78-col-int-code
                inquire form1-gd-1(riga, colonna), cell-data in int-code
                move "intexe"    to Como-File
                call   "zoom-gt" using como-file, int-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move int-code to col-intensity
                   move int-desc to col-int-desc                     
                   modify form1-gd-1(riga, 78-col-int-code), cell-data 
           col-intensity
                   modify form1-gd-1(riga, 78-col-int-desc), cell-data 
           col-int-desc
                end-if 
           end-evaluate  
           .
      * <TOTEM:END>

       COLORE-RIGA.
      * <TOTEM:PARA. COLORE-RIGA>
           if riga < 2 
              move 2 to riga 
           end-if.

           modify form1-gd-1, start-x = 1, x     = 12,
                                  start-y = riga,
                                        y = riga,
                                  region-color 257,
                                  cursor-color 481 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.
           if mod = 0 exit paragraph end-if.

           inquire form1-gd-1, cursor-y in riga.

           perform VALORE-RIGA.

           evaluate colonna
           when 78-col-code
                if nuovo
                   if exe-code = zero or spaces 
                      set errori to true
                      display message box MSG-Codice-obbligatorio
                              title = tit-err
                              icon mb-warning-icon
                   else  
                      read exercises
                           not invalid
                               set errori to true
                               display message MGS-codice-gia-inserito|"Codice già inserito!"
                                       title = tit-err
                                       icon mb-warning-icon
                      end-read
                   end-if
                end-if     
           when 78-col-desc
                if exe-desc = spaces
                   set errori to true   
                   display message box MSG-Descrizione-mancante|"Descrizione mancante"
                           title = tit-err
                           icon mb-warning-icon
                else
                   if exe-desc-stampa = spaces 
                      move exe-desc to exe-desc-stampa
                      modify form1-gd-1(riga, 78-col-desc-stampa), 
           cell-data = exe-desc-stampa
                   end-if
                end-if    
           when 78-col-desc-stampa
                if exe-desc-stampa = spaces 
                   move exe-desc to exe-desc-stampa
                   modify form1-gd-1(riga, 78-col-desc-stampa), 
           cell-data = exe-desc-stampa
                end-if
           when 78-col-grp-code
                move exe-grp-code to grp-code
                read groups no lock 
                     invalid 
                     move spaces to grp-desc mcg-desc
                     set errori to true
                     display message "Gruppo non valido"
                           title = tit-err
                           icon mb-warning-icon
                 not invalid
                     move grp-mcg-code to mcg-code
                     read macrogroups no lock invalid move spaces to 
           mcg-desc end-read
                end-read                                      
                modify form1-gd-1(riga, 78-col-grp-desc), cell-data 
           grp-desc
                modify form1-gd-1(riga, 78-col-mcg-desc), cell-data 
           mcg-desc  
           when 78-col-grp-desc
                move exe-int-code to int-code
                read intexe no lock 
                     invalid 
                     move spaces to int-desc 
                     set errori to true
                     display message "Intensità non valida"
                           title = tit-err
                           icon mb-warning-icon
                end-read                                      
                modify form1-gd-1(riga, 78-col-int-desc), cell-data 
           int-desc  

           when 78-col-isMulti
                if not (exe-isMulti = 0 or 1)
                   set errori to true
                   display message "Valori consentiti 1/0"
                           title = tit-err
                           icon mb-warning-icon
                end-if

           when 78-col-setting
                if exe-setting = 0
                   set errori to true
                   display message "Valore obbligatorio"
                           title = tit-err
                           icon mb-warning-icon
                end-if    

           when 78-col-restpause
                if not (exe-isRestpause = 0 or 1)
                   set errori to true
                   display message "Valori consentiti 1/0"
                           title = tit-err
                           icon mb-warning-icon
                end-if

           when 78-col-disable
                if not (exe-isDisable = 0 or 1)
                   set errori to true
                   display message "Valori consentiti 1/0"
                           title = tit-err
                           icon mb-warning-icon
                end-if

           end-evaluate.

           if errori
              modify form1-gd-1, cursor-y = riga, cursor-x = colonna
              move riga    to event-data-2
              move colonna to event-data-1
           end-if 
           .
      * <TOTEM:END>

       INIT.
      * <TOTEM:PARA. INIT>
           set vecchio  to true.
           set tutto-ok to true 
           .
      * <TOTEM:END>

       INTESTAZIONE.
      * <TOTEM:PARA. INTESTAZIONE>
           perform FORM1-GD-1-CONTENT 
           .
      * <TOTEM:END>

       LOAD-RECORD.
      * <TOTEM:PARA. LOAD-RECORD>
           modify form1-gd-1, mass-update = 1, reset-grid = 1.

           perform FORM1-GD-1-CONTENT.

           evaluate true 
           when ord-code-asc
                move low-value to exe-rec
                modify form1-gd-1(1, 78-col-code), cell-data = "Codice <
      -    "<"
                start exercises key is >= exe-key
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read exercises next
                              at end exit perform
                          not at end perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-code-disc
                move high-value to exe-rec
                modify form1-gd-1(1, 78-col-code), cell-data = "Codice >
      -    ">"
                start exercises key is <= exe-key
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read exercises previous
                              at end exit perform
                          not at end perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start                           
           when ord-desc-asc                 
                move low-value to exe-rec
                modify form1-gd-1(1, 78-col-desc), cell-data = "Descrizi
      -    "one <<"
                start exercises key is >= exe-k-desc
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read exercises next
                              at end exit perform
                          not at end perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-desc-disc
                move high-value to exe-rec
                modify form1-gd-1(1, 78-col-desc), cell-data = "Descrizi
      -    "one >>"
                start exercises key is <= exe-k-desc
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read exercises previous
                              at end exit perform
                          not at end perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-mcg-asc
                move low-value to tem-rec
                modify form1-gd-1(1, 78-col-mcg-desc), cell-data = "Macr
      -    "ogruppo <<"
                start tmp-exe-mcg key is >= tem-key
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg next
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start 
           when ord-mcg-disc                       
                move high-value to tem-rec
                modify form1-gd-1(1, 78-col-mcg-desc), cell-data = "Macr
      -    "ogruppo >>"
                start tmp-exe-mcg key is <= tem-key
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg previous
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-multi-asc
                move low-value to tem-rec
                modify form1-gd-1(1, 78-col-ismulti), cell-data = "Multi
      -    " <<"
                start tmp-exe-mcg key is >= tem-k-multi
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg next
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-multi-disc                       
                move high-value to tem-rec
                modify form1-gd-1(1, 78-col-ismulti), cell-data = "Multi
      -    " >>"
                start tmp-exe-mcg key is <= tem-k-multi
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg previous
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-rp-asc
                move low-value to tem-rec
                modify form1-gd-1(1, 78-col-restpause), cell-data = "R/P
      -    " <<"
                start tmp-exe-mcg key is >= tem-k-rp
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg next
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-rp-disc                       
                move high-value to tem-rec
                modify form1-gd-1(1, 78-col-restpause), cell-data = "R/P
      -    " >>"
                start tmp-exe-mcg key is <= tem-k-rp
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg previous
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-disable-asc                       
                move low-value to tem-rec
                modify form1-gd-1(1, 78-col-disable), cell-data = "Disab
      -    "le <<"
                start tmp-exe-mcg key is >= tem-k-disab
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg next
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           when ord-disable-disc                       
                move high-value to tem-rec
                modify form1-gd-1(1, 78-col-disable), cell-data = "Disab
      -    "le >>"
                start tmp-exe-mcg key is <= tem-k-disab
                      invalid continue
                  not invalid 
                      move 1 to riga
                      perform until 1 = 2
                         read tmp-exe-mcg previous
                              at end exit perform
                          not at end 
                              move tem-exe-code to exe-code
                              read exercises
                              perform RECORD-TO-GRID
                         end-read
                      end-perform
                end-start
           end-evaluate.
                
           modify form1-gd-1, mass-update = 0.

      ***---
       RECORD-TO-GRID.
           add 1 to riga.
           move exe-code        to col-codice
           move exe-desc        to col-des
           move exe-grp-code    to col-group grp-code
           read groups no lock invalid move spaces to grp-desc end-read
           move grp-mcg-code to mcg-code                                
             
           read macrogroups no lock invalid move spaces to mcg-desc 
           end-read
           move grp-desc to col-grp-desc
           move mcg-desc to col-mcg-desc
           move exe-int-code to col-intensity int-code
           read intexe no lock invalid move spaces to int-desc end-read
           move int-desc      to col-int-desc
           move exe-isMulti   to col-isMulti
           move exe-setting   to col-setting
           move exe-isRestpause to col-restpause
           move exe-isDisable   to col-disab
           move exe-desc-stampa to col-des-stampa.
           modify form1-gd-1(riga, 78-col-code),        cell-data 
           col-codice.
           modify form1-gd-1(riga, 78-col-desc),        cell-data 
           col-des.  
           modify form1-gd-1(riga, 78-col-desc-stampa), cell-data 
           col-des-stampa.  
           modify form1-gd-1(riga, 78-col-grp-code),    cell-data 
           col-group.   
           modify form1-gd-1(riga, 78-col-grp-desc),    cell-data 
           col-grp-desc.
           modify form1-gd-1(riga, 78-col-mcg-desc),    cell-data 
           col-mcg-desc.
           modify form1-gd-1(riga, 78-col-int-code),    cell-data 
           col-intensity.
           modify form1-gd-1(riga, 78-col-int-desc),    cell-data 
           col-int-desc.
           modify form1-gd-1(riga, 78-col-ismulti),     cell-data 
           col-isMulti.
           modify form1-gd-1(riga, 78-col-setting),     cell-data 
           col-setting.
           modify form1-gd-1(riga, 78-col-restpause),   cell-data 
           col-restpause.
           modify form1-gd-1(riga, 78-col-disable),     cell-data 
           col-disab 
           .
      * <TOTEM:END>

       LOAD-TMP-EXE-MCG.
      * <TOTEM:PARA. LOAD-TMP-EXE-MCG>
           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  path-tmp-exe-mcg from environment "PATH_ST".
           inspect path-tmp-exe-mcg replacing trailing spaces by 
           low-value.
           string  path-tmp-exe-mcg delimited low-value
                   "tmp-exe-mcg_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
              into path-tmp-exe-mcg
           end-string.                                                  
                 
           inspect path-tmp-exe-mcg replacing trailing low-value by 
           spaces.
           open output tmp-exe-mcg.    
           close       tmp-exe-mcg.
           open i-o    tmp-exe-mcg.

           move low-value to exe-key.
           start exercises key >= exe-key
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read exercises next at end exit perform end-read
                    move exe-code     to tem-exe-code
                    move exe-int-code to tem-int-code
                    move exe-grp-code to grp-code         
                    move exe-isDisable    to tem-exe-isDisable
                    move exe-isRestPause  to tem-exe-isRestPause
                    move exe-isMulti      to tem-exe-isMulti
                    read groups no lock
                    move grp-mcg-code to tem-mcg-code
                    write tem-rec
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       MODIFICA.
      * <TOTEM:PARA. MODIFICA>
           inquire tool-modifica, value in mod.

      *--->modifica (isacco)
           if nuovo 
              move 1 to mod 
           else
              |specifico per i pgm. con grid-control
              if mod = 1
                 close exercises
                 open i-o exercises allowing readers
              else
                 set tutto-ok to true
                 if NoSalvato
                    move 1 to mod
                    perform SALV-MOD
                 end-if   
                 if tutto-ok
                    move 0 to mod
                    close exercises
                    open input exercises

      *             | specifico x le tabelle.
                    | fa in modo che resto sulla cella in cui ero
                    if ricarica
                       set ricarica to false
                       modify form1-gd-1, reset-grid = 1
                       perform INTESTAZIONE
                       perform LOAD-RECORD
                    end-if

                 else
                    move 1 to mod
                 end-if
              end-if
           end-if.

           perform ABILITAZIONI.

           modify tool-modifica, value mod 
           .
      * <TOTEM:END>

       NUOVO.
      * <TOTEM:PARA. NUOVO>
           set tutto-ok to true.

           if nuovo
              perform VALORE-RIGA
              if exe-code not = spaces
                 perform SALVA
              else
                 set errori to true
              end-if
           end-if.

           if tutto-ok
              set nuovo to true
              inquire form1-gd-1,  last-row in tot-righe
              modify  form1-gd-1,  insert-rows = 1
              modify  form1-gd-1,  cursor-x    = 1 
                                   cursor-y    = tot-righe + 1
              move 1 to mod
              modify  tool-modifica,   value = mod

              add 1 to tot-righe giving riga

              perform ABILITAZIONI

              initialize old-exe-rec replacing numeric data by zeroes
                                          alphanumeric data by spaces
              add 1 to tot-righe giving event-data-2
              perform COLORE-RIGA
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "abilita-toolbar.cpy".
           copy "color-custom.cpy"    
           .
      * <TOTEM:END>

       SALV-MOD.
      * <TOTEM:PARA. SALV-MOD>
           if nuovo
              perform VALORE-RIGA
              if exe-rec not = old-exe-rec
                 set NoSalvato to true
              else
                 set SiSalvato to true
              end-if
           end-if.

           set tutto-ok to true.
           if NoSalvato
              display message box MSG-Salvare-le-modifiche, 
                             title = titolo
                             type = mb-yes-no-cancel
                             giving scelta

              evaluate scelta
              when mb-yes    perform SALVA
              when mb-cancel set errori    to true
              when mb-no     set tutto-ok  to true
                             set SiSalvato to true
                             set ricarica  to true
              end-evaluate

           end-if 
           .
      * <TOTEM:END>

       SALVA.
      * <TOTEM:PARA. SALVA>
           if sisalvato or mod = 0 exit paragraph end-if.

           inquire form1-gd-1, cursor-x in colonna, 
                               cursor-y in riga.

           perform varying colonna from 78-col-code by 1
                     until colonna > 78-col-disable
              perform CONTROLLO
              if errori exit perform end-if
           end-perform.

           if tutto-ok
              write exe-rec
                    invalid rewrite exe-rec
              end-write

              set sisalvato to true
              set vecchio   to true
           else
              perform ABILITAZIONI
           end-if 
            
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire form1-gd-1, cursor-x = colonna, cursor-y = riga.

           if event-data-2 not = riga
              perform VALORE-RIGA
              if exe-code = spaces or zero
                 modify form1-gd-1, record-to-delete riga
                 set vecchio to true
              else  
                 perform SALVA
                 if errori
                    move riga    to event-data-2
                    move colonna to event-data-1 | (isacco)
                    set event-action to event-action-fail
                 end-if
              end-if
           else
              if colonna not = event-data-1
                 perform CONTROLLO
                 if errori
                    set event-action to event-action-fail
                 end-if
              end-if
           end-if.

      * VALORIZZO L'OLD DELLA RIGA SU CUI SONO ANDATO
           move event-data-2 to riga.
           move event-data-1 to colonna.
           perform VALORE-OLD-RIGA.

      * COLORAZIONE RIGA IN GRID
           perform COLORE-RIGA.

           if mod = 1 and ( colonna = 78-col-int-code or 
           78-col-grp-code)
              move BitmapZoomEnabled to bmpNum
              modify tool-cerca, bitmap-number = bmpNum, enabled true
           else
              move BitmapZoomDisabled to bmpNum
              modify tool-cerca, bitmap-number = bmpNum, enabled false
           end-if               
           .
      * <TOTEM:END>

       STAMPA.
      * <TOTEM:PARA. STAMPA>
           set stampa       to true.
      *     perform paragrafo-stampa 
           .
      * <TOTEM:END>

       VALORE-RIGA.
      * <TOTEM:PARA. VALORE-RIGA>
           inquire form1-gd-1(riga, 78-col-code),        cell-data 
           exe-code.
           inquire form1-gd-1(riga, 78-col-desc),        cell-data 
           exe-desc.  
           inquire form1-gd-1(riga, 78-col-desc-stampa), cell-data 
           exe-desc-stampa
           inquire form1-gd-1(riga, 78-col-grp-code),    cell-data 
           exe-grp-code.
           inquire form1-gd-1(riga, 78-col-int-code),    cell-data 
           exe-int-code.
           inquire form1-gd-1(riga, 78-col-ismulti),     cell-data 
           exe-isMulti.
           inquire form1-gd-1(riga, 78-col-setting),     cell-data 
           exe-setting.
           inquire form1-gd-1(riga, 78-col-restpause),   cell-data 
           exe-isRestpause. 
           inquire form1-gd-1(riga, 78-col-disable),     cell-data 
           exe-isDisable  
           .
      * <TOTEM:END>

       VALORE-OLD-RIGA.
      * <TOTEM:PARA. VALORE-OLD-RIGA>
           if vecchio
              inquire form1-gd-1(riga, 78-col-code) cell-data 
           old-exe-code
              move old-exe-code           to exe-code
              read exercises              no lock
              move exe-rec                to old-exe-rec
           else
              initialize old-exe-rec replacing numeric data by zeroes
                                          alphanumeric data by spaces
           end-if 

           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       NUOVO-LinkTo.
      * <TOTEM:PARA. NUOVO-LinkTo>
           inquire tool-nuovo, enabled in e-nuovo.
           if e-nuovo = 1
              perform NUOVO
           end-if 

           .
      * <TOTEM:END>
       CANCELLA-LinkTo.
      * <TOTEM:PARA. CANCELLA-LinkTo>
           inquire tool-cancella, enabled in e-cancella.
           if e-cancella = 1
              perform CANCELLA
           end-if 
           .
      * <TOTEM:END>
       TOOL-SALVA-LinkTo.
      * <TOTEM:PARA. TOOL-SALVA-LinkTo>
           inquire tool-salva, enabled in e-salva.
           if e-salva = 1
              perform salva
           end-if 
           .
      * <TOTEM:END>
       TOOL-MODIFICA-LinkTo.
      * <TOTEM:PARA. TOOL-MODIFICA-LinkTo>
           inquire tool-modifica, enabled in e-modifica
           if e-modifica = 1
              perform MODIFICA
           end-if 
           .
      * <TOTEM:END>
       I-O-BLOCCO.
      * <TOTEM:PARA. I-O-BLOCCO>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       PAS004P-Ev-Before-Program.
      * <TOTEM:PARA. PAS004P-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Finish-Entry>
           inquire form1-gd-1, cursor-y in riga.
           perform VALORE-RIGA.

           set environment "KEYSTROKE" to "DATA=44 44".
           set environment "KEYSTROKE" to "DATA=46 46".

           perform  CONTROLLO.

           if errori 
              set event-action to event-action-fail 
              perform VALORE-RIGA
           end-if.

           if exe-rec not = old-exe-rec
              set NoSalvato to true                            
           else 
              set SiSalvato to true
           end-if 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Entry>
           inquire form1-gd-1, cursor-x = colonna,
                                   cursor-y in riga.
                         
           perform VALORE-RIGA.

           if colonna = 1
              if exe-code not = zero and exe-code not = spaces
                 set event-action to event-action-fail
              end-if
           else 
              if mod = 0
                 set event-action to event-action-fail
              else
                 if exe-code = zero or spaces
                    set event-action to event-action-fail
                    modify form1-gd-1, cursor-y = riga, cursor-x = 1
                 else
                    if colonna = 4 or 5 or 7                           
                       set event-action to event-action-fail
                    end-if
                 end-if   
              end-if
           end-if 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       TOOL-MODIFICA-BeforeProcedure.
      * <TOTEM:PARA. TOOL-MODIFICA-BeforeProcedure>
           .
      * <TOTEM:END>
       TOOL-MODIFICA-AfterProcedure.
      * <TOTEM:PARA. TOOL-MODIFICA-AfterProcedure>
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Heading-Clicked.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Heading-Clicked>
           evaluate event-data-1         
           when 78-col-code
                if ord-code-asc
                   set ord-code-disc to true
                else                        
                   set ord-code-asc to true
                end-if
                perform LOAD-RECORD

           when 78-col-desc       
                if ord-desc-asc
                   set ord-desc-disc to true
                else                        
                   set ord-desc-asc to true
                end-if
                perform LOAD-RECORD

           when 78-col-mcg-desc
                if ord-mcg-asc
                   set ord-mcg-disc to true
                else                        
                   set ord-mcg-asc to true
                end-if                  
                perform LOAD-TMP-EXE-MCG
                perform LOAD-RECORD
                close       tmp-exe-mcg
                delete file tmp-exe-mcg 

           when 78-col-restpause
                if ord-rp-asc
                   set ord-rp-disc to true
                else                        
                   set ord-rp-asc to true
                end-if                  
                perform LOAD-TMP-EXE-MCG
                perform LOAD-RECORD
                close       tmp-exe-mcg     
                delete file tmp-exe-mcg

           when 78-col-isMulti
                if ord-multi-asc
                   set ord-multi-disc to true
                else                        
                   set ord-multi-asc to true
                end-if                 
                perform LOAD-TMP-EXE-MCG
                perform LOAD-RECORD
                close       tmp-exe-mcg
                delete file tmp-exe-mcg 

           when 78-col-restPause
                if ord-multi-asc
                   set ord-multi-disc to true
                else                        
                   set ord-multi-asc to true
                end-if                 
                perform LOAD-TMP-EXE-MCG
                perform LOAD-RECORD
                close       tmp-exe-mcg
                delete file tmp-exe-mcg 

           when 78-col-disable
                if ord-disable-asc
                   set ord-disable-disc to true
                else                        
                   set ord-disable-asc to true
                end-if                 
                perform LOAD-TMP-EXE-MCG
                perform LOAD-RECORD
                close       tmp-exe-mcg
                delete file tmp-exe-mcg 
           end-evaluate                         
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

